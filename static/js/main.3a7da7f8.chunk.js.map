{"version":3,"sources":["synapse/authProvider.js","synapse/dataProvider.js","components/ServerNotices.js","components/devices.js","components/media.js","components/users.js","components/RoomDirectory.js","components/rooms.js","components/EventReports.js","components/LoginPage.js","components/statistics.js","components/ImportFeature.js","components/RegistrationTokens.js","i18n/de.js","i18n/en.js","App.js","i18n/zh.js","index.js"],"names":["authProvider","login","base_url","username","password","loginToken","process","console","log","options","method","body","JSON","stringify","Object","assign","device_id","localStorage","getItem","initial_device_display_name","type","token","user","replace","setItem","login_api_url","window","decodeURIComponent","fetchUtils","fetchJson","then","json","home_server","user_id","access_token","logout","logout_api_url","authenticated","removeItem","Promise","resolve","checkError","status","reject","checkAuth","getPermissions","jsonClient","url","mxcUrlToHttp","mxcUrl","homeserver","ret","exec","serverName","mediaId","resourceMap","users","path","map","u","id","name","avatar_src","avatar_url","is_guest","admin","vip","deactivated","creation_ts_ms","creation_ts","data","total","create","endpoint","delete","params","erase","rooms","r","room_id","alias","canonical_alias","members","joined_members","is_encrypted","encryption","federatable","public","total_rooms","block","reports","er","devices","d","reference","connections","c","room_members","m","room_state","rs","event_id","state","length","pushers","p","pushkey","joined_rooms","jr","users_media","um","media_id","delete_media","before_ts","size_gt","keep_profiles","protect_media","pm","quarantine_media","qm","servernotices","n","content","msgtype","user_media_statistics","usms","forward_extremities","fe","count","room_directory","rd","guest_access","total_room_count_estimate","visibility","registration_tokens","rt","filterNullValues","key","value","getSearchOrder","order","dataProvider","getList","resource","filter","guests","search_term","valid","pagination","page","perPage","sort","field","from","query","limit","order_by","dir","res","endpoint_url","getOne","getMany","all","ids","responses","getManyReference","ref","headers","update","updateMany","createMany","cre","del","deleteMany","ServerNoticeDialog","open","loading","onClose","onSend","translate","useTranslate","ServerNoticeToolbar","props","Toolbar","SaveButton","label","disabled","pristine","Button","onClick","Dialog","DialogTitle","DialogContent","DialogContentText","SimpleForm","toolbar","submitOnEnter","redirect","save","TextInput","source","fullWidth","multiline","rows","resettable","validate","required","ServerNoticeButton","record","useState","setOpen","notify","useNotify","useCreate","handleDialogClose","values","payload","onSuccess","onFailure","ServerNoticeBulkButton","selectedIds","unselectAll","useUnselectAll","useMutation","error","useStyles","makeStyles","theme","deleteButton","color","palette","main","backgroundColor","alpha","DeviceRemoveButton","classes","refresh","useRefresh","removeDevice","className","classnames","Confirm","isOpen","onConfirm","title","translateOptions","display_name","DeleteMediaDialog","DeleteMediaToolbar","icon","DateTimeInput","defaultValue","parse","v","Date","isNaN","getTime","NumberInput","min","step","BooleanInput","DeleteMediaButton","useDelete","deleteOne","ProtectMediaButton","quarantined_by","Tooltip","_","safe_from_quarantine","arrow","QuarantineMediaButton","pathname","small","height","width","large","float","date_format","year","month","day","hour","minute","second","UserListActions","currentSort","filters","displayedFilters","exporter","filterValues","permanentFilter","basePath","hasCreate","showFilter","onUnselectItems","maxResults","rest","TopToolbar","sanitizeListRestProps","cloneElement","context","CreateButton","ExportButton","component","Link","to","style","transform","fontSize","defaultProps","UserPagination","Pagination","rowsPerPageOptions","UserFilter","Filter","SearchInput","alwaysOn","UserBulkActionButtons","BulkDeleteButton","confirmTitle","mutationMode","AvatarField","Avatar","src","UserList","List","filterDefaultValues","actions","bulkActionButtons","Datagrid","rowClick","sortBy","TextField","BooleanField","DateField","showTime","validateUser","maxLength","regex","validateAddress","generateRandomUser","Array","fill","x","Math","floor","crypto","getRandomValues","Uint32Array","join","UserEditToolbar","DeleteButton","smart_count","UserCreate","Create","autoComplete","PasswordInput","ArrayInput","SimpleFormIterator","SelectInput","choices","UserTitle","displayname","UserEdit","Edit","TabbedForm","FormTab","sortable","helperText","ReferenceManyField","target","addLabel","ReferenceField","link","ArrayField","NumberField","RoomDirectoryPagination","RoomDirectoryDeleteButton","confirmContent","RoomDirectoryBulkDeleteButton","RoomDirectoryBulkSaveButton","RoomDirectorySaveButton","RoomDirectoryBulkActionButtons","RoomDirectoryFilter","Chip","marginBottom","RoomDirectoryList","connect","roomDirectoryFilters","resources","list","dispatch","roomIdFilter","topicFilter","topic","canonicalAliasFilter","helper_forward_extremities","fontFamily","margin","RoomPagination","EncryptionField","emptyText","get","ariaLabel","Typography","variant","htmlColor","RoomTitle","RoomShowActions","roomDirectoryStatus","RoomShow","Show","TabbedShowLayout","Tab","SelectField","RoomBulkActionButtons","RoomFilter","RoomNameField","useRecordContext","RoomList","roomFilters","localMembersFilter","joined_local_members","stateEventsFilter","state_events","versionFilter","version","federateableFilter","ReportPagination","ReportShow","ReportList","display","flexDirection","minHeight","alignItems","justifyContent","background","backgroundRepeat","backgroundSize","card","minWidth","marginTop","avatar","secondary","hint","grey","form","padding","input","serverVersion","marginLeft","LoginPage","useLogin","setLoading","supportPassAuth","setSupportPassAuth","locale","useLocale","setLocale","useSetLocale","cfg_base_url","ssoBaseUrl","setSSOBaseUrl","location","href","ssoToken","history","replaceState","split","baseUrl","auth","catch","alert","message","renderInput","meta","touched","inputProps","handleSSO","ssoFullUrl","encodeURIComponent","UserData","formData","useForm","setServerVersion","useEffect","match","versionUrl","authMethodUrl","supportPass","supportSSO","flows","forEach","f","autoFocus","onBlur","initialValues","onSubmit","errors","render","handleSubmit","noValidate","Card","Select","onChange","e","MenuItem","FormDataConsumer","formDataProps","CardActions","button","CircularProgress","size","thickness","Notification","ListActions","useListContext","UserMediaStatsPagination","UserMediaStatsFilter","UserMediaStatsList","expectedFields","optionalFields","TranslatableOption","text","ImportFeature","setValues","setError","stats","setStats","dryRun","setDryRun","progress","setProgress","importResults","setImportResults","skippedRecords","setSkippedRecords","conflictMode","setConflictMode","passwordMode","setPasswordMode","useridMode","setUseridMode","useDataProvider","onFileChange","a","file","files","toFixed","parseCsv","header","skipEmptyLines","complete","result","verifyCsv","eF","oF","fields","includes","user_types","default","line","idx","undefined","user_type","is_admin","push","row","runImport","doImport","results","unparseCsv","erroredRecords","succeededRecords","changeStats","toAdmin","toGuest","toRegular","replacedPassword","entriesDone","entriesCount","done","entry","userRecord","overwriteData","retries","submitRecord","recordData","alreadyExists","Error","newRecordData","warn","okToSubmit","totalRecordCount","wasDryRun","onConflictModeChanged","onUseridModeChanged","statsCards","CardHeader","CardContent","NativeSelect","enabled","toString","FormControlLabel","control","Checkbox","checked","conflictCards","errorCards","isArray","uploadCard","resultsCard","element","document","createElement","Blob","URL","createObjectURL","download","appendChild","click","startImportCard","ev","allCards","cardContainer","Title","defaultTitle","validateToken","validateUsesAllowed","number","validateLength","maxValue","dateParser","dateFormatter","pad","getFullYear","getMonth","slice","getDate","getHours","getMinutes","RegistrationTokenFilter","RegistrationTokenList","RegistrationTokenCreate","alwaysEnableSaveButton","RegistrationTokenEdit","format","de","germanMessages","synapseadmin","welcome","server_version","username_error","protocol_error","url_error","sso_sign_in","invalid_user_id","tabs","sso","details","basic","detail","permission","import_users","at_entry","required_field","invalid_value","unreasonably_big","already_in_progress","id_exits","goToPdf","cards","importstats","users_total","guest_count","admin_count","conflicts","mode","stop","skip","all_ids_present","count_ids_present","ignore","passwords","all_passwords_present","count_passwords_present","use_passwords","upload","explanation","startImport","simulate_only","run_import","successful","skipped","download_skipped","with_error","simulated_only","email","msisdn","threepid","show_deactivated","medium","threepids","address","consent_version","auth_provider","helper","deactivate","action","joined_local_devices","creator","join_rules","history_visibility","enums","knock","invite","private","can_join","forbidden","invited","joined","shared","world_readable","unencrypted","received_ts","score","reason","event_json","origin","origin_server_ts","formatted_body","algorithm","last_seen","ip","user_agent","last_seen_ts","last_seen_ip","success","failure","media_length","media_type","upload_name","created_ts","last_access_ts","send","send_success","send_failure","none","app","app_display_name","app_id","device_display_name","kind","lang","profile_tag","media_count","depth","state_group","sender","guest_can_join","uses_allowed","pending","completed","expiry_time","ra","unselect","auth_check_error","toggle_hidden","toggle_visible","notification","logged_out","empty","navigation","skip_nav","en","englishMessages","messages","zh","chineseMessages","i18nProvider","polyglotI18nProvider","resolveBrowserLocale","App","Admin","disableTelemetry","loginPage","customRoutes","Resource","edit","UserIcon","show","RoomIcon","EqualizerIcon","ReportIcon","FolderSharedIcon","ConfirmationNumberIcon","ReactDOM","getElementById"],"mappings":"0NA0FeA,EAxFM,CAEnBC,MAAO,YAAmD,IAAhDC,EAA+C,EAA/CA,SAAUC,EAAqC,EAArCA,SAAUC,EAA2B,EAA3BA,SAAUC,EAAiB,EAAjBA,WAEtCH,EAAWI,4BAEXC,QAAQC,IAAI,UACZ,IAAMC,EAAU,CACdC,OAAQ,OACRC,KAAMC,KAAKC,UACTC,OAAOC,OACL,CACEC,UAAWC,aAAaC,QAAQ,aAChCC,4BAA6B,iBAE/Bd,EACI,CACEe,KAAM,gBACNC,MAAOhB,GAET,CACEe,KAAM,mBACNE,KAAMnB,EACNC,SAAUA,MAStBF,EAAWA,EAASqB,QAAQ,QAAS,IACrCN,aAAaO,QAAQ,WAAYtB,GAEjC,IACMuB,EADmBC,OAAOC,mBAAmBzB,GACV,2BAEzC,OAAO0B,IAAWC,UAAUJ,EAAehB,GAASqB,MAAK,YAAe,IAAZC,EAAW,EAAXA,KAC1Dd,aAAaO,QAAQ,cAAeO,EAAKC,aACzCf,aAAaO,QAAQ,UAAWO,EAAKE,SACrChB,aAAaO,QAAQ,eAAgBO,EAAKG,cAC1CjB,aAAaO,QAAQ,YAAaO,EAAKf,eAI3CmB,OAAQ,WACN5B,QAAQC,IAAI,UAEZ,IAAM4B,EACJnB,aAAaC,QAAQ,YAAc,4BAC/BgB,EAAejB,aAAaC,QAAQ,gBAEpCT,EAAU,CACdC,OAAQ,OACRY,KAAM,CACJe,eAAe,EACfhB,MAAM,UAAD,OAAYa,KASrB,MAL4B,kBAAjBA,GACTN,IAAWC,UAAUO,EAAgB3B,GAASqB,MAAK,YAAc,EAAXC,KACpDd,aAAaqB,WAAW,mBAGrBC,QAAQC,WAGjBC,WAAY,YAAiB,IAAdC,EAAa,EAAbA,OAEb,OADAnC,QAAQC,IAAI,cAAgBkC,GACb,MAAXA,GAA6B,MAAXA,EACbH,QAAQI,SAEVJ,QAAQC,WAGjBI,UAAW,WACT,IAAMV,EAAejB,aAAaC,QAAQ,gBAE1C,OADAX,QAAQC,IAAI,aAAe0B,GACI,kBAAjBA,EACVK,QAAQC,UACRD,QAAQI,UAGdE,eAAgB,kBAAMN,QAAQC,Y,eCnF1BM,EAAa,SAACC,GAAuB,IAAlBtC,EAAiB,uDAAP,GAC3BY,EAAQJ,aAAaC,QAAQ,gBAQnC,OAPAX,QAAQC,IAAI,cAAgBuC,GACf,MAAT1B,IACFZ,EAAQa,KAAO,CACbe,eAAe,EACfhB,MAAM,UAAD,OAAYA,KAGdO,IAAWC,UAAUkB,EAAKtC,IAG7BuC,EAAe,SAAAC,GACnB,IAAMC,EAAajC,aAAaC,QAAQ,YAEpCiC,EADO,0BACEC,KAAKH,GAElB,GADA1C,QAAQC,IAAI,aAAe2C,GAChB,MAAPA,EAAa,OAAO,KACxB,IAAME,EAAaF,EAAI,GACjBG,EAAUH,EAAI,GACpB,MAAM,GAAN,OAAUD,EAAV,uCAAmDG,EAAnD,YAAiEC,EAAjE,qCAGIC,EAAc,CAClBC,MAAO,CACLC,KAAM,2BACNC,IAAK,SAAAC,GAAC,kCACDA,GADC,IAEJC,GAAID,EAAEE,KACNC,WAAYd,EAAaW,EAAEI,YAC3BC,WAAYL,EAAEK,SACdC,QAASN,EAAEM,MACXC,MAAQP,EAAEO,IACVC,cAAeR,EAAEQ,YAEjBC,eAAgC,IAAhBT,EAAEU,eAEpBC,KAAM,QACNC,MAAO,SAAAxC,GAAI,OAAIA,EAAKwC,OACpBC,OAAQ,SAAAF,GAAI,MAAK,CACfG,SAAS,6BAAD,OAA+BH,EAAKV,GAApC,YAA0C3C,aAAaC,QAC7D,gBAEFP,KAAM2D,EACN5D,OAAQ,QAEVgE,OAAQ,SAAAC,GAAM,MAAK,CACjBF,SAAS,iCAAD,OAAmCE,EAAOf,IAClDjD,KAAM,CAAEiE,OAAO,GACflE,OAAQ,UAGZmE,MAAO,CACLpB,KAAM,2BACNC,IAAK,SAAAoB,GAAC,kCACDA,GADC,IAEJlB,GAAIkB,EAAEC,QACNC,MAAOF,EAAEG,gBACTC,QAASJ,EAAEK,eACXC,eAAgBN,EAAEO,WAClBC,cAAeR,EAAEQ,YACjBC,SAAUT,EAAES,UAEdjB,KAAM,QACNC,MAAO,SAAAxC,GACL,OAAOA,EAAKyD,aAEdd,OAAQ,SAAAC,GAAM,MAAK,CACjBF,SAAS,4BAAD,OAA8BE,EAAOf,IAC7CjD,KAAM,CAAE8E,OAAO,MAGnBC,QAAS,CACPjC,KAAM,mCACNC,IAAK,SAAAiC,GAAE,kCACFA,GADE,IAEL/B,GAAI+B,EAAG/B,MAETU,KAAM,gBACNC,MAAO,SAAAxC,GAAI,OAAIA,EAAKwC,QAEtBqB,QAAS,CACPlC,IAAK,SAAAmC,GAAC,kCACDA,GADC,IAEJjC,GAAIiC,EAAE7E,aAERsD,KAAM,UACNC,MAAO,SAAAxC,GACL,OAAOA,EAAKwC,OAEduB,UAAW,SAAAlC,GAAE,MAAK,CAChBa,SAAS,4BAAD,OAA8Bb,EAA9B,cAEVc,OAAQ,SAAAC,GAAM,MAAK,CACjBF,SAAS,4BAAD,OAA8BE,EAAO1C,QAArC,oBAAwD0C,EAAOf,OAG3EmC,YAAa,CACXtC,KAAM,2BACNC,IAAK,SAAAsC,GAAC,kCACDA,GADC,IAEJpC,GAAIoC,EAAE/D,WAERqC,KAAM,eAER2B,aAAc,CACZvC,IAAK,SAAAwC,GAAC,MAAK,CACTtC,GAAIsC,IAENJ,UAAW,SAAAlC,GAAE,MAAK,CAChBa,SAAS,4BAAD,OAA8Bb,EAA9B,cAEVU,KAAM,UACNC,MAAO,SAAAxC,GACL,OAAOA,EAAKwC,QAGhB4B,WAAY,CACVzC,IAAK,SAAA0C,GAAE,kCACFA,GADE,IAELxC,GAAIwC,EAAGC,YAETP,UAAW,SAAAlC,GAAE,MAAK,CAChBa,SAAS,4BAAD,OAA8Bb,EAA9B,YAEVU,KAAM,QACNC,MAAO,SAAAxC,GACL,OAAOA,EAAKuE,MAAMC,SAGtBC,QAAS,CACP9C,IAAK,SAAA+C,GAAC,kCACDA,GADC,IAEJ7C,GAAI6C,EAAEC,WAERZ,UAAW,SAAAlC,GAAE,MAAK,CAChBa,SAAS,4BAAD,OAA8Bb,EAA9B,cAEVU,KAAM,UACNC,MAAO,SAAAxC,GACL,OAAOA,EAAKwC,QAGhBoC,aAAc,CACZjD,IAAK,SAAAkD,GAAE,MAAK,CACVhD,GAAIgD,IAENd,UAAW,SAAAlC,GAAE,MAAK,CAChBa,SAAS,4BAAD,OAA8Bb,EAA9B,mBAEVU,KAAM,eACNC,MAAO,SAAAxC,GACL,OAAOA,EAAKwC,QAGhBsC,YAAa,CACXnD,IAAK,SAAAoD,GAAE,kCACFA,GADE,IAELlD,GAAIkD,EAAGC,YAETjB,UAAW,SAAAlC,GAAE,MAAK,CAChBa,SAAS,4BAAD,OAA8Bb,EAA9B,YAEVU,KAAM,QACNC,MAAO,SAAAxC,GACL,OAAOA,EAAKwC,OAEdG,OAAQ,SAAAC,GAAM,MAAK,CACjBF,SAAS,4BAAD,OAA8BxD,aAAaC,QACjD,eADM,YAEHyD,EAAOf,OAGhBoD,aAAc,CACZtC,OAAQ,SAAAC,GAAM,MAAK,CACjBF,SAAS,4BAAD,OAA8BxD,aAAaC,QACjD,eADM,6BAEcyD,EAAOsC,UAFrB,oBAGNtC,EAAOuC,QAHD,0BAIUvC,EAAOwC,eACzBzG,OAAQ,UAGZ0G,cAAe,CACb1D,IAAK,SAAA2D,GAAE,MAAK,CAAEzD,GAAIyD,EAAGN,WACrBvC,OAAQ,SAAAG,GAAM,MAAK,CACjBF,SAAS,oCAAD,OAAsCE,EAAOoC,UACrDrG,OAAQ,SAEVgE,OAAQ,SAAAC,GAAM,MAAK,CACjBF,SAAS,sCAAD,OAAwCE,EAAOoC,UACvDrG,OAAQ,UAGZ4G,iBAAkB,CAChB5D,IAAK,SAAA6D,GAAE,MAAK,CAAE3D,GAAI2D,EAAGR,WACrBvC,OAAQ,SAAAG,GAAM,MAAK,CACjBF,SAAS,uCAAD,OAAyCxD,aAAaC,QAC5D,eADM,YAEHyD,EAAOoC,UACZrG,OAAQ,SAEVgE,OAAQ,SAAAC,GAAM,MAAK,CACjBF,SAAS,yCAAD,OAA2CxD,aAAaC,QAC9D,eADM,YAEHyD,EAAOoC,UACZrG,OAAQ,UAGZ8G,cAAe,CACb9D,IAAK,SAAA+D,GAAC,MAAK,CAAE7D,GAAI6D,EAAEpB,WACnB7B,OAAQ,SAAAF,GAAI,MAAK,CACfG,SAAU,wCACV9D,KAAM,CACJsB,QAASqC,EAAKV,GACd8D,QAAS,CACPC,QAAS,SACThH,KAAM2D,EAAK3D,OAGfD,OAAQ,UAGZkH,sBAAuB,CACrBnE,KAAM,4CACNC,IAAK,SAAAmE,GAAI,kCACJA,GADI,IAEPjE,GAAIiE,EAAK5F,WAEXqC,KAAM,QACNC,MAAO,SAAAxC,GACL,OAAOA,EAAKwC,QAGhBuD,oBAAqB,CACnBpE,IAAK,SAAAqE,GAAE,kCACFA,GADE,IAELnE,GAAImE,EAAG1B,YAETP,UAAW,SAAAlC,GAAE,MAAK,CAChBa,SAAS,4BAAD,OAA8Bb,EAA9B,0BAEVU,KAAM,UACNC,MAAO,SAAAxC,GACL,OAAOA,EAAKiG,OAEdtD,OAAQ,SAAAC,GAAM,MAAK,CACjBF,SAAS,4BAAD,OAA8BE,EAAOf,GAArC,2BAGZqE,eAAgB,CACdxE,KAAM,iCACNC,IAAK,SAAAwE,GAAE,kCACFA,GADE,IAELtE,GAAIsE,EAAGnD,QACPQ,SAAU2C,EAAG3C,OACb4C,eAAgBD,EAAGC,aACnBrE,WAAYd,EAAakF,EAAGnE,eAE9BO,KAAM,QACNC,MAAO,SAAAxC,GACL,OAAOA,EAAKqG,2BAEd5D,OAAQ,SAAAG,GAAM,MAAK,CACjBF,SAAS,0CAAD,OAA4CE,EAAOf,IAC3DjD,KAAM,CAAE0H,WAAY,UACpB3H,OAAQ,QAEVgE,OAAQ,SAAAC,GAAM,MAAK,CACjBF,SAAS,0CAAD,OAA4CE,EAAOf,IAC3DjD,KAAM,CAAE0H,WAAY,WACpB3H,OAAQ,SAGZ4H,oBAAqB,CACnB7E,KAAM,yCACNC,IAAK,SAAA6E,GAAE,kCACFA,GADE,IAEL3E,GAAI2E,EAAGlH,SAETiD,KAAM,sBACNC,MAAO,SAAAxC,GACL,OAAOA,EAAKuG,oBAAoB/B,QAElC/B,OAAQ,SAAAG,GAAM,MAAK,CACjBF,SAAU,6CACV9D,KAAMgE,EACNjE,OAAQ,SAEVgE,OAAQ,SAAAC,GAAM,MAAK,CACjBF,SAAS,0CAAD,OAA4CE,EAAOf,QAKjE,SAAS4E,EAAiBC,EAAKC,GAE7B,GAAc,OAAVA,EAGJ,OAAOA,EAGT,SAASC,EAAeC,GACtB,MAAc,SAAVA,EACK,IAEA,IAIX,IAmOeC,EAnOM,CACnBC,QAAS,SAACC,EAAUpE,GAClBpE,QAAQC,IAAI,WAAauI,GACzB,MACEpE,EAAOqE,OADD/G,EAAR,EAAQA,QAAS4B,EAAjB,EAAiBA,KAAMoF,EAAvB,EAAuBA,OAAQ9E,EAA/B,EAA+BA,YAAa+E,EAA5C,EAA4CA,YAAaC,EAAzD,EAAyDA,MAEzD,EAA0BxE,EAAOyE,WAAzBC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QACd,EAAyB3E,EAAO4E,KAAxBC,EAAR,EAAQA,MAAOZ,EAAf,EAAeA,MACTa,GAAQJ,EAAO,GAAKC,EACpBI,EAAQ,CACZD,KAAMA,EACNE,MAAOL,EACPrH,QAASA,EACTiH,YAAaA,EACbrF,KAAMA,EACNoF,OAAQA,EACR9E,YAAaA,EACbgF,MAAOA,EACPS,SAAUJ,EACVK,IAAKlB,EAAeC,IAEhB1F,EAAajC,aAAaC,QAAQ,YACxC,IAAKgC,KAAgB6F,KAAYxF,GAAc,OAAOhB,QAAQI,SAE9D,IAAMmH,EAAMvG,EAAYwF,GAElBgB,EAAe7G,EAAa4G,EAAIrG,KAChCV,EAAG,UAAMgH,EAAN,YAAsBlJ,oBAAU6I,IAEzC,OAAO5G,EAAWC,GAAKjB,MAAK,gBAAGC,EAAH,EAAGA,KAAH,MAAe,CACzCuC,KAAMvC,EAAK+H,EAAIxF,MAAMZ,IAAIoG,EAAIpG,KAC7Ba,MAAOuF,EAAIvF,MAAMxC,EAAM0H,EAAMH,QAIjCU,OAAQ,SAACjB,EAAUpE,GACjBpE,QAAQC,IAAI,UAAYuI,GACxB,IAAM7F,EAAajC,aAAaC,QAAQ,YACxC,IAAKgC,KAAgB6F,KAAYxF,GAAc,OAAOhB,QAAQI,SAE9D,IAAMmH,EAAMvG,EAAYwF,GAElBgB,EAAe7G,EAAa4G,EAAIrG,KACtC,OAAOX,EAAW,GAAD,OAAIiH,EAAJ,YAAoBpF,EAAOf,KAAM9B,MAAK,gBAAGC,EAAH,EAAGA,KAAH,MAAe,CACpEuC,KAAMwF,EAAIpG,IAAI3B,QAIlBkI,QAAS,SAAClB,EAAUpE,GAClBpE,QAAQC,IAAI,WAAauI,GACzB,IAAM7F,EAAajC,aAAaC,QAAQ,YACxC,IAAKgC,KAAgB6F,KAAYxF,GAAc,OAAOhB,QAAQI,SAE9D,IAAMmH,EAAMvG,EAAYwF,GAElBgB,EAAe7G,EAAa4G,EAAIrG,KACtC,OAAOlB,QAAQ2H,IACbvF,EAAOwF,IAAIzG,KAAI,SAAAE,GAAE,OAAId,EAAW,GAAD,OAAIiH,EAAJ,YAAoBnG,QACnD9B,MAAK,SAAAsI,GAAS,MAAK,CACnB9F,KAAM8F,EAAU1G,KAAI,gBAAG3B,EAAH,EAAGA,KAAH,OAAc+H,EAAIpG,IAAI3B,MAC1CwC,MAAO6F,EAAU7D,YAIrB8D,iBAAkB,SAACtB,EAAUpE,GAC3BpE,QAAQC,IAAI,oBAAsBuI,GAClC,MAA0BpE,EAAOyE,WAAzBC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QACd,EAAyB3E,EAAO4E,KAAxBC,EAAR,EAAQA,MAAOZ,EAAf,EAAeA,MACTa,GAAQJ,EAAO,GAAKC,EACpBI,EAAQ,CACZD,KAAMA,EACNE,MAAOL,EACPM,SAAUJ,EACVK,IAAKlB,EAAeC,IAGhB1F,EAAajC,aAAaC,QAAQ,YACxC,IAAKgC,KAAgB6F,KAAYxF,GAAc,OAAOhB,QAAQI,SAE9D,IAAMmH,EAAMvG,EAAYwF,GAElBuB,EAAMR,EAAG,UAAcnF,EAAOf,IAC9BmG,EAAY,UAAM7G,GAAN,OAAmBoH,EAAI7F,SAAvB,YAAmC5D,oBAAU6I,IAE/D,OAAO5G,EAAWiH,GAAcjI,MAAK,cAAGyI,QAAH,IAAYxI,EAAZ,EAAYA,KAAZ,MAAwB,CAC3DuC,KAAMvC,EAAK+H,EAAIxF,MAAMZ,IAAIoG,EAAIpG,KAC7Ba,MAAOuF,EAAIvF,MAAMxC,EAAM0H,EAAMH,QAIjCkB,OAAQ,SAACzB,EAAUpE,GACjBpE,QAAQC,IAAI,UAAYuI,GACxB,IAAM7F,EAAajC,aAAaC,QAAQ,YACxC,IAAKgC,KAAgB6F,KAAYxF,GAAc,OAAOhB,QAAQI,SAE9D,IAAMmH,EAAMvG,EAAYwF,GAElBgB,EAAe7G,EAAa4G,EAAIrG,KACtC,OAAOX,EAAW,GAAD,OAAIiH,EAAJ,YAAoBpF,EAAOL,KAAKV,IAAM,CACrDlD,OAAQ,MACRC,KAAMC,KAAKC,UAAU8D,EAAOL,KAAMkE,KACjC1G,MAAK,gBAAGC,EAAH,EAAGA,KAAH,MAAe,CACrBuC,KAAMwF,EAAIpG,IAAI3B,QAIlB0I,WAAY,SAAC1B,EAAUpE,GACrBpE,QAAQC,IAAI,cAAgBuI,GAC5B,IAAM7F,EAAajC,aAAaC,QAAQ,YACxC,IAAKgC,KAAgB6F,KAAYxF,GAAc,OAAOhB,QAAQI,SAE9D,IAEMoH,EAAe7G,EAFTK,EAAYwF,GAEctF,KACtC,OAAOlB,QAAQ2H,IACbvF,EAAOwF,IAAIzG,KAAI,SAAAE,GAAE,OAAId,EAAW,GAAD,OAAIiH,EAAJ,YAAoBnG,MAAO,CACxDlD,OAAQ,MACRC,KAAMC,KAAKC,UAAU8D,EAAOL,KAAMkE,MAEpC1G,MAAK,SAAAsI,GAAS,MAAK,CACnB9F,KAAM8F,EAAU1G,KAAI,qBAAG3B,aAI3ByC,OAAQ,SAACuE,EAAUpE,GACjBpE,QAAQC,IAAI,UAAYuI,GACxB,IAAM7F,EAAajC,aAAaC,QAAQ,YACxC,IAAKgC,KAAgB6F,KAAYxF,GAAc,OAAOhB,QAAQI,SAE9D,IAAMmH,EAAMvG,EAAYwF,GACxB,KAAM,WAAYe,GAAM,OAAOvH,QAAQI,SAEvC,IAAM6B,EAASsF,EAAG,OAAWnF,EAAOL,MAC9ByF,EAAe7G,EAAasB,EAAOC,SACzC,OAAO3B,EAAWiH,EAAc,CAC9BrJ,OAAQ8D,EAAO9D,OACfC,KAAMC,KAAKC,UAAU2D,EAAO7D,KAAM6H,KACjC1G,MAAK,gBAAGC,EAAH,EAAGA,KAAH,MAAe,CACrBuC,KAAMwF,EAAIpG,IAAI3B,QAIlB2I,WAAY,SAAC3B,EAAUpE,GACrBpE,QAAQC,IAAI,cAAgBuI,GAC5B,IAAM7F,EAAajC,aAAaC,QAAQ,YACxC,IAAKgC,KAAgB6F,KAAYxF,GAAc,OAAOhB,QAAQI,SAE9D,IAAMmH,EAAMvG,EAAYwF,GACxB,MAAM,WAAYe,EAEXvH,QAAQ2H,IACbvF,EAAOwF,IAAIzG,KAAI,SAAAE,GACbe,EAAOL,KAAKV,GAAKA,EACjB,IAAM+G,EAAMb,EAAG,OAAWnF,EAAOL,MAC3ByF,EAAe7G,EAAayH,EAAIlG,SACtC,OAAO3B,EAAWiH,EAAc,CAC9BrJ,OAAQiK,EAAIjK,OACZC,KAAMC,KAAKC,UAAU8J,EAAIhK,KAAM6H,SAGnC1G,MAAK,SAAAsI,GAAS,MAAK,CACnB9F,KAAM8F,EAAU1G,KAAI,qBAAG3B,YAbMQ,QAAQI,UAiBzC+B,OAAQ,SAACqE,EAAUpE,GACjBpE,QAAQC,IAAI,UAAYuI,GACxB,IAAM7F,EAAajC,aAAaC,QAAQ,YACxC,IAAKgC,KAAgB6F,KAAYxF,GAAc,OAAOhB,QAAQI,SAE9D,IAAMmH,EAAMvG,EAAYwF,GAExB,GAAI,WAAYe,EAAK,CACnB,IAAMc,EAAMd,EAAG,OAAWnF,GACpBoF,EAAe7G,EAAa0H,EAAInG,SACtC,OAAO3B,EAAWiH,EAAc,CAC9BrJ,OAAQ,WAAYkK,EAAMA,EAAIlK,OAAS,SACvCC,KAAM,SAAUiK,EAAMhK,KAAKC,UAAU+J,EAAIjK,MAAQ,OAChDmB,MAAK,kBAAe,CACrBwC,KADM,EAAGvC,SAIX,IAAMgI,EAAe7G,EAAa4G,EAAIrG,KACtC,OAAOX,EAAW,GAAD,OAAIiH,EAAJ,YAAoBpF,EAAOf,IAAM,CAChDlD,OAAQ,SACRC,KAAMC,KAAKC,UAAU8D,EAAOL,KAAMkE,KACjC1G,MAAK,kBAAe,CACrBwC,KADM,EAAGvC,UAMf8I,WAAY,SAAC9B,EAAUpE,GACrBpE,QAAQC,IAAI,cAAgBuI,GAC5B,IAAM7F,EAAajC,aAAaC,QAAQ,YACxC,IAAKgC,KAAgB6F,KAAYxF,GAAc,OAAOhB,QAAQI,SAE9D,IAAMmH,EAAMvG,EAAYwF,GAExB,GAAI,WAAYe,EACd,OAAOvH,QAAQ2H,IACbvF,EAAOwF,IAAIzG,KAAI,SAAAE,GACb,IAAMgH,EAAMd,EAAG,OAAH,2BAAmBnF,GAAnB,IAA2Bf,GAAIA,KACrCmG,EAAe7G,EAAa0H,EAAInG,SACtC,OAAO3B,EAAWiH,EAAc,CAC9BrJ,OAAQ,WAAYkK,EAAMA,EAAIlK,OAAS,SACvCC,KAAM,SAAUiK,EAAMhK,KAAKC,UAAU+J,EAAIjK,MAAQ,WAGrDmB,MAAK,SAAAsI,GAAS,MAAK,CACnB9F,KAAM8F,EAAU1G,KAAI,qBAAG3B,YAGzB,IAAMgI,EAAe7G,EAAa4G,EAAIrG,KACtC,OAAOlB,QAAQ2H,IACbvF,EAAOwF,IAAIzG,KAAI,SAAAE,GAAE,OACfd,EAAW,GAAD,OAAIiH,EAAJ,YAAoBnG,GAAM,CAClClD,OAAQ,SACRC,KAAMC,KAAKC,UAAU8D,EAAOL,KAAMkE,SAGtC1G,MAAK,SAAAsI,GAAS,MAAK,CACnB9F,KAAM8F,EAAU1G,KAAI,qBAAG3B,c,woBCngBzB+I,GAAqB,SAAC,GAAwC,IAAtCC,EAAqC,EAArCA,KAAMC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,QAASC,EAAa,EAAbA,OAC9CC,EAAYC,eAEZC,EAAsB,SAAAC,GAAK,OAC/B,gBAACC,GAAA,EAAD,2BAAaD,GAAb,cACE,eAACE,GAAA,EAAD,CACEC,MAAM,sCACNC,SAAUJ,EAAMK,WAElB,eAACC,EAAA,EAAD,CAAQH,MAAM,mBAAmBI,QAASZ,EAA1C,SACE,eAAC,KAAD,WAKN,OACE,gBAACa,GAAA,EAAD,CAAQf,KAAMA,EAAME,QAASA,EAASD,QAASA,EAA/C,UACE,eAACe,GAAA,EAAD,UACGZ,EAAU,yCAEb,gBAACa,GAAA,EAAD,WACE,eAACC,GAAA,EAAD,UACGd,EAAU,yCAEb,eAACe,GAAA,EAAD,CACEC,QAAS,eAACd,EAAD,IACTe,eAAe,EACfC,UAAU,EACVC,KAAMpB,EAJR,SAME,eAACqB,GAAA,EAAD,CACEC,OAAO,OACPf,MAAM,sCACNgB,WAAS,EACTC,WAAS,EACTC,KAAK,IACLC,YAAU,EACVC,SAAUC,0BAQTC,GAAqB,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACnC,EAAwBC,oBAAS,GAAjC,oBAAOlC,EAAP,KAAamC,EAAb,KACMC,EAASC,eACf,EAA8BC,aAAU,iBAAxC,oBAAO7I,EAAP,KAAiBwG,EAAjB,KAAiBA,QAGXsC,EAAoB,kBAAMJ,GAAQ,IAgBxC,OACE,gBAAC,WAAD,WACE,eAACtB,EAAA,EAAD,CACEH,MAAM,+BACNI,QArBmB,kBAAMqB,GAAQ,IAsBjCxB,SAAUV,EAHZ,SAKE,eAAC,KAAD,MAEF,eAAC,GAAD,CACED,KAAMA,EACNE,QAASqC,EACTpC,OA1Ba,SAAAqC,GACjB/I,EACE,CAAEgJ,QAAS,CAAElJ,KAAK,aAAGV,GAAIoJ,EAAOpJ,IAAO2J,KACvC,CACEE,UAAW,WACTN,EAAO,+CACPG,KAEFI,UAAW,kBACTP,EAAO,8CAA+C,mBAuBnDQ,GAAyB,SAAC,GAAqB,IAAnBC,EAAkB,EAAlBA,YACvC,EAAwBX,oBAAS,GAAjC,oBAAOlC,EAAP,KAAamC,EAAb,KACMC,EAASC,eACTS,EAAcC,eACpB,EAAkCC,eAAlC,oBAAOrD,EAAP,KAAqBM,EAArB,KAAqBA,QAGfsC,EAAoB,kBAAMJ,GAAQ,IAqBxC,OACE,gBAAC,WAAD,WACE,eAACtB,EAAA,EAAD,CACEH,MAAM,+BACNI,QA1BmB,kBAAMqB,GAAQ,IA2BjCxB,SAAUV,EAHZ,SAKE,eAAC,KAAD,MAEF,eAAC,GAAD,CACED,KAAMA,EACNE,QAASqC,EACTpC,OA/Ba,SAAAqC,GACjB7C,EACE,CACEtJ,KAAM,aACN2H,SAAU,gBACVyE,QAAS,CAAErD,IAAKyD,EAAatJ,KAAMiJ,IAErC,CACEE,UAAW,YAAc,EAAXnJ,KACZ6I,EAAO,+CACPU,EAAY,SACZP,KAEFI,UAAW,SAAAM,GAAK,OACdb,EAAO,8CAA+C,mB,gFCpH1Dc,GAAYC,cAChB,SAAAC,GAAK,MAAK,CACRC,aAAc,CACZC,MAAOF,EAAMG,QAAQN,MAAMO,KAC3B,UAAW,CACTC,gBAAiBC,iBAAMN,EAAMG,QAAQN,MAAMO,KAAM,KAEjD,uBAAwB,CACtBC,gBAAiB,oBAKzB,CAAE3K,KAAM,yBAGG6K,GAAqB,SAAApD,GAChC,IAAQ0B,EAAW1B,EAAX0B,OACF2B,EAAUV,GAAU3C,GAC1B,EAAwB2B,oBAAS,GAAjC,oBAAOlC,EAAP,KAAamC,EAAb,KACM0B,EAAUC,eACV1B,EAASC,eAEf,EAAoCW,eAApC,oBAAOe,EAAP,KAAuB9D,EAAvB,KAAuBA,QAEvB,IAAKgC,EAAQ,OAAO,KA2BpB,OACE,gBAAC,WAAD,WACE,eAACpB,EAAA,EAAD,CACEH,MAAM,mBACNI,QA7Bc,kBAAMqB,GAAQ,IA8B5B6B,UAAWC,KAAW,mBAAoBL,EAAQP,cAHpD,SAKE,eAAC,KAAD,MAEF,eAACa,GAAA,EAAD,CACEC,OAAQnE,EACRC,QAASA,EACTmE,UAlCgB,WACpBL,EACE,CACE1N,KAAM,SACN2H,SAAU,UACVyE,QAAS,CACP5J,GAAIoJ,EAAOpJ,GACX3B,QAAS+K,EAAO/K,UAGpB,CACEwL,UAAW,WACTN,EAAO,0CACPyB,KAEFlB,UAAW,kBACTP,EAAO,yCAA0C,YAGvDD,GAAQ,IAgBJjC,QArCoB,kBAAMiC,GAAQ,IAsClCkC,MAAM,uCACN1H,QAAQ,yCACR2H,iBAAkB,CAChBzL,GAAIoJ,EAAOpJ,GACXC,KAAMmJ,EAAOsC,aAAetC,EAAOsC,aAAetC,EAAOpJ,U,iJCrD7DqK,GAAYC,cAChB,SAAAC,GAAK,MAAK,CACRC,aAAc,CACZC,MAAOF,EAAMG,QAAQN,MAAMO,KAC3B,UAAW,CACTC,gBAAiBC,iBAAMN,EAAMG,QAAQN,MAAMO,KAAM,KAEjD,uBAAwB,CACtBC,gBAAiB,oBAKzB,CAAE3K,KAAM,yBAGJ0L,GAAoB,SAAC,GAAwC,IAAtCxE,EAAqC,EAArCA,KAAMC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,QAASC,EAAa,EAAbA,OAC7CC,EAAYC,eAQZoE,EAAqB,SAAAlE,GACzB,OACE,gBAACC,GAAA,EAAD,2BAAaD,GAAb,cACE,eAACE,GAAA,EAAD,CACEC,MAAM,qCACNgE,KAAM,eAAC,KAAD,MAER,eAAC7D,EAAA,EAAD,CAAQH,MAAM,mBAAmBI,QAASZ,EAA1C,SACE,eAAC,KAAD,WAMR,OACE,gBAACa,GAAA,EAAD,CAAQf,KAAMA,EAAME,QAASA,EAASD,QAASA,EAA/C,UACE,eAACe,GAAA,EAAD,UACGZ,EAAU,wCAEb,gBAACa,GAAA,EAAD,WACE,eAACC,GAAA,EAAD,UACGd,EAAU,wCAEb,gBAACe,GAAA,EAAD,CACEC,QAAS,eAACqD,EAAD,IACTpD,eAAe,EACfC,UAAU,EACVC,KAAMpB,EAJR,UAME,eAACwE,GAAA,EAAD,CACEjD,WAAS,EACTD,OAAO,YACPf,MAAM,0CACNkE,aAAc,EACdC,MAxCS,SAAAC,GACjB,IAAMhK,EAAI,IAAIiK,KAAKD,GACnB,OAAIE,MAAMlK,GAAW,EACdA,EAAEmK,aAuCH,eAACC,GAAA,EAAD,CACExD,WAAS,EACTD,OAAO,UACPf,MAAM,wCACNkE,aAAc,EACdO,IAAK,EACLC,KAAM,OAER,eAACC,EAAA,EAAD,CACE3D,WAAS,EACTD,OAAO,gBACPf,MAAM,8CACNkE,cAAc,cAQbU,GAAoB,SAAA/E,GAC/B,IAAMqD,EAAUV,GAAU3C,GAC1B,EAAwB2B,oBAAS,GAAjC,oBAAOlC,EAAP,KAAamC,EAAb,KACMC,EAASC,eACf,EAAiCkD,aAAU,gBAA3C,oBAAOC,EAAP,KAAoBvF,EAApB,KAAoBA,QAGdsC,EAAoB,kBAAMJ,GAAQ,IAgBxC,OACE,gBAAC,WAAD,WACE,eAACtB,EAAA,EAAD,CACEH,MAAM,qCACNI,QArBmB,kBAAMqB,GAAQ,IAsBjCxB,SAAUV,EACV+D,UAAWC,KAAW,mBAAoBL,EAAQP,cAJpD,SAME,eAAC,KAAD,MAEF,eAAC,GAAD,CACErD,KAAMA,EACNE,QAASqC,EACTpC,OA3Ba,SAAAqC,GACjBgD,EACE,CAAE/C,QAAQ,eAAMD,IAChB,CACEE,UAAW,WACTN,EAAO,8CACPG,KAEFI,UAAW,kBACTP,EAAO,6CAA8C,mBAwBlDqD,GAAqB,SAAAlF,GAChC,IAAQ0B,EAAW1B,EAAX0B,OACF7B,EAAYC,eACZwD,EAAUC,eACV1B,EAASC,eACf,EAA8BC,aAAU,iBAAxC,oBAAO7I,EAAP,KAAiBwG,EAAjB,KAAiBA,QACjB,EAAoBsF,aAAU,iBAAvBC,EAAP,qBAEA,IAAKvD,EAAQ,OAAO,KA8BpB,OAKE,eAJA,CAIC,WAAD,WACGA,EAAOyD,gBACN,eAACC,GAAA,EAAD,CACEtB,MAAOjE,EAAU,sCAAuC,CACtDwF,EAAG,wCAFP,SAKE,+BAKE,eAAC/E,EAAA,EAAD,CAAQF,UAAU,EAAlB,SACE,eAAC,KAAD,UAKPsB,EAAO4D,sBACN,eAACF,GAAA,EAAD,CACEtB,MAAOjE,EAAU,wCAAyC,CACxDwF,EAAG,0CAELE,OAAK,EAJP,SAME,+BACE,eAACjF,EAAA,EAAD,CAAQC,QA7CM,WACtB0E,EACE,CAAE/C,QAAQ,eAAMR,IAChB,CACES,UAAW,WACTN,EAAO,+CACPyB,KAEFlB,UAAW,kBACTP,EAAO,8CAA+C,aAoClBzB,SAAUV,EAA5C,SACE,eAAC,KAAD,WAKNgC,EAAO4D,uBAAyB5D,EAAOyD,gBACvC,eAACC,GAAA,EAAD,CACEtB,MAAOjE,EAAU,wCAAyC,CACxDwF,EAAG,0CAFP,SAKE,+BACE,eAAC/E,EAAA,EAAD,CAAQC,QAxEI,WACpBrH,EACE,CAAEgJ,QAAS,CAAElJ,KAAM0I,IACnB,CACES,UAAW,WACTN,EAAO,+CACPyB,KAEFlB,UAAW,kBACTP,EAAO,8CAA+C,aA+DpBzB,SAAUV,EAA1C,SACE,eAAC,KAAD,cASD8F,GAAwB,SAAAxF,GACnC,IAAQ0B,EAAW1B,EAAX0B,OACF7B,EAAYC,eACZwD,EAAUC,eACV1B,EAASC,eACf,EAA8BC,aAAU,oBAAxC,oBAAO7I,EAAP,KAAiBwG,EAAjB,KAAiBA,QACjB,EAAoBsF,aAAU,oBAAvBC,EAAP,qBAEA,IAAKvD,EAAQ,OAAO,KA8BpB,OACE,gBAAC,WAAD,WACGA,EAAO4D,sBACN,eAACF,GAAA,EAAD,CACEtB,MAAOjE,EAAU,yCAA0C,CACzDwF,EAAG,2CAFP,SAKE,+BACE,eAAC/E,EAAA,EAAD,CAAQF,UAAU,EAAlB,SACE,eAAC,KAAD,UAKPsB,EAAOyD,gBACN,eAACC,GAAA,EAAD,CACEtB,MAAOjE,EAAU,2CAA4C,CAC3DwF,EAAG,6CAFP,SAKE,+BACE,eAAC/E,EAAA,EAAD,CAAQC,QApCc,WAC9B0E,EACE,CAAE/C,QAAQ,eAAMR,IAChB,CACES,UAAW,WACTN,EAAO,kDACPyB,KAEFlB,UAAW,kBACTP,EAAO,iDAAkD,aA2BbzB,SAAUV,EAApD,SACE,eAAC,KAAD,CAAWqD,MAAM,iBAKvBrB,EAAO4D,uBAAyB5D,EAAOyD,gBACvC,eAACC,GAAA,EAAD,CACEtB,MAAOjE,EAAU,2CAA4C,CAC3DwF,EAAG,6CAFP,SAKE,+BACE,eAAC/E,EAAA,EAAD,CAAQC,QA/DQ,WACxBrH,EACE,CAAEgJ,QAAS,CAAElJ,KAAM0I,IACnB,CACES,UAAW,WACTN,EAAO,kDACPyB,KAEFlB,UAAW,kBACTP,EAAO,iDAAkD,aAsDnBzB,SAAUV,EAA9C,SACE,eAAC,KAAD,c,4MCxQRqB,GAAW,WACf,MAAO,CACL0E,SAAU,kBAIR9C,GAAYC,aAAW,CAC3B8C,MAAO,CACLC,OAAQ,OACRC,MAAO,QAETC,MAAO,CACLF,OAAQ,QACRC,MAAO,QACPE,MAAO,WAILC,GAAc,CAClBC,KAAM,UACNC,MAAO,UACPC,IAAK,UACLC,KAAM,UACNC,OAAQ,UACRC,OAAQ,WAGJC,GAAkB,SAAC,GAiBlB,IAhBLC,EAgBI,EAhBJA,YACA9C,EAeI,EAfJA,UACAhG,EAcI,EAdJA,SACA+I,EAaI,EAbJA,QACAC,EAYI,EAZJA,iBACAC,EAWI,EAXJA,SACAC,EAUI,EAVJA,aACAC,EASI,EATJA,gBAEAC,GAOI,EARJC,UAQI,EAPJD,UAGAE,GAII,EANJzE,YAMI,EALJ0E,gBAKI,EAJJD,YACAE,EAGI,EAHJA,WACAhO,EAEI,EAFJA,MACGiO,EACC,kBACJ,OACE,gBAACC,EAAA,EAAD,yBAAY1D,UAAWA,GAAe2D,YAAsBF,IAA5D,cACGV,GACCa,uBAAab,EAAS,CACpB/I,WACAsJ,aACAN,mBACAE,eACAW,QAAS,WAEb,eAACC,EAAA,EAAD,CAAcV,SAAUA,IACxB,eAACW,EAAA,EAAD,CACEpH,SAAoB,IAAVnH,EACVwE,SAAUA,EACVQ,KAAMsI,EACN7I,OAAM,2BAAOiJ,GAAiBC,GAC9BF,SAAUA,EACVO,WAAYA,IAGd,eAAC3G,EAAA,EAAD,CAAQmH,UAAWC,KAAMC,GAAI5G,GAAUZ,MAAM,aAA7C,SACE,eAAC,IAAD,CAAYyH,MAAO,CAAEC,UAAW,iBAAkBC,SAAU,eAMpExB,GAAgByB,aAAe,CAC7BzF,YAAa,GACb0E,gBAAiB,kBAAM,OAGzB,IAAMgB,GAAiB,SAAAhI,GAAK,OAC1B,eAACiI,EAAA,EAAD,2BAAgBjI,GAAhB,IAAuBkI,mBAAoB,CAAC,GAAI,GAAI,GAAI,IAAK,IAAK,SAG9DC,GAAa,SAAAnI,GAAK,OACtB,gBAACoI,EAAA,EAAD,2BAAYpI,GAAZ,cACE,eAACqI,EAAA,EAAD,CAAanH,OAAO,OAAOoH,UAAQ,IACnC,eAACxD,EAAA,EAAD,CAAc5D,OAAO,SAASoH,UAAQ,IACtC,eAACxD,EAAA,EAAD,CACE3E,MAAM,0CACNe,OAAO,cACPoH,UAAQ,SAKRC,GAAwB,SAAAvI,GAAK,OACjC,gBAAC,WAAD,WACE,eAAC,GAAD,eAA4BA,IAC5B,eAACwI,EAAA,EAAD,2BACMxI,GADN,IAEEG,MAAM,+BACNsI,aAAa,+BACbC,aAAa,qBAKbC,GAAc,SAAC,GAAD,IAAGzH,EAAH,EAAGA,OAAQuC,EAAX,EAAWA,UAAX,IAAsB/B,cAAtB,MAA+B,GAA/B,SAClB,eAACkH,EAAA,EAAD,CAAQC,IAAKnH,EAAOR,GAASuC,UAAWA,KAG7BqF,GAAW,SAAA9I,GACtB,IAAMqD,EAAUV,KAChB,OACE,eAACoG,EAAA,EAAD,2BACM/I,GADN,IAEEwG,QAAS,eAAC,GAAD,IACTwC,oBAAqB,CAAErL,QAAQ,EAAM9E,aAAa,GAClDoF,KAAM,CAAEC,MAAO,OAAQZ,MAAO,OAC9B2L,QAAS,eAAC,GAAD,CAAiBhC,WAAY,MACtCiC,kBAAmB,eAAC,GAAD,IACnBpL,WAAY,eAAC,GAAD,IAPd,SASE,gBAACqL,EAAA,EAAD,CAAUC,SAAS,OAAnB,UACE,eAAC,GAAD,CACElI,OAAO,aACPuC,UAAWJ,EAAQqC,MACnB2D,OAAO,eAET,eAACC,EAAA,EAAD,CAAWpI,OAAO,KAAKmI,OAAO,SAC9B,eAACC,EAAA,EAAD,CAAWpI,OAAO,gBAClB,eAACqI,EAAA,EAAD,CAAcrI,OAAO,aACrB,eAACqI,EAAA,EAAD,CAAcrI,OAAO,UACrB,eAACqI,EAAA,EAAD,CAAcrI,OAAO,QACrB,eAACqI,EAAA,EAAD,CAAcrI,OAAO,gBACrB,eAACsI,GAAA,EAAD,CACEtI,OAAO,cACPf,MAAM,wCACNsJ,UAAQ,EACRtU,QAAS4Q,YAWb2D,GAAe,CACnBlI,eACAmI,aAAU,KACVC,aAAM,oBAAqB,uCAGvBC,GAAkB,CAACrI,eAAYmI,aAAU,MAExC,SAASG,KACd,IAAMlS,EAAajC,aAAaC,QAAQ,eAkCxC,MAAO,CACL0C,GAjCA,IACAyR,MAAM,GACHC,KAAK,wCACL5R,KACC,SAAA6R,GAAC,OACCA,EACEC,KAAKC,MACFC,OAAOC,gBAAgB,IAAIC,YAAY,IAAI,GAA3C,WAECL,EAAEhP,YAIXsP,KAAK,IACR,IACA3S,EAmBA9C,SAjBeiV,MAAM,IACpBC,KACC,wEAED5R,KACC,SAAA6R,GAAC,OACCA,EACEC,KAAKC,MACFC,OAAOC,gBAAgB,IAAIC,YAAY,IAAI,GAA3C,WACCL,EAAEhP,YAIXsP,KAAK,KAQV,IAAMC,GAAkB,SAAAxK,GACtB,IAAMH,EAAYC,eAClB,OACE,gBAACG,GAAA,EAAD,2BAAaD,GAAb,cACE,eAACE,GAAA,EAAD,CAAYY,eAAe,EAAMV,SAAUJ,EAAMK,WACjD,eAACoK,GAAA,EAAD,CACEtK,MAAM,+BACNsI,aAAc5I,EAAU,+BAAgC,CACtD6K,YAAa,IAEfhC,aAAa,gBAEf,eAAC,GAAD,SAKOiC,GAAa,SAAA3K,GAAK,OAC7B,eAAC4K,GAAA,EAAD,2BAAY5K,GAAZ,aACE,gBAACY,GAAA,EAAD,WACE,eAACK,GAAA,EAAD,CAAWC,OAAO,KAAK2J,aAAa,MAAMtJ,SAAUmI,KACpD,eAACzI,GAAA,EAAD,CAAWC,OAAO,cAAcK,SAAUoI,aAAU,OACpD,eAACmB,GAAA,EAAD,CACE5J,OAAO,WACP2J,aAAa,eACbtJ,SAAUoI,aAAU,OAEtB,eAAC7E,EAAA,EAAD,CAAc5D,OAAO,UACrB,eAAC6J,GAAA,EAAD,CAAY7J,OAAO,YAAnB,SACE,gBAAC8J,GAAA,EAAD,WACE,eAACC,GAAA,EAAD,CACE/J,OAAO,SACPgK,QAAS,CACP,CAAE5S,GAAI,QAASC,KAAM,yBACrB,CAAED,GAAI,SAAUC,KAAM,2BAExBgJ,SAAUC,iBAEZ,eAACP,GAAA,EAAD,CAAWC,OAAO,UAAUK,SAAUsI,UAG1C,eAACkB,GAAA,EAAD,CAAY7J,OAAO,eAAef,MAAM,8BAAxC,SACE,gBAAC6K,GAAA,EAAD,WACE,eAAC/J,GAAA,EAAD,CAAWC,OAAO,gBAAgBK,SAAUC,iBAC5C,eAACP,GAAA,EAAD,CACEC,OAAO,cACPf,MAAM,4BACNoB,SAAUC,6BAQhB2J,GAAY,SAAC,GAAgB,IAAdzJ,EAAa,EAAbA,OACb7B,EAAYC,eAClB,OACE,kCACGD,EAAU,uBAAwB,CACjC6K,YAAa,IACX,IACHhJ,EAAM,WAAOA,EAAO0J,YAAd,KAA+B,OAI/BC,GAAW,SAAArL,GACtB,IAAMqD,EAAUV,KACV9C,EAAYC,eAClB,OACE,eAACwL,GAAA,EAAD,2BAAUtL,GAAV,IAAiB8D,MAAO,eAAC,GAAD,IAAxB,SACE,gBAACyH,GAAA,EAAD,CAAY1K,QAAS,eAAC,GAAD,IAArB,UACE,gBAAC2K,GAAA,EAAD,CACErL,MAAON,EAAU,uBAAwB,CAAE6K,YAAa,IACxDvG,KAAM,eAAC,IAAD,IAFR,UAIE,eAAC,GAAD,CACEjD,OAAO,aACPuK,UAAU,EACVhI,UAAWJ,EAAQwC,QAErB,eAAC5E,GAAA,EAAD,CAAWC,OAAO,KAAKd,UAAQ,IAC/B,eAACa,GAAA,EAAD,CAAWC,OAAO,gBAClB,eAAC4J,GAAA,EAAD,CAAe5J,OAAO,WAAW2J,aAAa,iBAC9C,eAAC/F,EAAA,EAAD,CAAc5D,OAAO,UACrB,eAAC4D,EAAA,EAAD,CAAc5D,OAAO,QACrB,eAAC4D,EAAA,EAAD,CACE5D,OAAO,cACPwK,WAAW,sCAEb,eAAClC,GAAA,EAAD,CAAWtI,OAAO,iBAAiBuI,UAAQ,EAACtU,QAAS4Q,KACrD,eAACuD,EAAA,EAAD,CAAWpI,OAAO,uBAGpB,eAACsK,GAAA,EAAD,CACErL,MAAM,2BACNgE,KAAM,eAAC,IAAD,IACNhM,KAAK,WAHP,SAKE,eAAC4S,GAAA,EAAD,CAAY7J,OAAO,YAAnB,SACE,gBAAC8J,GAAA,EAAD,WACE,eAACC,GAAA,EAAD,CACE/J,OAAO,SACPgK,QAAS,CACP,CAAE5S,GAAI,QAASC,KAAM,yBACrB,CAAED,GAAI,SAAUC,KAAM,6BAG1B,eAAC0I,GAAA,EAAD,CAAWC,OAAO,mBAKxB,eAACsK,GAAA,EAAD,CACErL,MAAM,8BACNgE,KAAM,eAAC,IAAD,IACNhM,KAAK,MAHP,SAKE,eAAC4S,GAAA,EAAD,CAAY7J,OAAO,eAAef,OAAO,EAAzC,SACE,gBAAC6K,GAAA,EAAD,WACE,eAAC/J,GAAA,EAAD,CAAWC,OAAO,gBAAgBK,SAAUC,iBAC5C,eAACP,GAAA,EAAD,CACEC,OAAO,cACPf,MAAM,4BACNoB,SAAUC,wBAMlB,eAACgK,GAAA,EAAD,CACErL,MAAON,EAAU,yBAA0B,CAAE6K,YAAa,IAC1DvG,KAAM,eAAC,IAAD,IACNhM,KAAK,UAHP,SAKE,eAACwT,GAAA,EAAD,CACEnR,UAAU,UACVoR,OAAO,UACPC,UAAU,EAHZ,SAKE,gBAAC1C,EAAA,EAAD,CAAUvB,MAAO,CAAEhC,MAAO,QAA1B,UACE,eAAC0D,EAAA,EAAD,CAAWpI,OAAO,YAAYuK,UAAU,IACxC,eAACnC,EAAA,EAAD,CAAWpI,OAAO,eAAeuK,UAAU,IAC3C,eAACnC,EAAA,EAAD,CAAWpI,OAAO,eAAeuK,UAAU,IAC3C,eAACjC,GAAA,EAAD,CACEtI,OAAO,eACPuI,UAAQ,EACRtU,QAAS4Q,GACT0F,UAAU,IAEZ,eAAC,GAAD,WAKN,eAACD,GAAA,EAAD,CACErL,MAAM,6BACNgE,KAAM,eAAC,IAAD,IACNhM,KAAK,cAHP,SAKE,eAAC2T,GAAA,EAAD,CACEtR,UAAU,cACV0G,OAAO,KACP2K,UAAU,EACVE,MAAM,EAJR,SAME,eAACC,GAAA,EAAD,CACE9K,OAAO,oCACPf,MAAM,6BAFR,SAIE,gBAACgJ,EAAA,EAAD,CAAUvB,MAAO,CAAEhC,MAAO,QAA1B,UACE,eAAC0D,EAAA,EAAD,CAAWpI,OAAO,KAAKuK,UAAU,IACjC,eAACjC,GAAA,EAAD,CACEtI,OAAO,YACPuI,UAAQ,EACRtU,QAAS4Q,GACT0F,UAAU,IAEZ,eAACnC,EAAA,EAAD,CACEpI,OAAO,aACPuK,UAAU,EACV7D,MAAO,CAAEhC,MAAO,mBAO1B,eAAC4F,GAAA,EAAD,CACErL,MAAON,EAAU,6BAA8B,CAAE6K,YAAa,IAC9DvG,KAAM,eAAC,IAAD,IACNhM,KAAK,QAHP,SAKE,eAACwT,GAAA,EAAD,CACEnR,UAAU,cACVoR,OAAO,UACPC,UAAU,EACV/N,WAAY,eAAC,GAAD,IACZE,QAAS,GACTC,KAAM,CAAEC,MAAO,aAAcZ,MAAO,QANtC,SAQE,gBAAC6L,EAAA,EAAD,CAAUvB,MAAO,CAAEhC,MAAO,QAA1B,UACE,eAAC4D,GAAA,EAAD,CAAWtI,OAAO,aAAauI,UAAQ,EAACtU,QAAS4Q,KACjD,eAACyD,GAAA,EAAD,CACEtI,OAAO,iBACPuI,UAAQ,EACRtU,QAAS4Q,KAEX,eAACuD,EAAA,EAAD,CAAWpI,OAAO,aAClB,eAAC+K,GAAA,EAAD,CAAa/K,OAAO,iBACpB,eAACoI,EAAA,EAAD,CAAWpI,OAAO,eAClB,eAACoI,EAAA,EAAD,CAAWpI,OAAO,gBAClB,eAACoI,EAAA,EAAD,CAAWpI,OAAO,mBAClB,eAAC,GAAD,CAAuBf,MAAM,2CAC7B,eAAC,GAAD,CAAoBA,MAAM,sDAC1B,eAACsK,GAAA,EAAD,CAAc/B,aAAa,cAAc3H,UAAU,WAKzD,eAACyK,GAAA,EAAD,CACErL,MAAON,EAAU,uBAAwB,CAAE6K,YAAa,IACxDvG,KAAM,eAAC,IAAD,IACNhM,KAAK,QAHP,SAKE,eAACwT,GAAA,EAAD,CACEnR,UAAU,eACVoR,OAAO,UACPC,UAAU,EAHZ,SAKE,gBAAC1C,EAAA,EAAD,CACEvB,MAAO,CAAEhC,MAAO,QAChBwD,SAAU,SAAC9Q,EAAIuO,EAAUnF,GAAf,MAA0B,UAAYpJ,EAAK,SAFvD,UAIE,eAACgR,EAAA,EAAD,CACEpI,OAAO,KACPuK,UAAU,EACVtL,MAAM,mCAER,eAAC2L,GAAA,EAAD,CACE3L,MAAM,8BACNe,OAAO,KACP1G,UAAU,QACViR,UAAU,EACVM,KAAK,GALP,SAOE,eAACzC,EAAA,EAAD,CAAWpI,OAAO,OAAOuK,UAAU,aAM3C,eAACD,GAAA,EAAD,CACErL,MAAON,EAAU,yBAA0B,CAAE6K,YAAa,IAC1DvG,KAAM,eAAC,IAAD,IACNhM,KAAK,UAHP,SAKE,eAACwT,GAAA,EAAD,CACEnR,UAAU,UACVoR,OAAO,UACPC,UAAU,EAHZ,SAKE,gBAAC1C,EAAA,EAAD,CAAUvB,MAAO,CAAEhC,MAAO,QAA1B,UACE,eAAC0D,EAAA,EAAD,CAAWpI,OAAO,OAAOuK,UAAU,IACnC,eAACnC,EAAA,EAAD,CAAWpI,OAAO,mBAAmBuK,UAAU,IAC/C,eAACnC,EAAA,EAAD,CAAWpI,OAAO,SAASuK,UAAU,IACrC,eAACnC,EAAA,EAAD,CAAWpI,OAAO,WAAWuK,UAAU,IACvC,eAACnC,EAAA,EAAD,CAAWpI,OAAO,sBAAsBuK,UAAU,IAClD,eAACnC,EAAA,EAAD,CAAWpI,OAAO,OAAOuK,UAAU,IACnC,eAACnC,EAAA,EAAD,CAAWpI,OAAO,cAAcuK,UAAU,IAC1C,eAACnC,EAAA,EAAD,CAAWpI,OAAO,UAAUuK,UAAU,kB,gTCjf9C9I,GAAYC,aAAW,CAC3B8C,MAAO,CACLC,OAAQ,OACRC,MAAO,UAILsG,GAA0B,SAAAlM,GAAK,OACnC,eAACiI,EAAA,EAAD,2BAAgBjI,GAAhB,IAAuBkI,mBAAoB,CAAC,IAAK,IAAK,IAAM,SAGjDiE,GAA4B,SAAAnM,GACvC,IAAMH,EAAYC,eAElB,OACE,eAAC2K,GAAA,EAAD,2BACMzK,GADN,IAEEG,MAAM,wCACNY,UAAU,EACV2H,aAAa,cACbD,aAAc5I,EAAU,wCAAyC,CAC/D6K,YAAa,IAEf0B,eAAgBvM,EAAU,0CAA2C,CACnE6K,YAAa,IAEfjN,SAAS,iBACT0G,KAAM,eAAC,KAAD,QAKCkI,GAAgC,SAAArM,GAAK,OAChD,eAACwI,EAAA,EAAD,2BACMxI,GADN,IAEEG,MAAM,wCACNuI,aAAa,cACbD,aAAa,wCACb2D,eAAe,0CACf3O,SAAS,iBACT0G,KAAM,eAAC,KAAD,QAIGmI,GAA8B,SAAC,GAAqB,IAAnBhK,EAAkB,EAAlBA,YACtCT,EAASC,eACTwB,EAAUC,eACVhB,EAAcC,eACpB,EAAkCC,eAAlC,oBAAOrD,EAAP,KAAqBM,EAArB,KAAqBA,QAqBrB,OACE,eAACY,EAAA,EAAD,CACEH,MAAM,yCACNI,QAtBe,SAAA0B,GACjB7C,EACE,CACEtJ,KAAM,aACN2H,SAAU,iBACVyE,QAAS,CAAErD,IAAKyD,EAAatJ,KAAM,KAErC,CACEmJ,UAAW,YAAc,EAAXnJ,KACZ6I,EAAO,gDACPU,EAAY,SACZe,KAEFlB,UAAW,SAAAM,GAAK,OACdb,EAAO,+CAAgD,aAS3DzB,SAAUV,EAHZ,SAKE,eAAC,KAAD,OAKO6M,GAA0B,SAAC,GAAgB,IAAd7K,EAAa,EAAbA,OAClCG,EAASC,eACTwB,EAAUC,eAChB,EAA8BxB,aAAU,kBAAxC,oBAAO7I,EAAP,KAAiBwG,EAAjB,KAAiBA,QAkBjB,OACE,eAACY,EAAA,EAAD,CACEH,MAAM,yCACNI,QAnBe,SAAA0B,GACjB/I,EACE,CACEgJ,QAAS,CAAElJ,KAAM,CAAEV,GAAIoJ,EAAOpJ,MAEhC,CACE6J,UAAW,YAAc,EAAXnJ,KACZ6I,EAAO,gDACPyB,KAEFlB,UAAW,SAAAM,GAAK,OACdb,EAAO,+CAAgD,aAS3DzB,SAAUV,EAHZ,SAKE,eAAC,KAAD,OAKA8M,GAAiC,SAAAxM,GAAK,OAC1C,eAAC,WAAD,UACE,eAAC,GAAD,eAAmCA,OAIjC2I,GAAc,SAAC,GAAD,IAAGzH,EAAH,EAAGA,OAAQuC,EAAX,EAAWA,UAAX,IAAsB/B,cAAtB,MAA+B,GAA/B,SAClB,eAACkH,EAAA,EAAD,CAAQC,IAAKnH,EAAOR,GAASuC,UAAWA,KAGpCgJ,GAAsB,SAAC,GAAkB,IAAbzM,EAAY,oBACtCH,EAAYC,eAClB,OACE,gBAACsI,EAAA,EAAD,2BAAYpI,GAAZ,cACE,eAAC0M,GAAA,EAAD,CACEvM,MAAON,EAAU,kCACjBqB,OAAO,UACPmD,cAAc,EACduD,MAAO,CAAE+E,aAAc,KAEzB,eAACD,GAAA,EAAD,CACEvM,MAAON,EAAU,gCACjBqB,OAAO,QACPmD,cAAc,EACduD,MAAO,CAAE+E,aAAc,KAEzB,eAACD,GAAA,EAAD,CACEvM,MAAON,EAAU,0CACjBqB,OAAO,kBACPmD,cAAc,EACduD,MAAO,CAAE+E,aAAc,UAsFxB,IAAMC,GAAoBC,cAPjC,SAAyB7R,GACvB,MAAO,CACL8R,qBACE9R,EAAMrC,MAAMoU,UAAUpQ,eAAeqQ,KAAK3T,OAAOoN,oBAItBoG,EAhFU,SAAC,GAIrC,IAHLC,EAGI,EAHJA,qBAEG9M,GACC,EAFJiN,SAEI,mBACE5J,EAAUV,KACV9C,EAAYC,eACZpC,EAASoP,EACTI,KAAexP,IAAUA,EAAOjE,SAChC0T,KAAczP,IAAUA,EAAO0P,OAC/BC,KAAuB3P,IAAUA,EAAO/D,iBAE9C,OACE,eAACoP,EAAA,EAAD,2BACM/I,GADN,IAEElC,WAAY,eAAC,GAAD,IACZoL,kBAAmB,eAAC,GAAD,IACnB1C,QAAS,eAAC,GAAD,IACTxI,QAAS,IALX,SAOE,gBAACmL,EAAA,EAAD,CAAUC,SAAU,SAAC9Q,EAAIuO,EAAUnF,GAAf,MAA0B,UAAYpJ,EAAK,SAA/D,UACE,eAAC,GAAD,CACE4I,OAAO,aACPuK,UAAU,EACVhI,UAAWJ,EAAQqC,MACnBvF,MAAON,EAAU,mCAEnB,eAACyJ,EAAA,EAAD,CACEpI,OAAO,OACPuK,UAAU,EACVtL,MAAON,EAAU,iCAElBqN,GACC,eAAC5D,EAAA,EAAD,CACEpI,OAAO,UACPuK,UAAU,EACVtL,MAAON,EAAU,oCAGpBwN,GACC,eAAC/D,EAAA,EAAD,CACEpI,OAAO,kBACPuK,UAAU,EACVtL,MAAON,EAAU,4CAGpBsN,GACC,eAAC7D,EAAA,EAAD,CACEpI,OAAO,QACPuK,UAAU,EACVtL,MAAON,EAAU,kCAGrB,eAACoM,GAAA,EAAD,CACE/K,OAAO,qBACPuK,UAAU,EACVtL,MAAON,EAAU,2CAEnB,eAAC0J,EAAA,EAAD,CACErI,OAAO,iBACPuK,UAAU,EACVtL,MAAON,EAAU,oDAEnB,eAAC0J,EAAA,EAAD,CACErI,OAAO,iBACPuK,UAAU,EACVtL,MAAON,EAAU,6D,8BCpMrBkG,GAAc,CAClBC,KAAM,UACNC,MAAO,UACPC,IAAK,UACLC,KAAM,UACNC,OAAQ,UACRC,OAAQ,WAGJ1D,GAAYC,cAAW,SAAAC,GAAK,MAAK,CACrCyK,2BAA4B,CAC1BC,WAAY,uCACZC,OAAQ,aAINC,GAAiB,SAAAzN,GAAK,OAC1B,eAACiI,EAAA,EAAD,2BAAgBjI,GAAhB,IAAuBkI,mBAAoB,CAAC,GAAI,GAAI,GAAI,IAAK,IAAK,SAG9DwF,GAAkB,SAAC,GAAwC,IAAtCxM,EAAqC,EAArCA,OAAqC,IAA7BQ,cAA6B,MAApB,GAAoB,EAAhBiM,EAAgB,EAAhBA,UACxC9N,EAAYC,eACZ1C,EAAQwQ,KAAIlM,EAAQR,GACtB2M,GAAsB,IAAVzQ,EAAkB,mBAAqB,kBAEvD,OAAc,IAAVA,IAA6B,IAAVA,EAEnB,eAAC0Q,GAAA,EAAD,CAAYrG,UAAU,OAAOsG,QAAQ,QAArC,SACE,eAAC3I,GAAA,EAAD,CAAStB,MAAOjE,EAAUgO,EAAW,CAAExI,EAAGwI,IAA1C,UACa,IAAVzQ,EACC,eAAC,KAAD,CAAW,cAAY,OAAO4Q,UAAU,cAExC,eAAC,KAAD,CAAkB,cAAY,QAAQjL,MAAM,cAQpD,eAAC+K,GAAA,EAAD,CAAYrG,UAAU,OAAOsG,QAAQ,QAArC,SACGJ,KAKDM,GAAY,SAAC,GAAgB,IAAdvM,EAAa,EAAbA,OACb7B,EAAYC,eACdvH,EAAO,GAKX,OAJImJ,IACFnJ,EAAuB,KAAhBmJ,EAAOnJ,KAAcmJ,EAAOnJ,KAAOmJ,EAAOpJ,IAIjD,kCACGuH,EAAU,uBAAwB,GADrC,IAC0CtH,MAKxC2V,GAAkB,SAAC,GAAkC,IAAhCrH,EAA+B,EAA/BA,SAAU7N,EAAqB,EAArBA,KAAMyE,EAAe,EAAfA,SACrC0Q,EAAsB,GAK1B,OAJInV,IACFmV,EAAsBnV,EAAKiB,QAI3B,gBAACkN,EAAA,EAAD,YAC2B,IAAxBgH,GACC,eAAC,GAAD,CAAyBzM,OAAQ1I,KAEV,IAAxBmV,GACC,eAAC,GAAD,CAA2BzM,OAAQ1I,IAErC,eAACyR,GAAA,EAAD,CACE5D,SAAUA,EACVnF,OAAQ1I,EACRyE,SAAUA,EACViL,aAAa,cACbD,aAAa,qCACb2D,eAAe,6CAMVgC,GAAW,SAAApO,GACtB,IAAMqD,EAAUV,GAAU,CAAE3C,UACtBH,EAAYC,eAClB,OACE,eAACuO,GAAA,EAAD,2BAAUrO,GAAV,IAAiBiJ,QAAS,eAAC,GAAD,IAAqBnF,MAAO,eAAC,GAAD,IAAtD,SACE,gBAACwK,GAAA,EAAD,WACE,gBAACC,GAAA,EAAD,CAAKpO,MAAM,gCAAgCgE,KAAM,eAAC,IAAD,IAAjD,UACE,eAACmF,EAAA,EAAD,CAAWpI,OAAO,YAClB,eAACoI,EAAA,EAAD,CAAWpI,OAAO,SAClB,eAACoI,EAAA,EAAD,CAAWpI,OAAO,oBAClB,eAAC4K,GAAA,EAAD,CAAgB5K,OAAO,UAAU1G,UAAU,QAA3C,SACE,eAAC8O,EAAA,EAAD,CAAWpI,OAAO,YAItB,gBAACqN,GAAA,EAAD,CACEpO,MAAM,iCACNgE,KAAM,eAAC,KAAD,IACNhM,KAAK,SAHP,UAKE,eAACmR,EAAA,EAAD,CAAWpI,OAAO,mBAClB,eAACoI,EAAA,EAAD,CAAWpI,OAAO,yBAClB,eAACoI,EAAA,EAAD,CAAWpI,OAAO,yBAClB,eAACoI,EAAA,EAAD,CAAWpI,OAAO,iBAClB,eAACoI,EAAA,EAAD,CAAWpI,OAAO,YAClB,eAACoI,EAAA,EAAD,CACEpI,OAAO,aACPyM,UAAW9N,EAAU,0CAIzB,eAAC0O,GAAA,EAAD,CAAKpO,MAAM,kCAAkCgE,KAAM,eAAC,KAAD,IAAnD,SACE,eAACwH,GAAA,EAAD,CACEnR,UAAU,eACVoR,OAAO,UACPC,UAAU,EAHZ,SAKE,gBAAC1C,EAAA,EAAD,CACEvB,MAAO,CAAEhC,MAAO,QAChBwD,SAAU,SAAC9Q,EAAIuO,EAAUnF,GAAf,MAA0B,UAAYpJ,GAFlD,UAIE,eAACgR,EAAA,EAAD,CACEpI,OAAO,KACPuK,UAAU,EACVtL,MAAM,8BAER,eAAC2L,GAAA,EAAD,CACE3L,MAAM,qCACNe,OAAO,KACP1G,UAAU,QACViR,UAAU,EACVM,KAAK,GALP,SAOE,eAACzC,EAAA,EAAD,CAAWpI,OAAO,cAAcuK,UAAU,aAMlD,gBAAC8C,GAAA,EAAD,CACEpO,MAAM,qCACNgE,KAAM,eAAC,KAAD,IACNhM,KAAK,aAHP,UAKE,eAACoR,EAAA,EAAD,CAAcrI,OAAO,gBACrB,eAACqI,EAAA,EAAD,CAAcrI,OAAO,WACrB,eAACsN,GAAA,EAAD,CACEtN,OAAO,aACPgK,QAAS,CACP,CAAE5S,GAAI,SAAUC,KAAM,2CACtB,CAAED,GAAI,QAASC,KAAM,0CACrB,CAAED,GAAI,SAAUC,KAAM,2CACtB,CACED,GAAI,UACJC,KAAM,+CAIZ,eAACiW,GAAA,EAAD,CACEtN,OAAO,eACPgK,QAAS,CACP,CACE5S,GAAI,WACJC,KAAM,+CAER,CACED,GAAI,YACJC,KAAM,mDAIZ,eAACiW,GAAA,EAAD,CACEtN,OAAO,qBACPgK,QAAS,CACP,CACE5S,GAAI,UACJC,KAAM,oDAER,CACED,GAAI,SACJC,KAAM,mDAER,CACED,GAAI,SACJC,KAAM,mDAER,CACED,GAAI,iBACJC,KAAM,iEAMd,eAACgW,GAAA,EAAD,CACEpO,MAAON,EAAU,4BAA6B,CAAE6K,YAAa,IAC7DvG,KAAM,eAAC,KAAD,IACNhM,KAAK,QAHP,SAKE,eAACwT,GAAA,EAAD,CACEnR,UAAU,aACVoR,OAAO,UACPC,UAAU,EAHZ,SAKE,gBAAC1C,EAAA,EAAD,CAAUvB,MAAO,CAAEhC,MAAO,QAA1B,UACE,eAAC0D,EAAA,EAAD,CAAWpI,OAAO,OAAOuK,UAAU,IACnC,eAACjC,GAAA,EAAD,CACEtI,OAAO,mBACPuI,UAAQ,EACRtU,QAAS4Q,GACT0F,UAAU,IAEZ,eAACnC,EAAA,EAAD,CAAWpI,OAAO,UAAUuK,UAAU,IACtC,eAACK,GAAA,EAAD,CACE5K,OAAO,SACP1G,UAAU,QACViR,UAAU,EAHZ,SAKE,eAACnC,EAAA,EAAD,CAAWpI,OAAO,gBAM1B,gBAACqN,GAAA,EAAD,CACEpO,MAAM,qCACNgE,KAAM,eAAC,KAAD,IACNhM,KAAK,sBAHP,UAKE,sBAAKsL,UAAWJ,EAAQiK,2BAAxB,SACGzN,EAAU,gDAEb,eAAC8L,GAAA,EAAD,CACEnR,UAAU,sBACVoR,OAAO,UACPC,UAAU,EAHZ,SAKE,gBAAC1C,EAAA,EAAD,CAAUvB,MAAO,CAAEhC,MAAO,QAA1B,UACE,eAAC0D,EAAA,EAAD,CAAWpI,OAAO,KAAKuK,UAAU,IACjC,eAACjC,GAAA,EAAD,CACEtI,OAAO,cACPuI,UAAQ,EACRtU,QAAS4Q,GACT0F,UAAU,IAEZ,eAACQ,GAAA,EAAD,CAAa/K,OAAO,QAAQuK,UAAU,IACtC,eAACnC,EAAA,EAAD,CAAWpI,OAAO,cAAcuK,UAAU,mBASlDgD,GAAwB,SAAAzO,GAAK,OACjC,gBAAC,WAAD,WACE,eAAC,GAAD,eAAiCA,IACjC,eAAC,GAAD,eAAmCA,IACnC,eAACwI,EAAA,EAAD,2BACMxI,GADN,IAEEyI,aAAa,qCACb2D,eAAe,uCACf1D,aAAa,qBAKbgG,GAAa,SAAC,GAAkB,IAAb1O,EAAY,oBAC7BH,EAAYC,eAClB,OACE,gBAACsI,EAAA,EAAD,2BAAYpI,GAAZ,cACE,eAACqI,EAAA,EAAD,CAAanH,OAAO,cAAcoH,UAAQ,IAC1C,eAACoE,GAAA,EAAD,CACEvM,MAAON,EAAU,+CACjBqB,OAAO,uBACPmD,cAAc,EACduD,MAAO,CAAE+E,aAAc,KAEzB,eAACD,GAAA,EAAD,CACEvM,MAAON,EAAU,uCACjBqB,OAAO,eACPmD,cAAc,EACduD,MAAO,CAAE+E,aAAc,KAEzB,eAACD,GAAA,EAAD,CACEvM,MAAON,EAAU,kCACjBqB,OAAO,UACPmD,cAAc,EACduD,MAAO,CAAE+E,aAAc,KAEzB,eAACD,GAAA,EAAD,CACEvM,MAAON,EAAU,sCACjBqB,OAAO,cACPmD,cAAc,EACduD,MAAO,CAAE+E,aAAc,UAMzBgC,GAAgB,SAAA3O,GACpB,IAAQkB,EAAWlB,EAAXkB,OACFQ,EAASkN,aAAiB5O,GAChC,OACE,gCAAO0B,EAAOR,IAAWQ,EAAM,iBAAuBA,EAAM,MAkDzD,IAAMmN,GAAWhC,cANxB,SAAyB7R,GACvB,MAAO,CACL8T,YAAa9T,EAAMrC,MAAMoU,UAAUxT,MAAMyT,KAAK3T,OAAOoN,oBAIjCoG,EAxCG,SAAC,GAAyC,IAAvCiC,EAAsC,EAAtCA,YAA0B9O,GAAY,EAAzBiN,SAAyB,mBAC5DvP,EAASoR,EACTC,KACJrR,IAAUA,EAAOsR,sBACbC,KAAoBvR,IAAUA,EAAOwR,cACrCC,KAAgBzR,IAAUA,EAAO0R,SACjCC,KAAqB3R,IAAUA,EAAO1D,aAE5C,OACE,eAAC+O,EAAA,EAAD,2BACM/I,GADN,IAEElC,WAAY,eAAC,GAAD,IACZG,KAAM,CAAEC,MAAO,OAAQZ,MAAO,OAC9BkJ,QAAS,eAAC,GAAD,IACT0C,kBAAmB,eAAC,GAAD,IALrB,SAOE,gBAACC,EAAA,EAAD,CAAUC,SAAS,OAAnB,UACE,eAAC,GAAD,CACElI,OAAO,eACPmI,OAAO,aACPlJ,MAAO,eAAC,KAAD,MAET,eAAC,GAAD,CAAee,OAAO,SACtB,eAACoI,EAAA,EAAD,CAAWpI,OAAO,mBACjB6N,GAAsB,eAACzF,EAAA,EAAD,CAAWpI,OAAO,yBACxC+N,GAAqB,eAAC3F,EAAA,EAAD,CAAWpI,OAAO,iBACvCiO,GAAiB,eAAC7F,EAAA,EAAD,CAAWpI,OAAO,YACnCmO,GAAsB,eAAC9F,EAAA,EAAD,CAAcrI,OAAO,gBAC5C,eAACqI,EAAA,EAAD,CAAcrI,OAAO,oBCvXvB6E,GAAc,CAClBC,KAAM,UACNC,MAAO,UACPC,IAAK,UACLC,KAAM,UACNC,OAAQ,UACRC,OAAQ,WAGJiJ,GAAmB,SAAAtP,GAAK,OAC5B,eAACiI,EAAA,EAAD,2BAAgBjI,GAAhB,IAAuBkI,mBAAoB,CAAC,GAAI,GAAI,GAAI,IAAK,IAAK,SAGvDqH,GAAa,SAAAvP,GACxB,IAAMH,EAAYC,eAClB,OACE,eAACuO,GAAA,EAAD,2BAAUrO,GAAV,aACE,gBAACsO,GAAA,EAAD,WACE,gBAACC,GAAA,EAAD,CACEpO,MAAON,EAAU,kCAAmC,CAClD6K,YAAa,IAEfvG,KAAM,eAAC,IAAD,IAJR,UAME,eAACqF,GAAA,EAAD,CACEtI,OAAO,cACPuI,UAAQ,EACRtU,QAAS4Q,GACT0F,UAAU,IAEZ,eAACK,GAAA,EAAD,CAAgB5K,OAAO,UAAU1G,UAAU,QAA3C,SACE,eAAC8O,EAAA,EAAD,CAAWpI,OAAO,SAEpB,eAAC+K,GAAA,EAAD,CAAa/K,OAAO,UACpB,eAACoI,EAAA,EAAD,CAAWpI,OAAO,WAClB,eAACoI,EAAA,EAAD,CAAWpI,OAAO,SAClB,eAACoI,EAAA,EAAD,CACEpI,OAAO,kBACPf,MAAM,2CAER,eAAC2L,GAAA,EAAD,CACE5K,OAAO,UACP1G,UAAU,QACVuR,KAAK,OACL5L,MAAM,iCAJR,SAME,eAACmJ,EAAA,EAAD,CAAWpI,OAAO,YAItB,gBAACqN,GAAA,EAAD,CACEpO,MAAM,mCACNgE,KAAM,eAAC,KAAD,IACNhM,KAAK,SAHP,UAKG,IACD,eAACqR,GAAA,EAAD,CACEtI,OAAO,8BACPuI,UAAQ,EACRtU,QAAS4Q,GACT0F,UAAU,IAEZ,eAACK,GAAA,EAAD,CAAgB5K,OAAO,SAAS1G,UAAU,QAA1C,SACE,eAAC8O,EAAA,EAAD,CAAWpI,OAAO,SAEpB,eAACoI,EAAA,EAAD,CAAWpI,OAAO,aAClB,eAACoI,EAAA,EAAD,CAAWpI,OAAO,sBAClB,eAACoI,EAAA,EAAD,CAAWpI,OAAO,oBAClB,eAACoI,EAAA,EAAD,CAAWpI,OAAO,+BAClB,eAACoI,EAAA,EAAD,CAAWpI,OAAO,4BAClB,eAACoI,EAAA,EAAD,CAAWpI,OAAO,8BAClB,eAACoI,EAAA,EAAD,CAAWpI,OAAO,sCAClB,eAACoI,EAAA,EAAD,CAAWpI,OAAO,iCAClB,eAACoI,EAAA,EAAD,CACEpI,OAAO,+BACPf,MAAM,+CAQLqP,GAAa,SAAC,GAAkB,IAAbxP,EAAY,oBAC1C,OACE,eAAC+I,EAAA,EAAD,2BACM/I,GADN,IAEElC,WAAY,eAAC,GAAD,IACZG,KAAM,CAAEC,MAAO,cAAeZ,MAAO,QACrC4L,mBAAmB,EAJrB,SAME,gBAACC,EAAA,EAAD,CAAUC,SAAS,OAAnB,UACE,eAACE,EAAA,EAAD,CAAWpI,OAAO,KAAKuK,UAAU,IACjC,eAACjC,GAAA,EAAD,CACEtI,OAAO,cACPuI,UAAQ,EACRtU,QAAS4Q,GACT0F,UAAU,IAEZ,eAACnC,EAAA,EAAD,CAAWmC,UAAU,EAAOvK,OAAO,YACnC,eAACoI,EAAA,EAAD,CAAWmC,UAAU,EAAOvK,OAAO,SACnC,eAACoI,EAAA,EAAD,CAAWmC,UAAU,EAAOvK,OAAO,iB,qJC3FrCyB,GAAYC,cAAW,SAAAC,GAAK,MAAK,CACrCI,KAAM,CACJwM,QAAS,OACTC,cAAe,SACfC,UAAW,oBACXC,WAAY,SACZC,eAAgB,aAChBC,WAAY,kCACZ5M,gBAAiB,UACjB6M,iBAAkB,YAClBC,eAAgB,SAElBC,KAAM,CACJC,SAAU,OACVC,UAAW,MACXxD,aAAc,OAEhByD,OAAQ,CACN5C,OAAQ,MACRiC,QAAS,OACTI,eAAgB,UAElB1L,KAAM,CACJjB,gBAAiBL,EAAMG,QAAQqN,UAAUpN,MAE3CqN,KAAM,CACJH,UAAW,MACXV,QAAS,OACTI,eAAgB,SAChB9M,MAAOF,EAAMG,QAAQuN,KAAK,MAE5BC,KAAM,CACJC,QAAS,iBAEXC,MAAO,CACLP,UAAW,OAEblH,QAAS,CACPwH,QAAS,iBAEXE,cAAe,CACb5N,MAAO,UACPwK,WAAY,uCACZZ,aAAc,MACdiE,WAAY,aA8SDC,GA1SG,SAAC,GAAe,IAAbhO,EAAY,EAAZA,MACbQ,EAAUV,GAAU,CAAEE,UACtBlO,EAAQmc,eACRjP,EAASC,eACf,EAA8BH,oBAAS,GAAvC,oBAAOjC,EAAP,KAAgBqR,EAAhB,KACA,EAA8CpP,oBAAS,GAAvD,oBAAOqP,EAAP,KAAwBC,EAAxB,KACIC,EAASC,eACPC,EAAYC,eACZxR,EAAYC,eAEZwR,GADW3b,aAAaC,QAAQ,YACjBZ,6BACrB,EAAoC2M,mBAAS,IAA7C,oBAAO4P,EAAP,KAAmBC,EAAnB,KACMzc,EAAa,gCAAgC+C,KAAK1B,OAAOqb,SAASC,MAExE,GAAI3c,EAAY,CACd,IAAM4c,EAAW5c,EAAW,GAC5BE,QAAQC,IAAI,eAAgByc,GAE5Bvb,OAAOwb,QAAQC,aACb,GACA,GACAzb,OAAOqb,SAASC,KAAKzb,QAAQlB,EAAW,GAAI,KAAK+c,MAAM,KAAK,IAE9D,IAAMC,EAAUpc,aAAaC,QAAQ,gBAErC,GADAD,aAAaqB,WAAW,gBACpB+a,EAAS,CACX,IAAMC,EAAO,CACXpd,SAAUmd,EACVld,SAAU,KACVC,SAAU,KACVC,WAAY4c,GAEd1c,QAAQC,IAAI,eAAgB6c,GAC5B9c,QAAQC,IAAI,gBAAiByc,GAC7B1c,QAAQC,IAAI,4BACZP,EAAMqd,GAAMC,OAAM,SAAAvP,GAChBwP,MACmB,kBAAVxP,EACHA,EACiB,qBAAVA,GAA0BA,EAAMyP,QAEvCzP,EAAMyP,QADN,yBAGNld,QAAQyN,MAAMA,OAKpB,IAAM0P,EAAc,SAAC,GAAD,QAClBC,KAAQC,GADU,aACS,GADT,GACVA,QAAS5P,EADC,EACDA,MACL6P,EAFM,mBAElB7B,OACG1Q,EAHe,yBAKlB,eAAC,KAAD,qCACE0C,SAAU4P,IAAW5P,GACrBgJ,WAAY4G,GAAW5P,GACnB6P,GACAvS,GAJN,IAKEmB,WAAS,MA2CPqR,EAAY,WAChB7c,aAAaO,QAAQ,eAAgBqb,GACrC,IAAMkB,EAAU,UAAMlB,EAAN,6DAAqEmB,mBACnFtc,OAAOqb,SAASC,OAElBtb,OAAOqb,SAASC,KAAOe,GAWnBE,EAAW,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAElB,GADaC,eAC6BlR,mBAAS,KAAnD,oBAAOgP,EAAP,KAAsBmC,EAAtB,KAsEA,OAjDAC,qBACE,SAAA1N,GACE,GACGuN,EAAShe,UACTge,EAAShe,SAASoe,MAAM,sCAF3B,CAKA,IAAMC,EAAU,UAAML,EAAShe,SAAf,qCAChB0B,IACGC,UAAU0c,EAAY,CAAE7d,OAAQ,QAChCoB,MAAK,YAAe,IAAZC,EAAW,EAAXA,KACPqc,EAAiB,GAAD,OACXjT,EAAU,oCADC,YAEZpJ,EAAI,oBAITwb,OAAM,SAAA5M,GACLyN,EAAiB,OAIrB,IAAMI,EAAa,UAAMN,EAAShe,SAAf,4BACfue,GAAc,EAChBC,GAAa,EACf9c,IACGC,UAAU2c,EAAe,CAAE9d,OAAQ,QACnCoB,MAAK,YAAc,EAAXC,KACF4c,MAAMC,SAAQ,SAAAC,GACF,qBAAXA,EAAEzd,KACJqd,GAAc,EACM,gBAAXI,EAAEzd,OACXsd,GAAa,MAGjBnC,EAAmBkC,GAEjB3B,EADE4B,EACYR,EAAShe,SAET,OAGjBqd,OAAM,SAAA5M,GACLmM,EAAc,UAGpB,CAACoB,EAAShe,WAIV,iCACE,sBAAK6O,UAAWJ,EAAQqN,MAAxB,SACE,eAACzP,GAAA,EAAD,CACEuS,WAAS,EACTjb,KAAK,WACLkP,UAAW2K,EACXjS,MAAON,EAAU,oBACjBO,SAAUV,IAAYsR,EACtByC,OA7EqB,SAAApO,GACvBuN,EAAShe,UA6EP0M,YAAU,EACVH,WAAS,MAGb,sBAAKsC,UAAWJ,EAAQqN,MAAxB,SACE,eAAC5F,GAAA,EAAD,CACEvS,KAAK,WACLkP,UAAW2K,EACXjS,MAAON,EAAU,oBACjB/J,KAAK,WACLsK,SAAUV,IAAYsR,EACtB1P,YAAU,EACVH,WAAS,MAGb,sBAAKsC,UAAWJ,EAAQqN,MAAxB,SACE,eAACzP,GAAA,EAAD,CACE1I,KAAK,WACLkP,UAAW2K,EACXjS,MAAON,EAAU,8BACjBO,SAAUkR,EACVhQ,YAAU,EACVH,WAAS,MAGb,sBAAKsC,UAAWJ,EAAQsN,cAAxB,SAAwCA,QAK9C,OACE,eAAC,KAAD,CACE+C,cAAe,CAAE9e,SAAU0c,GAC3BqC,SAlJiB,SAAA3B,GACnBjB,GAAW,GACXpc,EAAMqd,GAAMC,OAAM,SAAAvP,GAChBqO,GAAW,GACXlP,EACmB,kBAAVa,EACHA,EACiB,qBAAVA,GAA0BA,EAAMyP,QAEvCzP,EAAMyP,QADN,wBAEJ,eAyIF5Q,SA3Ka,SAAAU,GACf,IAAM2R,EAAS,GAoBf,OAnBK3R,EAAOpN,WACV+e,EAAO/e,SAAWgL,EAAU,2BAEzBoC,EAAOnN,WACV8e,EAAO9e,SAAW+K,EAAU,2BAEzBoC,EAAOrN,SAGLqN,EAAOrN,SAASoe,MAAM,sBAGxB/Q,EAAOrN,SAASoe,MACf,2DAGFY,EAAOhf,SAAWiL,EAAU,gCAN5B+T,EAAOhf,SAAWiL,EAAU,oCAH9B+T,EAAOhf,SAAWiL,EAAU,0BAYvB+T,GAuJLC,OAAQ,gBAAGC,EAAH,EAAGA,aAAH,OACN,uBAAMH,SAAUG,EAAcC,YAAU,EAAxC,SACE,uBAAKtQ,UAAWJ,EAAQJ,KAAxB,UACE,gBAAC+Q,GAAA,EAAD,CAAMvQ,UAAWJ,EAAQ4M,KAAzB,UACE,sBAAKxM,UAAWJ,EAAQ+M,OAAxB,SACE,eAACxH,EAAA,EAAD,CAAQnF,UAAWJ,EAAQc,KAA3B,SACE,eAAC,KAAD,QAGJ,sBAAKV,UAAWJ,EAAQiN,KAAxB,SACGzQ,EAAU,+BAEb,uBAAK4D,UAAWJ,EAAQmN,KAAxB,UACE,sBAAK/M,UAAWJ,EAAQqN,MAAxB,SACE,gBAACuD,GAAA,EAAD,CACE7W,MAAO8T,EACPgD,SAAU,SAAAC,GACR/C,EAAU+C,EAAEvI,OAAOxO,QAErB+D,WAAS,EACTf,SAAUV,EANZ,UAQE,eAAC0U,GAAA,EAAD,CAAUhX,MAAM,KAAhB,qBACA,eAACgX,GAAA,EAAD,CAAUhX,MAAM,KAAhB,qBACA,eAACgX,GAAA,EAAD,CAAUhX,MAAM,KAAhB,2CAGJ,eAACiX,GAAA,EAAD,UACG,SAAAC,GAAa,OAAI,eAAC3B,EAAD,eAAc2B,UAGpC,gBAACC,GAAA,EAAD,CAAa9Q,UAAWJ,EAAQ4F,QAAhC,UACE,gBAAC,KAAD,CACE8E,QAAQ,YACRjY,KAAK,SACLiN,MAAM,UACN3C,SAAUV,IAAYsR,EACtBvN,UAAWJ,EAAQmR,OACnBrT,WAAS,EANX,UAQGzB,GAAW,eAAC+U,GAAA,EAAD,CAAkBC,KAAM,GAAIC,UAAW,IAClD9U,EAAU,sBAEb,gBAAC,KAAD,CACEkO,QAAQ,YACRhL,MAAM,YACNxC,QAASiS,EACTpS,SAAUV,GAA0B,KAAf6R,EACrB9N,UAAWJ,EAAQmR,OACnBrT,WAAS,EANX,UAQGzB,GAAW,eAAC+U,GAAA,EAAD,CAAkBC,KAAM,GAAIC,UAAW,IAClD9U,EAAU,0CAIjB,eAAC+U,GAAA,EAAD,a,uGC5VNC,GAAc,SAAA7U,GAClB,IAAQyD,EAAsDzD,EAAtDyD,UAAqB+C,GAAiCxG,EAA3C0G,SAA2C1G,EAAjCwG,SAASS,EAAwBjH,EAAxBiH,WAAeC,EAArD,YAA8DlH,EAA9D,IACA,EAOI8U,eANFvO,EADF,EACEA,YACA9I,EAFF,EAEEA,SACAgJ,EAHF,EAGEA,iBACAE,EAJF,EAIEA,aACAI,EALF,EAKEA,WACA9N,EANF,EAMEA,MAEF,OACE,gBAACkO,EAAA,EAAD,yBAAY1D,UAAWA,GAAe2D,YAAsBF,IAA5D,cACGV,GACCa,uBAAab,EAAS,CACpB/I,WACAsJ,aACAN,mBACAE,eACAW,QAAS,WAEb,eAAC,GAAD,IACA,eAACE,EAAA,EAAD,CACEpH,SAAoB,IAAVnH,EACVwE,SAAUA,EACVQ,KAAMsI,EACNI,aAAcA,EACdM,WAAYA,SAMd8N,GAA2B,SAAA/U,GAAK,OACpC,eAACiI,EAAA,EAAD,2BAAgBjI,GAAhB,IAAuBkI,mBAAoB,CAAC,GAAI,GAAI,GAAI,IAAK,IAAK,SAG9D8M,GAAuB,SAAAhV,GAAK,OAChC,eAACoI,EAAA,EAAD,2BAAYpI,GAAZ,aACE,eAACqI,EAAA,EAAD,CAAanH,OAAO,cAAcoH,UAAQ,QAIjC2M,GAAqB,SAAAjV,GAChC,OACE,eAAC+I,EAAA,EAAD,2BACM/I,GADN,IAEEiJ,QAAS,eAAC,GAAD,IACTzC,QAAS,eAAC,GAAD,IACT1I,WAAY,eAAC,GAAD,IACZG,KAAM,CAAEC,MAAO,eAAgBZ,MAAO,QACtC4L,mBAAmB,EANrB,SAQE,gBAACC,EAAA,EAAD,CAAUC,SAAU,SAAC9Q,EAAIuO,EAAUnF,GAAf,MAA0B,UAAYpJ,EAAK,UAA/D,UACE,eAACgR,EAAA,EAAD,CAAWpI,OAAO,UAAUf,MAAM,8BAClC,eAACmJ,EAAA,EAAD,CACEpI,OAAO,cACPf,MAAM,uCAER,eAAC8L,GAAA,EAAD,CAAa/K,OAAO,gBACpB,eAAC+K,GAAA,EAAD,CAAa/K,OAAO,wB,yKCtCtBgU,GAAiB,CAAC,KAAM,eAAejX,OACvCkX,GAAiB,CACrB,YACA,QACA,QACA,cACA,aACA,YACAlX,OAEF,SAASmX,GAAT,GAA8C,IAAhBhY,EAAe,EAAfA,MAAOiY,EAAQ,EAARA,KAC7BxV,EAAYC,eAClB,OAAO,yBAAQ1C,MAAOA,EAAf,SAAuByC,EAAUwV,KAG1C,IA4mBaC,GA5mBM,SAAAtV,GACjB,MAA4B2B,mBAAS,MAArC,oBAAOM,EAAP,KAAesT,EAAf,KACA,EAA0B5T,mBAAS,MAAnC,oBAAOe,EAAP,KAAc8S,EAAd,KACA,EAA0B7T,mBAAS,MAAnC,oBAAO8T,EAAP,KAAcC,EAAd,KACA,EAA4B/T,oBAAS,GAArC,oBAAOgU,EAAP,KAAeC,EAAf,KAEA,EAAgCjU,mBAAS,MAAzC,oBAAOkU,EAAP,KAAiBC,EAAjB,KAEA,EAA0CnU,mBAAS,MAAnD,oBAAOoU,EAAP,KAAsBC,EAAtB,KACA,EAA4CrU,mBAAS,MAArD,oBAAOsU,EAAP,KAAuBC,EAAvB,KAEA,EAAwCvU,mBAAS,QAAjD,oBAAOwU,EAAP,KAAqBC,EAArB,KACA,EAAwCzU,oBAAS,GAAjD,oBAAO0U,EAAP,KAAqBC,EAArB,KACA,EAAoC3U,mBAAS,UAA7C,oBAAO4U,EAAP,KAAmBC,EAAnB,KAEM3W,EAAYC,eACZ+B,EAASC,eAETvE,EAAekZ,eAEfC,EAAY,yCAAG,WAAMvC,GAAN,kBAAAwC,EAAA,yDACF,OAAbd,EADe,oDAGnBN,EAAU,MACVC,EAAS,MACTE,EAAS,MACTM,EAAiB,SACXY,EAAOzC,EAAEvI,OAAOiL,MAAQ1C,EAAEvI,OAAOiL,MAAM,GAAK,MAGzCnC,KAAO,KAVG,wBAWXvC,EAAUtS,EAAU,uCAAwC,CAChE6U,MAAOkC,EAAKlC,KAAL,SAA2BoC,QAAQ,KAE5CjV,EAAOsQ,GACPqD,EAASrD,GAfQ,qCAmBjB4E,iBAASH,EAAM,CACbI,QAAQ,EACRC,gBAAgB,EAChBC,SAAU,SAAAC,GACJA,EAAOzU,OACT8S,EAAS2B,EAAOzU,OAIlB0U,EAAUD,EAAQ,CAAE5B,YAAWG,WAAUF,gBA5B5B,0DAgCjBA,GAAS,GAhCQ,kBAiCV,MAjCU,2DAAH,sDAqCZ4B,EAAY,SAAC,EAAD,GAGZ,IAFFpe,EAEC,EAFDA,KAAMqZ,EAEL,EAFKA,KAAMuB,EAEX,EAFWA,OACZ2B,EACC,EADDA,UAAWG,EACV,EADUA,SAAUF,EACpB,EADoBA,SAGnB6B,EAAKtN,MAAM5L,KAAK+W,IAChBoC,EAAKvN,MAAM5L,KAAKgX,IAWpB,GATA9C,EAAKkF,OAAOjE,SAAQ,SAAA/a,GACd8e,EAAGG,SAASjf,KACd8e,EAAKA,EAAG3Z,QAAO,SAAA6G,GAAC,OAAIA,IAAMhM,MAExB+e,EAAGE,SAASjf,KACd+e,EAAKA,EAAG5Z,QAAO,SAAA6G,GAAC,OAAIA,IAAMhM,SAIZ,IAAd8e,EAAGpc,OAIL,OAHAua,EACE3V,EAAU,oCAAqC,CAAE3B,MAAOmZ,EAAG,OAEtD,EAST,IAAI5B,EAAQ,CACVgC,WAAY,CAAEC,QAAS,GACvBhf,SAAU,EACVC,MAAO,EACPE,YAAa,EACb/D,SAAU,EACV2D,WAAY,EACZH,GAAI,EAEJW,MAAOD,EAAKiC,QA4Dd,OAzDAjC,EAAKsa,SAAQ,SAACqE,EAAMC,QACKC,IAAnBF,EAAKG,WAA8C,KAAnBH,EAAKG,UACvCrC,EAAMgC,WAAWC,UAEjBjC,EAAMgC,WAAWE,EAAKG,YAAc,EAMlCzF,EAAKkF,OAAOC,SAAS,gBAChBG,EAAKpf,KAEV8Z,EAAKkF,OAAOC,SAAS,qBAChBG,EAAKG,UAEVzF,EAAKkF,OAAOC,SAAS,cACvBG,EAAKhf,MAAQgf,EAAKI,gBACXJ,EAAKI,UAGd,CAAC,WAAY,QAAS,eAAezE,SAAQ,SAAAC,GAC3B,SAAZoE,EAAKpE,IACPkC,EAAMlC,KACNoE,EAAKpE,IAAK,IAEM,UAAZoE,EAAKpE,IAA8B,KAAZoE,EAAKpE,IAC9BK,EAAOoE,KACLnY,EAAU,mCAAoC,CAC5C3B,MAAOqV,EACP0E,IAAKL,KAIXD,EAAKpE,IAAK,WAIQsE,IAAlBF,EAAK7iB,UAA4C,KAAlB6iB,EAAK7iB,UACtC2gB,EAAM3gB,gBAGgB+iB,IAApBF,EAAKlf,YAAgD,KAApBkf,EAAKlf,YACxCgd,EAAMhd,kBAGQof,IAAZF,EAAKrf,IAAgC,KAAZqf,EAAKrf,IAChCmd,EAAMnd,QAINsb,EAAO3Y,OAAS,GAClBua,EAAS5B,GAEX8B,EAASD,GACTF,EAAUvc,IAEH,GAGHkf,EAAS,yCAAG,WAAM/D,GAAN,gBAAAwC,EAAA,yDACC,OAAbd,EADY,uBAEdhU,EAAO,2CAFO,0CAMMsW,EACpB5a,EACA0E,EACAkU,EACAE,EACAE,EACAZ,EACAG,EACAN,GAdc,OAMV4C,EANU,OAgBhBpC,EAAiBoC,GAIjBlC,EAAkBmC,mBAAWD,EAAQnC,iBACxBhhB,QAAQC,IAAI,oBACZD,QAAQC,IAAI+gB,GAtBT,4CAAH,sDA4BTkC,EAAQ,yCAAG,WACf5a,EACAvE,EACAmd,EACAE,EACAE,EACAZ,EACAG,EACAN,GARe,gCAAAmB,EAAA,sDAUXV,EAAiB,GACjBqC,EAAiB,GACjBC,EAAmB,GACnBC,EAAc,CAChBC,QAAS,EACTC,QAAS,EACTC,UAAW,EACXC,iBAAkB,GAEhBC,EAAc,EACdC,EAAe9f,EAAKiC,OApBT,SAsBb6a,EAAY,CAAEiD,KAAMF,EAAaxa,MAAOya,IAtB3B,eAuBO9f,GAvBP,cAAA2d,EAAA,2CAAAA,EAAA,6DAuBFqC,EAvBE,QAwBPC,EAAa,GACbC,EAAgB,GAIH,WAAf3C,QACasB,IAAbmB,EAAM1gB,SACauf,IAAnBmB,EAAMlkB,WACW,IAAjBuhB,IAEA6C,EAAgBpP,KAGK,WAAfyM,QAAwCsB,IAAbmB,EAAM1gB,WAC9B4gB,EAAc5gB,IAOF,IAAjB+d,QACmBwB,IAAnBmB,EAAMlkB,UACa,KAAnBkkB,EAAMlkB,iBAGDokB,EAAcpkB,UAIzBU,OAAOC,OAAOwjB,EAAYD,GAC1BxjB,OAAOC,OAAOwjB,EAAYC,GA2BxBjkB,QAAQC,IACN,sCAAwCI,KAAKC,UAAU0jB,IAEvDE,EAAU,EACRC,EAAe,SAAfA,EAAeC,GACnB,OAAO9b,EAAamB,OAAO,QAAS,CAAEpG,GAAI+gB,EAAW/gB,KAAM9B,KAApD,yCACL,WAAM8iB,GAAN,kBAAA3C,EAAA,yDACe1hB,QAAQC,IAAI,mBAEN,WAAfqhB,GAA4C,SAAjBJ,EAHjC,gBAIIF,EAAe+B,KAAKqB,GAJxB,0BAK8B,SAAjBlD,EALb,sBAMU,IAAIoD,MACR1Z,EAAU,8BAA+B,CACvCvH,GAAI+gB,EAAW/gB,MARvB,UAYU4gB,EAAgBpP,KAChB0P,EAAgBhkB,OAAOC,OAAO,GAAI4jB,EAAY,CAClD/gB,GAAI4gB,EAAc5gB,SAEpB6gB,EACc,KAjBlB,iBAkBMlkB,QAAQwkB,KAAK,iDACbxD,EAAe+B,KAAKqB,GAnB1B,yCAqBYD,EAAaI,GArBzB,4CADK,+FA0BL,WAAME,GAAN,UAAA/C,EAAA,yDAEI1hB,QAAQC,IACN,uBACEmkB,EAAW/gB,GACX,KACA+gB,EAAWjO,YACX,MAGDuK,EAVP,gCAWUpY,EAAarE,OAAO,QAAS,CAAEF,KAAMqgB,IAX/C,OAaEd,EAAiBP,KAAKqB,GAbxB,2CA1BK,wDAvFE,UAmILD,EAAaH,GAnIR,QAoIXJ,IACA/C,EAAY,CAAEiD,KAAMF,EAAaxa,MAAOrF,EAAKiC,SArIlC,gRAwIb6a,EAAY,MAxIC,kDA0IbN,EACE3V,EAAU,8BAA+B,CACvCmZ,MAAOH,EAAc,EACrB1G,QAAS,KAAEA,WAGf2D,EAAY,MAhJC,iCAkJR,CACLG,iBACAqC,iBACAC,mBACAoB,iBAAkBb,EAClBN,cACAoB,UAAWjE,IAxJE,uEAAH,oEAwKRkE,EAAqB,yCAAG,WAAM1F,GAAN,gBAAAwC,EAAA,yDACX,OAAbd,EADwB,iDAKtBzY,EAAQ+W,EAAEvI,OAAOxO,MACvBgZ,EAAgBhZ,GANY,2CAAH,sDAiBrB0c,EAAmB,yCAAG,WAAM3F,GAAN,gBAAAwC,EAAA,yDACT,OAAbd,EADsB,iDAKpBzY,EAAQ+W,EAAEvI,OAAOxO,MACvBoZ,EAAcpZ,GANY,2CAAH,sDAkBnB2c,EAAatE,IAChBM,GAAiB,CAChB,gBAAC,KAAD,WACE,eAACiE,GAAA,EAAD,CACElW,MAAOjE,EAAU,2CAEnB,gBAACoa,GAAA,EAAD,WACE,+BACGpa,EACC,6CACA4V,EAAMxc,SAGV,+BACG4G,EACC,6CACA4V,EAAM/c,YAGV,+BACGmH,EACC,6CACA4V,EAAM9c,eAKd,gBAAC,KAAD,WACE,eAACqhB,GAAA,EAAD,CAAYlW,MAAOjE,EAAU,mCAC7B,gBAACoa,GAAA,EAAD,WACE,+BACGxE,EAAMnd,KAAOmd,EAAMxc,MAChB4G,EAAU,0CACVA,EAAU,2CAA4C4V,EAAMnd,MAEjEmd,EAAMnd,GAAK,EACV,+BACE,gBAAC4hB,GAAA,EAAD,CACEhG,SAAU4F,EACV1c,MAAOmZ,EACP4D,SAAuB,OAAbtE,GAAmBuE,WAH/B,UAKE,eAAChF,GAAD,CACEhY,MAAM,SACNiY,KAAK,uCAEP,eAACD,GAAD,CACEhY,MAAM,SACNiY,KAAK,4CAKX,SAIN,gBAAC,KAAD,WACE,eAAC2E,GAAA,EAAD,CAAYlW,MAAOjE,EAAU,yCAC7B,gBAACoa,GAAA,EAAD,WACE,+BACGxE,EAAM3gB,WAAa2gB,EAAMxc,MACtB4G,EAAU,sDACVA,EACE,uDACA4V,EAAM3gB,YAGb2gB,EAAM3gB,SAAW,EAChB,+BACE,eAACulB,GAAA,EAAD,CACEC,QACE,eAACC,GAAA,EAAD,CACEC,QAASnE,EACT8D,SAAuB,OAAbtE,GAAmBuE,WAC7BlG,SArGW,SAAAC,GACV,OAAb0B,GAIJS,EAAgBnC,EAAEvI,OAAO4O,YAmGbra,MAAON,EAAU,kDAIrB,UAMN4a,EAAgBhF,IAAUM,GAC5B,gBAAC,KAAD,WACE,eAACiE,GAAA,EAAD,CAAYlW,MAAOjE,EAAU,yCAC7B,eAACoa,GAAA,EAAD,UACE,+BACE,gBAACC,GAAA,EAAD,CACEhG,SAAU2F,EACVzc,MAAO+Y,EACPgE,SAAuB,OAAbtE,GAAmBuE,WAH/B,UAKE,eAAChF,GAAD,CACEhY,MAAM,OACNiY,KAAK,2CAEP,eAACD,GAAD,CACEhY,MAAM,OACNiY,KAAK,qDAQbqF,EAAahY,GACf,gBAAC,KAAD,WACE,eAACsX,GAAA,EAAD,CAAYlW,MAAOjE,EAAU,8BAC7B,eAACoa,GAAA,EAAD,WACIlQ,MAAM4Q,QAAQjY,GAASA,EAAQ,CAACA,IAAQtK,KAAI,SAAA+b,GAAC,OAC7C,+BAAMA,YAMVyG,IAAc7E,GAChB,gBAAC,KAAD,WACE,eAACiE,GAAA,EAAD,CAAYlW,MAAOjE,EAAU,sCAC7B,gBAACoa,GAAA,EAAD,WACGpa,EAAU,yCACX,oBAAG6R,KAAK,qBAAR,yBACA,wBACA,wBACA,wBACE5b,KAAK,OACLoe,SAAUwC,EACVyD,SAAuB,OAAbtE,GAAmBuE,mBAMjCS,GAAc9E,GAChB,gBAACkE,GAAA,EAAD,WACE,eAACD,GAAA,EAAD,CAAYlW,MAAOjE,EAAU,uCAC7B,iCACGA,EACC,mCACAkW,EAAc4D,kBAEhB,wBACC9Z,EACC,wCACAkW,EAAcwC,iBAAiBtd,QAEjC,wBACC8a,EAAcE,eAAehb,OAC1B,CACE4E,EACE,qCACAkW,EAAcE,eAAehb,QAE/B,+BACE,yBAAQsF,QAhNS,WAC7B,IAAMua,EAAUC,SAASC,cAAc,KACvC/lB,QAAQC,IAAI+gB,GACZ,IAAMW,EAAO,IAAIqE,KAAK,CAAChF,GAAiB,CACtCngB,KAAM,gCAERglB,EAAQpJ,KAAOwJ,IAAIC,gBAAgBvE,GACnCkE,EAAQM,SAAW,qBACnBL,SAAS1lB,KAAKgmB,YAAYP,GAC1BA,EAAQQ,SAuMI,SACGzb,EAAU,mDAGf,yBAEF,GACHkW,EAAcuC,eAAerd,OAC1B,CACE4E,EACE,qCACAkW,EAAcuC,eAAerd,QAE/B,yBAEF,GACJ,wBACC8a,EAAc6D,WAAa,CAC1B/Z,EAAU,6CACV,+BAMJ0b,IACDtZ,GAA4B,IAAlBA,EAAOhH,QAAgB8a,OAAgB8B,EAChD,gBAACtD,GAAA,EAAD,WACE,eAAC8F,GAAA,EAAD,CACEC,QACE,eAACC,GAAA,EAAD,CACEC,QAAS7E,EACTzB,SA1MgB,SAAAsH,GACT,OAAb3F,GAGJD,EAAU4F,EAAG5P,OAAO4O,UAuMVL,SAAuB,OAAbtE,GAAmBuE,aAGjCja,MAAON,EAAU,kDAEnB,eAAC,KAAD,CACE6U,KAAK,QACLnU,QAAS2X,EACTiC,SAAuB,OAAbtE,GAAmBuE,WAH/B,SAKGva,EAAU,+CAEC,OAAbgW,EACC,iCACGA,EAASkD,KADZ,OACsBlD,EAASxX,MAD/B,WAGE,QAINod,GAAW,GACXb,IAAYa,GAASzD,KAAK4C,IAC1BF,GAAYe,GAASzD,KAAK0C,GAC1BD,GAAegB,GAASzD,KAAKyC,GAC7BV,GAAY0B,GAASzD,KAAT,MAAAyD,GAAQ,aAAS1B,IAC7BwB,IAAiBE,GAASzD,KAAKuD,IAC/BV,IAAaY,GAASzD,KAAK6C,IAE/B,IAAIa,GAAgB,eAAC1H,GAAA,EAAD,UAAOyH,KAE3B,MAAO,CACL,eAACE,GAAA,EAAD,CAAOC,aAAc/b,EAAU,wBAC/B6b,KCxoBE3V,GAAc,CAClBC,KAAM,UACNC,MAAO,UACPC,IAAK,UACLC,KAAM,UACNC,OAAQ,UACRC,OAAQ,WAGJwV,GAAgB,CAACjS,aAAM,4BACvBkS,GAAsB,CAACC,gBACvBC,GAAiB,CAACD,eAAUE,aAAS,KAErCC,GAAa,SAAA3X,GACjB,IAAMhK,EAAI,IAAIiK,KAAKD,GACnB,OAAIE,MAAMlK,GAAW,EACdA,EAAEmK,WAGLyX,GAAgB,SAAA5X,GACpB,QAAUsT,IAANtT,GAAyB,OAANA,EAAvB,CACA,IAAMhK,EAAI,IAAIiK,KAAKD,GAEb6X,EAAM,KACNpW,EAAOzL,EAAE8hB,cAAcjC,WACvBnU,GAASmW,GAAO7hB,EAAE+hB,WAAa,GAAGlC,YAAYmC,OAAO,GACrDrW,GAAOkW,EAAM7hB,EAAEiiB,UAAUpC,YAAYmC,OAAO,GAC5CpW,GAAQiW,EAAM7hB,EAAEkiB,WAAWrC,YAAYmC,OAAO,GAC9CnW,GAAUgW,EAAM7hB,EAAEmiB,aAAatC,YAAYmC,OAAO,GAGxD,MAAM,GAAN,OAAUvW,EAAV,YAAkBC,EAAlB,YAA2BC,EAA3B,YAAkCC,EAAlC,YAA0CC,KAGtCuW,GAA0B,SAAA3c,GAAK,OACnC,eAACoI,EAAA,EAAD,2BAAYpI,GAAZ,aACE,eAAC8E,EAAA,EAAD,CAAc5D,OAAO,QAAQoH,UAAQ,QAI5BsU,GAAwB,SAAA5c,GACnC,OACE,eAAC+I,EAAA,EAAD,2BACM/I,GADN,IAEEwG,QAAS,eAAC,GAAD,IACTwC,oBAAqB,CAAEnL,OAAO,GAC9BC,YAAY,EACZE,QAAS,IALX,SAOE,gBAACmL,EAAA,EAAD,CAAUC,SAAS,OAAnB,UACE,eAACE,EAAA,EAAD,CAAWpI,OAAO,QAAQuK,UAAU,IACpC,eAACQ,GAAA,EAAD,CAAa/K,OAAO,eAAeuK,UAAU,IAC7C,eAACQ,GAAA,EAAD,CAAa/K,OAAO,UAAUuK,UAAU,IACxC,eAACQ,GAAA,EAAD,CAAa/K,OAAO,YAAYuK,UAAU,IAC1C,eAACjC,GAAA,EAAD,CACEtI,OAAO,cACPuI,UAAQ,EACRtU,QAAS4Q,GACT0F,UAAU,WAOPoR,GAA0B,SAAA7c,GAAK,OAC1C,eAAC4K,GAAA,EAAD,2BAAY5K,GAAZ,aACE,gBAACY,GAAA,EAAD,CAAYG,SAAS,OAAOF,QAAS,eAACZ,GAAA,EAAD,CAAS6c,wBAAsB,IAApE,UACE,eAAC7b,GAAA,EAAD,CACEC,OAAO,QACP2J,aAAa,MACbtJ,SAAUsa,GACVva,YAAU,IAEZ,eAACqD,GAAA,EAAD,CACEzD,OAAO,SACPK,SAAUya,GACVtQ,WAAW,8CACX7G,KAAM,IAER,eAACF,GAAA,EAAD,CACEzD,OAAO,eACPK,SAAUua,GACVjX,KAAM,IAER,eAACT,GAAA,EAAD,CAAelD,OAAO,cAAcoD,MAAO4X,YAKpCa,GAAwB,SAAA/c,GACnC,OACE,eAACsL,GAAA,EAAD,2BAAUtL,GAAV,aACE,gBAACY,GAAA,EAAD,WACE,eAACK,GAAA,EAAD,CAAWC,OAAO,QAAQd,UAAQ,IAClC,eAACuE,GAAA,EAAD,CAAazD,OAAO,UAAUd,UAAQ,IACtC,eAACuE,GAAA,EAAD,CAAazD,OAAO,YAAYd,UAAQ,IACxC,eAACuE,GAAA,EAAD,CACEzD,OAAO,eACPK,SAAUua,GACVjX,KAAM,IAER,eAACT,GAAA,EAAD,CACElD,OAAO,cACPoD,MAAO4X,GACPc,OAAQb,Y,6BCmRHc,GA/YP,2BACHC,MADG,IAENC,aAAc,CACZnL,KAAM,CACJpd,SAAU,iBACVwoB,QAAS,+BACTC,eAAgB,kBAChBC,eAAgB,6DAChBC,eAAgB,sDAChBC,UAAW,qCACXC,YAAa,qBAEfvlB,MAAO,CACLwlB,gBAAiB,yDACjBC,KAAM,CAAEC,IAAK,QAEfrkB,MAAO,CACLskB,QAAS,cACTF,KAAM,CACJG,MAAO,YACPlkB,QAAS,aACTmkB,OAAQ,UACRC,WAAY,mBAGhB5jB,QAAS,CAAEujB,KAAM,CAAEG,MAAO,YAAaC,OAAQ,aAEjDE,aAAc,CACZvb,MAAO,CACLwb,SAAU,mCACVxb,MAAO,SACPyb,eAAgB,+BAChBC,cACE,uGACFC,iBAAkB,6DAClBC,oBAAqB,iCACrBC,SAAU,8BAEZza,MAAO,+BACP0a,QAAS,eACTC,MAAO,CACLC,YAAa,CACX1H,OAAQ,uBACR2H,YACE,yFACFC,YAAa,mDACbC,YACE,kFAEJC,UAAW,CACT9H,OAAQ,oBACR+H,KAAM,CACJC,KAAM,qBACNC,KAAM,4DAGVpgB,IAAK,CACHmY,OAAQ,MACRkI,gBAAiB,iCACjBC,kBACE,wEACFJ,KAAM,CACJK,OAAQ,gDACRlgB,OAAQ,uCAGZmgB,UAAW,CACTrI,OAAQ,gBACRsI,sBAAuB,2CACvBC,wBACE,yFACFC,cAAe,4CAEjBC,OAAQ,CACNzI,OAAQ,wBACR0I,YACE,8QAEJC,YAAa,CACXC,cAAe,iBACfC,WAAY,eAEdzH,QAAS,CACPpB,OAAQ,WACR/d,MACE,6EACF6mB,WAAY,oDACZC,QAAS,6CACTC,iBAAkB,6CAClBC,WACE,gFACFC,eAAgB,sCAItBnT,UAAW,CACT7U,MAAO,CACLK,KAAM,WACN4nB,MAAO,SACPC,OAAQ,UACRC,SAAU,mBACV9I,OAAQ,CACNnH,OAAQ,SACR9X,GAAI,cACJC,KAAM,OACNG,SAAU,OACVC,MAAO,uBACPE,YAAa,cACb8E,OAAQ,iBACR2iB,iBAAkB,8BAClB3pB,QAAS,iBACTyU,YAAa,cACbtW,SAAU,WACV2D,WAAY,aACZD,WAAY,SACZ+nB,OAAQ,SACRC,UAAW,QACXC,QAAS,UACT3nB,eAAgB,2BAChB4nB,gBAAiB,sCACjBC,cAAe,YAEjBC,OAAQ,CACNC,WACE,yEACFvnB,MAAO,gDAETwnB,OAAQ,CACNxnB,MAAO,4BAGXC,MAAO,CACLhB,KAAM,qBACNgf,OAAQ,CACN9d,QAAS,UACTlB,KAAM,OACNoB,gBAAiB,QACjBE,eAAgB,aAChBmV,qBAAsB,oBACtB+R,qBAAsB,sBACtB7R,aAAc,sCACdE,QAAS,UACTtV,aAAc,mBACdC,WAAY,kCACZC,YAAa,yBACbC,OAAQ,8BACR+mB,QAAS,YACTC,WAAY,kBACZpkB,aAAc,cACdqkB,mBAAoB,wBACpB9T,MAAO,QACPgD,OAAQ,UAEVwQ,OAAQ,CACNpkB,oBACE,yhBAEJ2kB,MAAO,CACLF,WAAY,CACVhnB,OAAQ,gBACRmnB,MAAO,cACPC,OAAQ,oBACRC,QAAS,UAEXzkB,aAAc,CACZ0kB,SAAU,+BACVC,UAAW,sCAEbN,mBAAoB,CAClBO,QAAS,eACTC,OAAQ,cACRC,OAAQ,4BACRC,eAAgB,SAElBC,YAAa,0BAEff,OAAQ,CACNxnB,MAAO,CACLwK,MAAO,kBACP1H,QACE,2MAIRhC,QAAS,CACP7B,KAAM,wCACNgf,OAAQ,CACNjf,GAAI,KACJwpB,YAAa,YACbnrB,QAAS,YACT4B,KAAM,WACNwpB,MAAO,OACPC,OAAQ,QACRjnB,SAAU,WACVknB,WAAY,CACVC,OAAQ,kBACRC,iBAAkB,YAClBrsB,KAAM,WACNsG,QAAS,CACPC,QAAS,aACThH,KAAM,oBACN2nB,OAAQ,oBACRoF,eAAgB,iCAChBC,UAAW,qCAKnB5nB,YAAa,CACXlC,KAAM,eACNgf,OAAQ,CACN+K,UAAW,QACXC,GAAI,aACJC,WAAY,eAGhBloB,QAAS,CACP/B,KAAM,0BACNgf,OAAQ,CACN7hB,UAAW,eACXsO,aAAc,gBACdye,aAAc,cACdC,aAAc,cAEhB5B,OAAQ,CACNxnB,MAAO,CACLwK,MAAO,iBACP1H,QAAS,4DACTumB,QAAS,iCACTC,QAAS,gDAIfrnB,YAAa,CACXhD,KAAM,SACNgf,OAAQ,CACN9b,SAAU,YACVonB,aAAc,cACdC,WAAY,MACZC,YAAa,YACb5d,eAAgB,mCAChBG,qBAAsB,2BACtB0d,WAAY,WACZC,eAAgB,oBAGpBvnB,aAAc,CACZnD,KAAM,SACNgf,OAAQ,CACN5b,UAAW,sBACXC,QAAS,8BACTC,cAAe,wBAEjBilB,OAAQ,CACNoC,KAAM,oBACNC,aAAc,iCACdC,aAAc,8CAEhBxC,OAAQ,CACNsC,KAAM,iPAGVpnB,cAAe,CACbglB,OAAQ,CACN5nB,OAAQ,mCACRE,OAAQ,gCACRiqB,KAAM,mBACNF,aAAc,6CACdC,aAAc,+CAGlBpnB,iBAAkB,CAChB8kB,OAAQ,CACNvoB,KAAM,gBACNW,OAAQ,kCACRE,OAAQ,2CACRiqB,KAAM,iCACNF,aAAc,oDACdC,aAAc,+CAGlBloB,QAAS,CACP3C,KAAM,sBACNgf,OAAQ,CACN+L,IAAK,MACLC,iBAAkB,kBAClBC,OAAQ,SACRC,oBAAqB,wBACrBC,KAAM,MACNC,KAAM,UACNC,YAAa,aACbxoB,QAAS,UACTpC,KAAM,CAAEvB,IAAK,SAGjByE,cAAe,CACb3D,KAAM,2BACN2qB,KAAM,4BACN3L,OAAQ,CACNliB,KAAM,aAERyrB,OAAQ,CACNoC,KAAM,kBACNC,aAAc,mCACdC,aAAc,8CAEhBxC,OAAQ,CACNsC,KAAM,kJAGV5mB,sBAAuB,CACrB/D,KAAM,sBACNgf,OAAQ,CACNsM,YAAa,qBACbhB,aAAc,4BAGlBrmB,oBAAqB,CACnBjE,KAAM,wBACNgf,OAAQ,CACNjf,GAAI,WACJwpB,YAAa,cACbgC,MAAO,QACPC,YAAa,mBAGjBlpB,WAAY,CACVtC,KAAM,qBACNgf,OAAQ,CACNzhB,KAAM,MACNsG,QAAS,SACT+lB,iBAAkB,YAClB6B,OAAQ,aAGZrnB,eAAgB,CACdpE,KAAM,kBACNgf,OAAQ,CACNqK,eAAgB,6CAChBqC,eAAgB,oCAElBnD,OAAQ,CACNhd,MACE,0FACF1H,QACE,oKACF9C,MAAO,4BACPJ,OAAQ,4BACRiqB,aAAc,gCACdC,aAAc,+CAGlBpmB,oBAAqB,CACnBzE,KAAM,sBACNgf,OAAQ,CACNxhB,MAAO,QACP8H,MAAO,mBACPqmB,aAAc,SACdC,QAAS,aACTC,UAAW,gBACXC,YAAa,aACbppB,OAAQ,YAEV2lB,OAAQ,CAAE3lB,OAAQ,2DAGtBqpB,GAAG,2BACEpH,KAAeoH,IADlB,IAEAxD,OAAO,2BACF5D,KAAeoH,GAAGxD,QADjB,IAEJyD,SAAU,gBAEZvS,KAAK,2BACAkL,KAAeoH,GAAGtS,MADnB,IAEFwS,iBAAkB,6BAEpB9T,MAAM,2BACDwM,KAAeoH,GAAG5T,OADlB,IAEH5b,SAAS,2BACJooB,KAAeoH,GAAG5T,MAAM5b,UADrB,IAEN2vB,cAAe,WACfC,eAAgB,iBAGpBC,aAAa,2BACRzH,KAAeoH,GAAGK,cADX,IAEVC,WAAY,eAEd7mB,KAAK,2BACAmf,KAAeoH,GAAGvmB,MADnB,IAEF8mB,MAAO,8BACPxD,OAAQ,KAEVyD,WAAW,2BACN5H,KAAeoH,GAAGQ,YADb,IAERC,SAAU,4B,UC9BDC,GA7WP,2BACHC,MADG,IAEN9H,aAAc,CACZnL,KAAM,CACJpd,SAAU,iBACVwoB,QAAS,2BACTC,eAAgB,kBAChBC,eAAgB,uDAChBC,eAAgB,gDAChBC,UAAW,gCACXC,YAAa,oBAEfvlB,MAAO,CACLwlB,gBAAiB,oDACjBC,KAAM,CAAEC,IAAK,QAEfrkB,MAAO,CACLokB,KAAM,CACJG,MAAO,QACPlkB,QAAS,UACTmkB,OAAQ,UACRC,WAAY,gBAGhB5jB,QAAS,CAAEujB,KAAM,CAAEG,MAAO,QAASC,OAAQ,aAE7CE,aAAc,CACZvb,MAAO,CACLwb,SAAU,gCACVxb,MAAO,QACPyb,eAAgB,2CAChBC,cACE,+EACFC,iBACE,6DACFC,oBAAqB,uCACrBC,SAAU,4BAEZza,MAAO,uBACP0a,QAAS,YACTC,MAAO,CACLC,YAAa,CACX1H,OAAQ,eACR2H,YACE,wEACFC,YAAa,kDACbC,YAAa,mDAEfC,UAAW,CACT9H,OAAQ,oBACR+H,KAAM,CACJC,KAAM,mBACNC,KAAM,oCAGVpgB,IAAK,CACHmY,OAAQ,MACRkI,gBAAiB,6BACjBC,kBACE,oEACFJ,KAAM,CACJK,OAAQ,wCACRlgB,OAAQ,4BAGZmgB,UAAW,CACTrI,OAAQ,YACRsI,sBAAuB,mCACvBC,wBACE,gFACFC,cAAe,0BAEjBC,OAAQ,CACNzI,OAAQ,iBACR0I,YACE,kNAEJC,YAAa,CACXC,cAAe,gBACfC,WAAY,UAEdzH,QAAS,CACPpB,OAAQ,iBACR/d,MACE,qEACF6mB,WAAY,+CACZC,QAAS,iCACTC,iBAAkB,2BAClBC,WACE,0EACFC,eAAgB,4BAItBnT,UAAW,CACT7U,MAAO,CACLK,KAAM,kBACN4nB,MAAO,QACPC,OAAQ,QACRC,SAAU,gBACV9I,OAAQ,CACNnH,OAAQ,SACR9X,GAAI,UACJC,KAAM,OACNG,SAAU,QACVC,MAAO,uBACPE,YAAa,cACb8E,OAAQ,cACR2iB,iBAAkB,yBAClB3pB,QAAS,cACTyU,YAAa,cACbtW,SAAU,WACV2D,WAAY,aACZD,WAAY,SACZ+nB,OAAQ,SACRC,UAAW,QACXC,QAAS,UACT3nB,eAAgB,qBAChB4nB,gBAAiB,kBACjBC,cAAe,YAEjBC,OAAQ,CACNC,WAAY,yDACZvnB,MAAO,gCAETwnB,OAAQ,CACNxnB,MAAO,oBAGXC,MAAO,CACLhB,KAAM,kBACNgf,OAAQ,CACN9d,QAAS,UACTlB,KAAM,OACNoB,gBAAiB,QACjBE,eAAgB,UAChBmV,qBAAsB,gBACtB+R,qBAAsB,gBACtB7R,aAAc,4BACdE,QAAS,UACTtV,aAAc,YACdC,WAAY,aACZC,YAAa,cACbC,OAAQ,4BACR+mB,QAAS,UACTC,WAAY,aACZpkB,aAAc,eACdqkB,mBAAoB,qBACpB9T,MAAO,QACPgD,OAAQ,UAEVwQ,OAAQ,CACNpkB,oBACE,yhBAEJ2kB,MAAO,CACLF,WAAY,CACVhnB,OAAQ,SACRmnB,MAAO,QACPC,OAAQ,SACRC,QAAS,WAEXzkB,aAAc,CACZ0kB,SAAU,kBACVC,UAAW,uBAEbN,mBAAoB,CAClBO,QAAS,gBACTC,OAAQ,eACRC,OAAQ,eACRC,eAAgB,UAElBC,YAAa,eAEff,OAAQ,CACNxnB,MAAO,CACLwK,MAAO,cACP1H,QACE,iJAIRhC,QAAS,CACP7B,KAAM,sCACNgf,OAAQ,CACNjf,GAAI,KACJwpB,YAAa,cACbnrB,QAAS,YACT4B,KAAM,mBACNwpB,MAAO,QACPC,OAAQ,SACRjnB,SAAU,WACVknB,WAAY,CACVC,OAAQ,gBACRC,iBAAkB,eAClBrsB,KAAM,YACNsG,QAAS,CACPC,QAAS,eACThH,KAAM,UACN2nB,OAAQ,SACRoF,eAAgB,oBAChBC,UAAW,gBAKnB5nB,YAAa,CACXlC,KAAM,cACNgf,OAAQ,CACN+K,UAAW,OACXC,GAAI,aACJC,WAAY,eAGhBloB,QAAS,CACP/B,KAAM,sBACNgf,OAAQ,CACN7hB,UAAW,YACXsO,aAAc,cACdye,aAAc,YACdC,aAAc,cAEhB5B,OAAQ,CACNxnB,MAAO,CACLwK,MAAO,iBACP1H,QAAS,wDACTumB,QAAS,+BACTC,QAAS,4BAIfrnB,YAAa,CACXhD,KAAM,QACNgf,OAAQ,CACN9b,SAAU,WACVonB,aAAc,uBACdC,WAAY,OACZC,YAAa,YACb5d,eAAgB,iBAChBG,qBAAsB,uBACtB0d,WAAY,UACZC,eAAgB,gBAGpBvnB,aAAc,CACZnD,KAAM,QACNgf,OAAQ,CACN5b,UAAW,qBACXC,QAAS,yBACTC,cAAe,uBAEjBilB,OAAQ,CACNoC,KAAM,eACNC,aAAc,6BACdC,aAAc,0BAEhBxC,OAAQ,CACNsC,KAAM,gOAGVpnB,cAAe,CACbglB,OAAQ,CACN5nB,OAAQ,iCACRE,OAAQ,+BACRiqB,KAAM,gBACNF,aAAc,8CACdC,aAAc,2BAGlBpnB,iBAAkB,CAChB8kB,OAAQ,CACNvoB,KAAM,aACNW,OAAQ,oBACRE,OAAQ,8BACRiqB,KAAM,4BACNF,aAAc,8CACdC,aAAc,2BAGlBloB,QAAS,CACP3C,KAAM,sBACNgf,OAAQ,CACN+L,IAAK,MACLC,iBAAkB,mBAClBC,OAAQ,SACRC,oBAAqB,sBACrBC,KAAM,OACNC,KAAM,WACNC,YAAa,cACbxoB,QAAS,UACTpC,KAAM,CAAEvB,IAAK,SAGjByE,cAAe,CACb3D,KAAM,iBACN2qB,KAAM,sBACN3L,OAAQ,CACNliB,KAAM,WAERyrB,OAAQ,CACNoC,KAAM,YACNC,aAAc,mCACdC,aAAc,0BAEhBxC,OAAQ,CACNsC,KAAM,iHAGV5mB,sBAAuB,CACrB/D,KAAM,eACNgf,OAAQ,CACNsM,YAAa,cACbhB,aAAc,iBAGlBrmB,oBAAqB,CACnBjE,KAAM,sBACNgf,OAAQ,CACNjf,GAAI,WACJwpB,YAAa,YACbgC,MAAO,QACPC,YAAa,gBAGjBlpB,WAAY,CACVtC,KAAM,eACNgf,OAAQ,CACNzhB,KAAM,OACNsG,QAAS,UACT+lB,iBAAkB,eAClB6B,OAAQ,WAGZrnB,eAAgB,CACdpE,KAAM,iBACNgf,OAAQ,CACNqK,eAAgB,uCAChBqC,eAAgB,wBAElBnD,OAAQ,CACNhd,MACE,6EACF1H,QACE,2IACF9C,MAAO,6BACPJ,OAAQ,4BACRiqB,aAAc,+BACdC,aAAc,4BAIpBpmB,oBAAqB,CACnBzE,KAAM,sBACNgf,OAAQ,CACNxhB,MAAO,QACP8H,MAAO,cACPqmB,aAAc,eACdC,QAAS,UACTC,UAAW,YACXC,YAAa,cACbppB,OAAQ,UAEV2lB,OAAQ,CAAE3lB,OAAQ,gD,qBC/UhBiqB,GAAW,CACfjI,GAAIC,GACJ8H,GAAIC,GACJE,GC9BM,2BACHC,MADG,IAENjI,aAAc,CACZnL,KAAM,CACJpd,SAAU,yBACVwoB,QAAS,yCACTC,eAAgB,uBAChBC,eAAgB,kFAChBC,eAAgB,0EAChBC,UAAW,mFACXC,YAAa,iCAEfvlB,MAAO,CACLwlB,gBACE,uHACFC,KAAM,CAAEC,IAAK,QAEfrkB,MAAO,CACLokB,KAAM,CACJG,MAAO,eACPlkB,QAAS,eACTmkB,OAAQ,eACRC,WAAY,gBAEd5kB,OAAQ,CACN0K,MAAO,2BACPqO,QACE,qSAGN/X,QAAS,CAAEujB,KAAM,CAAEG,MAAO,eAAMC,OAAQ,kBAE1CE,aAAc,CACZvb,MAAO,CACLwb,SAAU,0CACVxb,MAAO,eACPyb,eAAgB,qEAChBC,cACE,2HACFC,iBAAkB,0EAClBC,oBAAqB,2EACrBC,SAAU,qCAEZza,MAAO,4CACP0a,QAAS,mBACTC,MAAO,CACLC,YAAa,CACX1H,OAAQ,2BACR2H,YACE,yHACFC,YAAa,+DACbC,YAAa,4EAEfC,UAAW,CACT9H,OAAQ,uCACR+H,KAAM,CACJC,KAAM,uCACNC,KAAM,2DAGVpgB,IAAK,CACHmY,OAAQ,MACRkI,gBAAiB,oCACjBC,kBACE,2GACFJ,KAAM,CACJK,OAAQ,kEACRlgB,OAAQ,2DAGZmgB,UAAW,CACTrI,OAAQ,eACRsI,sBAAuB,6CACvBC,wBACE,2HACFC,cAAe,yDAEjBC,OAAQ,CACNzI,OAAQ,gCACR0I,YACE,2XAEJC,YAAa,CACXC,cAAe,2BACfC,WAAY,gBAEdzH,QAAS,CACPpB,OAAQ,2BACR/d,MAAO,qGACP6mB,WAAY,4DACZC,QAAS,iDACTC,iBAAkB,6CAClBC,WACE,0HACFC,eAAgB,sDAItBnT,UAAW,CACT7U,MAAO,CACLK,KAAM,eACN4nB,MAAO,eACPC,OAAQ,eACRC,SAAU,8BACV9I,OAAQ,CACNnH,OAAQ,eACR9X,GAAI,kBACJC,KAAM,qBACNG,SAAU,eACVC,MAAO,uCACPE,YAAa,qBACb8E,OAAQ,2BACR2iB,iBAAkB,mDAClB3pB,QAAS,2BACTyU,YAAa,2BACbtW,SAAU,eACV2D,WAAY,mBACZD,WAAY,eACZ+nB,OAAQ,SACRC,UAAW,QACXC,QAAS,eACT3nB,eAAgB,iCAChB4nB,gBAAiB,4BAEnBE,OAAQ,CACNC,WAAY,6FACZvnB,MAAO,8FAETwnB,OAAQ,CACNxnB,MAAO,yCAGXC,MAAO,CACLhB,KAAM,eACNgf,OAAQ,CACN9d,QAAS,kBACTlB,KAAM,qBACNoB,gBAAiB,eACjBE,eAAgB,eAChBmV,qBAAsB,2BACtBE,aAAc,2BACdE,QAAS,eACTtV,aAAc,2BACdC,WAAY,eACZC,YAAa,2BACbC,OAAQ,eACR+mB,QAAS,qBACTC,WAAY,2BACZpkB,aAAc,2BACdqkB,mBAAoB,kCAEtBC,MAAO,CACLF,WAAY,CACVhnB,OAAQ,eACRmnB,MAAO,eACPC,OAAQ,eACRC,QAAS,gBAEXzkB,aAAc,CACZ0kB,SAAU,uCACVC,UAAW,wCAEbN,mBAAoB,CAClBO,QAAS,iCACTC,OAAQ,2BACRC,OAAQ,2BACRC,eAAgB,sBAElBC,YAAa,uBAGjBznB,QAAS,CACP7B,KAAM,2BACNgf,OAAQ,CACNjf,GAAI,KACJwpB,YAAa,2BACbnrB,QAAS,qBACT4B,KAAM,qBACNwpB,MAAO,eACPC,OAAQ,eACRjnB,SAAU,kBACVknB,WAAY,CACVC,OAAQ,iCACRC,iBAAkB,2BAClBrsB,KAAM,2BACNsG,QAAS,CACPC,QAAS,2BACThH,KAAM,eACN2nB,OAAQ,eACRoF,eAAgB,uCAChBC,UAAW,mBAKnB5nB,YAAa,CACXlC,KAAM,eACNgf,OAAQ,CACN+K,UAAW,eACXC,GAAI,kBACJC,WAAY,kCAGhBloB,QAAS,CACP/B,KAAM,eACNgf,OAAQ,CACN7hB,UAAW,kBACXsO,aAAc,qBACdye,aAAc,qBACdC,aAAc,mBAEhB5B,OAAQ,CACNxnB,MAAO,CACLwK,MAAO,qBACP1H,QAAS,8DACTumB,QAAS,6CACTC,QAAS,sDAIfrnB,YAAa,CACXhD,KAAM,2BACNgf,OAAQ,CACN9b,SAAU,8BACVonB,aAAc,eACdC,WAAY,eACZC,YAAa,qBACb5d,eAAgB,qBAChBG,qBAAsB,2BACtB0d,WAAY,eACZC,eAAgB,mCAGpBvnB,aAAc,CACZnD,KAAM,2BACNgf,OAAQ,CACN5b,UAAW,uCACXC,QAAS,8BACTC,cAAe,4BAEjBilB,OAAQ,CACNoC,KAAM,2BACNC,aAAc,6CACdC,aAAc,oDAEhBxC,OAAQ,CACNsC,KAAM,iWAGVhoB,QAAS,CACP3C,KAAM,qBACNgf,OAAQ,CACN+L,IAAK,MACLC,iBAAkB,mBAClBC,OAAQ,SACRC,oBAAqB,iCACrBC,KAAM,eACNC,KAAM,eACNC,YAAa,2BACbxoB,QAAS,UACTpC,KAAM,CAAEvB,IAAK,SAGjByE,cAAe,CACb3D,KAAM,iCACN2qB,KAAM,6CACN3L,OAAQ,CACNliB,KAAM,gBAERyrB,OAAQ,CACNoC,KAAM,2BACNC,aAAc,+DACdC,aAAc,oDAEhBxC,OAAQ,CACNsC,KAAM,uPAGV5mB,sBAAuB,CACrB/D,KAAM,6CACNgf,OAAQ,CACNsM,YAAa,uCACbhB,aAAc,6CD1PhBwC,GAAeC,aACnB,SAAApU,GAAM,OAAKgU,GAAShU,GAAUgU,GAAShU,GAAUgU,GAASF,KAC1DO,eAyDaC,GAtDH,kBACV,gBAACC,EAAA,EAAD,CACEC,kBAAgB,EAChBC,UAAW9U,GACXnc,aAAcA,EACd6I,aAAcA,EACd8nB,aAAcA,GACdO,aAAc,CACZ,eAAC,KAAD,CAAwBztB,KAAK,gBAAgBsP,UAAW6N,IAA7C,eAPf,UAUE,eAACuQ,EAAA,EAAD,CACEttB,KAAK,QACLyU,KAAMlE,GACN5P,OAAQyR,GACRmb,KAAMza,GACNlH,KAAM4hB,OAER,eAACF,EAAA,EAAD,CAAUttB,KAAK,QAAQyU,KAAM6B,GAAUmX,KAAM5X,GAAUjK,KAAM8hB,MAC7D,eAACJ,EAAA,EAAD,CACEttB,KAAK,wBACLyU,KAAMiI,GACN9Q,KAAM+hB,OAER,eAACL,EAAA,EAAD,CACEttB,KAAK,UACLyU,KAAMwC,GACNwW,KAAMzW,GACNpL,KAAMgiB,OAER,eAACN,EAAA,EAAD,CACEttB,KAAK,iBACLyU,KAAMJ,GACNzI,KAAMiiB,OAER,eAACP,EAAA,EAAD,CACEttB,KAAK,sBACLyU,KAAM4P,GACN1jB,OAAQ2jB,GACRiJ,KAAM/I,GACN5Y,KAAMkiB,OAER,eAACR,EAAA,EAAD,CAAUttB,KAAK,gBACf,eAACstB,EAAA,EAAD,CAAUttB,KAAK,YACf,eAACstB,EAAA,EAAD,CAAUttB,KAAK,iBACf,eAACstB,EAAA,EAAD,CAAUttB,KAAK,gBACf,eAACstB,EAAA,EAAD,CAAUttB,KAAK,iBACf,eAACstB,EAAA,EAAD,CAAUttB,KAAK,YACf,eAACstB,EAAA,EAAD,CAAUttB,KAAK,kBACf,eAACstB,EAAA,EAAD,CAAUttB,KAAK,wBACf,eAACstB,EAAA,EAAD,CAAUttB,KAAK,mBErFnB+tB,IAASzS,OAAO,eAAC,GAAD,IAASkH,SAASwL,eAAe,W","file":"static/js/main.3a7da7f8.chunk.js","sourcesContent":["import { fetchUtils } from \"react-admin\";\n\nconst authProvider = {\n  // called when the user attempts to log in\n  login: ({ base_url, username, password, loginToken }) => {\n    // force homeserver for protection in case the form is manipulated\n    base_url = process.env.REACT_APP_SERVER || base_url;\n\n    console.log(\"login \");\n    const options = {\n      method: \"POST\",\n      body: JSON.stringify(\n        Object.assign(\n          {\n            device_id: localStorage.getItem(\"device_id\"),\n            initial_device_display_name: \"Synapse Admin\",\n          },\n          loginToken\n            ? {\n                type: \"m.login.token\",\n                token: loginToken,\n              }\n            : {\n                type: \"m.login.password\",\n                user: username,\n                password: password,\n              }\n        )\n      ),\n    };\n\n    // use the base_url from login instead of the well_known entry from the\n    // server, since the admin might want to access the admin API via some\n    // private address\n    base_url = base_url.replace(/\\/+$/g, \"\");\n    localStorage.setItem(\"base_url\", base_url);\n\n    const decoded_base_url = window.decodeURIComponent(base_url);\n    const login_api_url = decoded_base_url + \"/_matrix/client/r0/login\";\n\n    return fetchUtils.fetchJson(login_api_url, options).then(({ json }) => {\n      localStorage.setItem(\"home_server\", json.home_server);\n      localStorage.setItem(\"user_id\", json.user_id);\n      localStorage.setItem(\"access_token\", json.access_token);\n      localStorage.setItem(\"device_id\", json.device_id);\n    });\n  },\n  // called when the user clicks on the logout button\n  logout: () => {\n    console.log(\"logout\");\n\n    const logout_api_url =\n      localStorage.getItem(\"base_url\") + \"/_matrix/client/r0/logout\";\n    const access_token = localStorage.getItem(\"access_token\");\n\n    const options = {\n      method: \"POST\",\n      user: {\n        authenticated: true,\n        token: `Bearer ${access_token}`,\n      },\n    };\n\n    if (typeof access_token === \"string\") {\n      fetchUtils.fetchJson(logout_api_url, options).then(({ json }) => {\n        localStorage.removeItem(\"access_token\");\n      });\n    }\n    return Promise.resolve();\n  },\n  // called when the API returns an error\n  checkError: ({ status }) => {\n    console.log(\"checkError \" + status);\n    if (status === 401 || status === 403) {\n      return Promise.reject();\n    }\n    return Promise.resolve();\n  },\n  // called when the user navigates to a new location, to check for authentication\n  checkAuth: () => {\n    const access_token = localStorage.getItem(\"access_token\");\n    console.log(\"checkAuth \" + access_token);\n    return typeof access_token === \"string\"\n      ? Promise.resolve()\n      : Promise.reject();\n  },\n  // called when the user navigates to a new location, to check for permissions / roles\n  getPermissions: () => Promise.resolve(),\n};\n\nexport default authProvider;\n","import { fetchUtils } from \"react-admin\";\nimport { stringify } from \"query-string\";\n\n// Adds the access token to all requests\nconst jsonClient = (url, options = {}) => {\n  const token = localStorage.getItem(\"access_token\");\n  console.log(\"httpClient \" + url);\n  if (token != null) {\n    options.user = {\n      authenticated: true,\n      token: `Bearer ${token}`,\n    };\n  }\n  return fetchUtils.fetchJson(url, options);\n};\n\nconst mxcUrlToHttp = mxcUrl => {\n  const homeserver = localStorage.getItem(\"base_url\");\n  const re = /^mxc:\\/\\/([^/]+)\\/(\\w+)/;\n  var ret = re.exec(mxcUrl);\n  console.log(\"mxcClient \" + ret);\n  if (ret == null) return null;\n  const serverName = ret[1];\n  const mediaId = ret[2];\n  return `${homeserver}/_matrix/media/r0/thumbnail/${serverName}/${mediaId}?width=24&height=24&method=scale`;\n};\n\nconst resourceMap = {\n  users: {\n    path: \"/_synapse/admin/v2/users\",\n    map: u => ({\n      ...u,\n      id: u.name,\n      avatar_src: mxcUrlToHttp(u.avatar_url),\n      is_guest: !!u.is_guest,\n      admin: !!u.admin,\n      vip : !!u.vip,\n      deactivated: !!u.deactivated,\n      // need timestamp in milliseconds\n      creation_ts_ms: u.creation_ts * 1000,\n    }),\n    data: \"users\",\n    total: json => json.total,\n    create: data => ({\n      endpoint: `/_synapse/admin/v2/users/@${data.id}:${localStorage.getItem(\n        \"home_server\"\n      )}`,\n      body: data,\n      method: \"PUT\",\n    }),\n    delete: params => ({\n      endpoint: `/_synapse/admin/v1/deactivate/${params.id}`,\n      body: { erase: true },\n      method: \"POST\",\n    }),\n  },\n  rooms: {\n    path: \"/_synapse/admin/v1/rooms\",\n    map: r => ({\n      ...r,\n      id: r.room_id,\n      alias: r.canonical_alias,\n      members: r.joined_members,\n      is_encrypted: !!r.encryption,\n      federatable: !!r.federatable,\n      public: !!r.public,\n    }),\n    data: \"rooms\",\n    total: json => {\n      return json.total_rooms;\n    },\n    delete: params => ({\n      endpoint: `/_synapse/admin/v1/rooms/${params.id}`,\n      body: { block: false },\n    }),\n  },\n  reports: {\n    path: \"/_synapse/admin/v1/event_reports\",\n    map: er => ({\n      ...er,\n      id: er.id,\n    }),\n    data: \"event_reports\",\n    total: json => json.total,\n  },\n  devices: {\n    map: d => ({\n      ...d,\n      id: d.device_id,\n    }),\n    data: \"devices\",\n    total: json => {\n      return json.total;\n    },\n    reference: id => ({\n      endpoint: `/_synapse/admin/v2/users/${id}/devices`,\n    }),\n    delete: params => ({\n      endpoint: `/_synapse/admin/v2/users/${params.user_id}/devices/${params.id}`,\n    }),\n  },\n  connections: {\n    path: \"/_synapse/admin/v1/whois\",\n    map: c => ({\n      ...c,\n      id: c.user_id,\n    }),\n    data: \"connections\",\n  },\n  room_members: {\n    map: m => ({\n      id: m,\n    }),\n    reference: id => ({\n      endpoint: `/_synapse/admin/v1/rooms/${id}/members`,\n    }),\n    data: \"members\",\n    total: json => {\n      return json.total;\n    },\n  },\n  room_state: {\n    map: rs => ({\n      ...rs,\n      id: rs.event_id,\n    }),\n    reference: id => ({\n      endpoint: `/_synapse/admin/v1/rooms/${id}/state`,\n    }),\n    data: \"state\",\n    total: json => {\n      return json.state.length;\n    },\n  },\n  pushers: {\n    map: p => ({\n      ...p,\n      id: p.pushkey,\n    }),\n    reference: id => ({\n      endpoint: `/_synapse/admin/v1/users/${id}/pushers`,\n    }),\n    data: \"pushers\",\n    total: json => {\n      return json.total;\n    },\n  },\n  joined_rooms: {\n    map: jr => ({\n      id: jr,\n    }),\n    reference: id => ({\n      endpoint: `/_synapse/admin/v1/users/${id}/joined_rooms`,\n    }),\n    data: \"joined_rooms\",\n    total: json => {\n      return json.total;\n    },\n  },\n  users_media: {\n    map: um => ({\n      ...um,\n      id: um.media_id,\n    }),\n    reference: id => ({\n      endpoint: `/_synapse/admin/v1/users/${id}/media`,\n    }),\n    data: \"media\",\n    total: json => {\n      return json.total;\n    },\n    delete: params => ({\n      endpoint: `/_synapse/admin/v1/media/${localStorage.getItem(\n        \"home_server\"\n      )}/${params.id}`,\n    }),\n  },\n  delete_media: {\n    delete: params => ({\n      endpoint: `/_synapse/admin/v1/media/${localStorage.getItem(\n        \"home_server\"\n      )}/delete?before_ts=${params.before_ts}&size_gt=${\n        params.size_gt\n      }&keep_profiles=${params.keep_profiles}`,\n      method: \"POST\",\n    }),\n  },\n  protect_media: {\n    map: pm => ({ id: pm.media_id }),\n    create: params => ({\n      endpoint: `/_synapse/admin/v1/media/protect/${params.media_id}`,\n      method: \"POST\",\n    }),\n    delete: params => ({\n      endpoint: `/_synapse/admin/v1/media/unprotect/${params.media_id}`,\n      method: \"POST\",\n    }),\n  },\n  quarantine_media: {\n    map: qm => ({ id: qm.media_id }),\n    create: params => ({\n      endpoint: `/_synapse/admin/v1/media/quarantine/${localStorage.getItem(\n        \"home_server\"\n      )}/${params.media_id}`,\n      method: \"POST\",\n    }),\n    delete: params => ({\n      endpoint: `/_synapse/admin/v1/media/unquarantine/${localStorage.getItem(\n        \"home_server\"\n      )}/${params.media_id}`,\n      method: \"POST\",\n    }),\n  },\n  servernotices: {\n    map: n => ({ id: n.event_id }),\n    create: data => ({\n      endpoint: \"/_synapse/admin/v1/send_server_notice\",\n      body: {\n        user_id: data.id,\n        content: {\n          msgtype: \"m.text\",\n          body: data.body,\n        },\n      },\n      method: \"POST\",\n    }),\n  },\n  user_media_statistics: {\n    path: \"/_synapse/admin/v1/statistics/users/media\",\n    map: usms => ({\n      ...usms,\n      id: usms.user_id,\n    }),\n    data: \"users\",\n    total: json => {\n      return json.total;\n    },\n  },\n  forward_extremities: {\n    map: fe => ({\n      ...fe,\n      id: fe.event_id,\n    }),\n    reference: id => ({\n      endpoint: `/_synapse/admin/v1/rooms/${id}/forward_extremities`,\n    }),\n    data: \"results\",\n    total: json => {\n      return json.count;\n    },\n    delete: params => ({\n      endpoint: `/_synapse/admin/v1/rooms/${params.id}/forward_extremities`,\n    }),\n  },\n  room_directory: {\n    path: \"/_matrix/client/r0/publicRooms\",\n    map: rd => ({\n      ...rd,\n      id: rd.room_id,\n      public: !!rd.public,\n      guest_access: !!rd.guest_access,\n      avatar_src: mxcUrlToHttp(rd.avatar_url),\n    }),\n    data: \"chunk\",\n    total: json => {\n      return json.total_room_count_estimate;\n    },\n    create: params => ({\n      endpoint: `/_matrix/client/r0/directory/list/room/${params.id}`,\n      body: { visibility: \"public\" },\n      method: \"PUT\",\n    }),\n    delete: params => ({\n      endpoint: `/_matrix/client/r0/directory/list/room/${params.id}`,\n      body: { visibility: \"private\" },\n      method: \"PUT\",\n    }),\n  },\n  registration_tokens: {\n    path: \"/_synapse/admin/v1/registration_tokens\",\n    map: rt => ({\n      ...rt,\n      id: rt.token,\n    }),\n    data: \"registration_tokens\",\n    total: json => {\n      return json.registration_tokens.length;\n    },\n    create: params => ({\n      endpoint: \"/_synapse/admin/v1/registration_tokens/new\",\n      body: params,\n      method: \"POST\",\n    }),\n    delete: params => ({\n      endpoint: `/_synapse/admin/v1/registration_tokens/${params.id}`,\n    }),\n  },\n};\n\nfunction filterNullValues(key, value) {\n  // Filtering out null properties\n  if (value === null) {\n    return undefined;\n  }\n  return value;\n}\n\nfunction getSearchOrder(order) {\n  if (order === \"DESC\") {\n    return \"b\";\n  } else {\n    return \"f\";\n  }\n}\n\nconst dataProvider = {\n  getList: (resource, params) => {\n    console.log(\"getList \" + resource);\n    const { user_id, name, guests, deactivated, search_term, valid } =\n      params.filter;\n    const { page, perPage } = params.pagination;\n    const { field, order } = params.sort;\n    const from = (page - 1) * perPage;\n    const query = {\n      from: from,\n      limit: perPage,\n      user_id: user_id,\n      search_term: search_term,\n      name: name,\n      guests: guests,\n      deactivated: deactivated,\n      valid: valid,\n      order_by: field,\n      dir: getSearchOrder(order),\n    };\n    const homeserver = localStorage.getItem(\"base_url\");\n    if (!homeserver || !(resource in resourceMap)) return Promise.reject();\n\n    const res = resourceMap[resource];\n\n    const endpoint_url = homeserver + res.path;\n    const url = `${endpoint_url}?${stringify(query)}`;\n\n    return jsonClient(url).then(({ json }) => ({\n      data: json[res.data].map(res.map),\n      total: res.total(json, from, perPage),\n    }));\n  },\n\n  getOne: (resource, params) => {\n    console.log(\"getOne \" + resource);\n    const homeserver = localStorage.getItem(\"base_url\");\n    if (!homeserver || !(resource in resourceMap)) return Promise.reject();\n\n    const res = resourceMap[resource];\n\n    const endpoint_url = homeserver + res.path;\n    return jsonClient(`${endpoint_url}/${params.id}`).then(({ json }) => ({\n      data: res.map(json),\n    }));\n  },\n\n  getMany: (resource, params) => {\n    console.log(\"getMany \" + resource);\n    const homeserver = localStorage.getItem(\"base_url\");\n    if (!homeserver || !(resource in resourceMap)) return Promise.reject();\n\n    const res = resourceMap[resource];\n\n    const endpoint_url = homeserver + res.path;\n    return Promise.all(\n      params.ids.map(id => jsonClient(`${endpoint_url}/${id}`))\n    ).then(responses => ({\n      data: responses.map(({ json }) => res.map(json)),\n      total: responses.length,\n    }));\n  },\n\n  getManyReference: (resource, params) => {\n    console.log(\"getManyReference \" + resource);\n    const { page, perPage } = params.pagination;\n    const { field, order } = params.sort;\n    const from = (page - 1) * perPage;\n    const query = {\n      from: from,\n      limit: perPage,\n      order_by: field,\n      dir: getSearchOrder(order),\n    };\n\n    const homeserver = localStorage.getItem(\"base_url\");\n    if (!homeserver || !(resource in resourceMap)) return Promise.reject();\n\n    const res = resourceMap[resource];\n\n    const ref = res[\"reference\"](params.id);\n    const endpoint_url = `${homeserver}${ref.endpoint}?${stringify(query)}`;\n\n    return jsonClient(endpoint_url).then(({ headers, json }) => ({\n      data: json[res.data].map(res.map),\n      total: res.total(json, from, perPage),\n    }));\n  },\n\n  update: (resource, params) => {\n    console.log(\"update \" + resource);\n    const homeserver = localStorage.getItem(\"base_url\");\n    if (!homeserver || !(resource in resourceMap)) return Promise.reject();\n\n    const res = resourceMap[resource];\n\n    const endpoint_url = homeserver + res.path;\n    return jsonClient(`${endpoint_url}/${params.data.id}`, {\n      method: \"PUT\",\n      body: JSON.stringify(params.data, filterNullValues),\n    }).then(({ json }) => ({\n      data: res.map(json),\n    }));\n  },\n\n  updateMany: (resource, params) => {\n    console.log(\"updateMany \" + resource);\n    const homeserver = localStorage.getItem(\"base_url\");\n    if (!homeserver || !(resource in resourceMap)) return Promise.reject();\n\n    const res = resourceMap[resource];\n\n    const endpoint_url = homeserver + res.path;\n    return Promise.all(\n      params.ids.map(id => jsonClient(`${endpoint_url}/${id}`), {\n        method: \"PUT\",\n        body: JSON.stringify(params.data, filterNullValues),\n      })\n    ).then(responses => ({\n      data: responses.map(({ json }) => json),\n    }));\n  },\n\n  create: (resource, params) => {\n    console.log(\"create \" + resource);\n    const homeserver = localStorage.getItem(\"base_url\");\n    if (!homeserver || !(resource in resourceMap)) return Promise.reject();\n\n    const res = resourceMap[resource];\n    if (!(\"create\" in res)) return Promise.reject();\n\n    const create = res[\"create\"](params.data);\n    const endpoint_url = homeserver + create.endpoint;\n    return jsonClient(endpoint_url, {\n      method: create.method,\n      body: JSON.stringify(create.body, filterNullValues),\n    }).then(({ json }) => ({\n      data: res.map(json),\n    }));\n  },\n\n  createMany: (resource, params) => {\n    console.log(\"createMany \" + resource);\n    const homeserver = localStorage.getItem(\"base_url\");\n    if (!homeserver || !(resource in resourceMap)) return Promise.reject();\n\n    const res = resourceMap[resource];\n    if (!(\"create\" in res)) return Promise.reject();\n\n    return Promise.all(\n      params.ids.map(id => {\n        params.data.id = id;\n        const cre = res[\"create\"](params.data);\n        const endpoint_url = homeserver + cre.endpoint;\n        return jsonClient(endpoint_url, {\n          method: cre.method,\n          body: JSON.stringify(cre.body, filterNullValues),\n        });\n      })\n    ).then(responses => ({\n      data: responses.map(({ json }) => json),\n    }));\n  },\n\n  delete: (resource, params) => {\n    console.log(\"delete \" + resource);\n    const homeserver = localStorage.getItem(\"base_url\");\n    if (!homeserver || !(resource in resourceMap)) return Promise.reject();\n\n    const res = resourceMap[resource];\n\n    if (\"delete\" in res) {\n      const del = res[\"delete\"](params);\n      const endpoint_url = homeserver + del.endpoint;\n      return jsonClient(endpoint_url, {\n        method: \"method\" in del ? del.method : \"DELETE\",\n        body: \"body\" in del ? JSON.stringify(del.body) : null,\n      }).then(({ json }) => ({\n        data: json,\n      }));\n    } else {\n      const endpoint_url = homeserver + res.path;\n      return jsonClient(`${endpoint_url}/${params.id}`, {\n        method: \"DELETE\",\n        body: JSON.stringify(params.data, filterNullValues),\n      }).then(({ json }) => ({\n        data: json,\n      }));\n    }\n  },\n\n  deleteMany: (resource, params) => {\n    console.log(\"deleteMany \" + resource);\n    const homeserver = localStorage.getItem(\"base_url\");\n    if (!homeserver || !(resource in resourceMap)) return Promise.reject();\n\n    const res = resourceMap[resource];\n\n    if (\"delete\" in res) {\n      return Promise.all(\n        params.ids.map(id => {\n          const del = res[\"delete\"]({ ...params, id: id });\n          const endpoint_url = homeserver + del.endpoint;\n          return jsonClient(endpoint_url, {\n            method: \"method\" in del ? del.method : \"DELETE\",\n            body: \"body\" in del ? JSON.stringify(del.body) : null,\n          });\n        })\n      ).then(responses => ({\n        data: responses.map(({ json }) => json),\n      }));\n    } else {\n      const endpoint_url = homeserver + res.path;\n      return Promise.all(\n        params.ids.map(id =>\n          jsonClient(`${endpoint_url}/${id}`, {\n            method: \"DELETE\",\n            body: JSON.stringify(params.data, filterNullValues),\n          })\n        )\n      ).then(responses => ({\n        data: responses.map(({ json }) => json),\n      }));\n    }\n  },\n};\n\nexport default dataProvider;\n","import React, { Fragment, useState } from \"react\";\nimport {\n  Button,\n  SaveButton,\n  SimpleForm,\n  TextInput,\n  Toolbar,\n  required,\n  useCreate,\n  useMutation,\n  useNotify,\n  useTranslate,\n  useUnselectAll,\n} from \"react-admin\";\nimport MessageIcon from \"@material-ui/icons/Message\";\nimport IconCancel from \"@material-ui/icons/Cancel\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\n\nconst ServerNoticeDialog = ({ open, loading, onClose, onSend }) => {\n  const translate = useTranslate();\n\n  const ServerNoticeToolbar = props => (\n    <Toolbar {...props}>\n      <SaveButton\n        label=\"resources.servernotices.action.send\"\n        disabled={props.pristine}\n      />\n      <Button label=\"ra.action.cancel\" onClick={onClose}>\n        <IconCancel />\n      </Button>\n    </Toolbar>\n  );\n\n  return (\n    <Dialog open={open} onClose={onClose} loading={loading}>\n      <DialogTitle>\n        {translate(\"resources.servernotices.action.send\")}\n      </DialogTitle>\n      <DialogContent>\n        <DialogContentText>\n          {translate(\"resources.servernotices.helper.send\")}\n        </DialogContentText>\n        <SimpleForm\n          toolbar={<ServerNoticeToolbar />}\n          submitOnEnter={false}\n          redirect={false}\n          save={onSend}\n        >\n          <TextInput\n            source=\"body\"\n            label=\"resources.servernotices.fields.body\"\n            fullWidth\n            multiline\n            rows=\"4\"\n            resettable\n            validate={required()}\n          />\n        </SimpleForm>\n      </DialogContent>\n    </Dialog>\n  );\n};\n\nexport const ServerNoticeButton = ({ record }) => {\n  const [open, setOpen] = useState(false);\n  const notify = useNotify();\n  const [create, { loading }] = useCreate(\"servernotices\");\n\n  const handleDialogOpen = () => setOpen(true);\n  const handleDialogClose = () => setOpen(false);\n\n  const handleSend = values => {\n    create(\n      { payload: { data: { id: record.id, ...values } } },\n      {\n        onSuccess: () => {\n          notify(\"resources.servernotices.action.send_success\");\n          handleDialogClose();\n        },\n        onFailure: () =>\n          notify(\"resources.servernotices.action.send_failure\", \"error\"),\n      }\n    );\n  };\n\n  return (\n    <Fragment>\n      <Button\n        label=\"resources.servernotices.send\"\n        onClick={handleDialogOpen}\n        disabled={loading}\n      >\n        <MessageIcon />\n      </Button>\n      <ServerNoticeDialog\n        open={open}\n        onClose={handleDialogClose}\n        onSend={handleSend}\n      />\n    </Fragment>\n  );\n};\n\nexport const ServerNoticeBulkButton = ({ selectedIds }) => {\n  const [open, setOpen] = useState(false);\n  const notify = useNotify();\n  const unselectAll = useUnselectAll();\n  const [createMany, { loading }] = useMutation();\n\n  const handleDialogOpen = () => setOpen(true);\n  const handleDialogClose = () => setOpen(false);\n\n  const handleSend = values => {\n    createMany(\n      {\n        type: \"createMany\",\n        resource: \"servernotices\",\n        payload: { ids: selectedIds, data: values },\n      },\n      {\n        onSuccess: ({ data }) => {\n          notify(\"resources.servernotices.action.send_success\");\n          unselectAll(\"users\");\n          handleDialogClose();\n        },\n        onFailure: error =>\n          notify(\"resources.servernotices.action.send_failure\", \"error\"),\n      }\n    );\n  };\n\n  return (\n    <Fragment>\n      <Button\n        label=\"resources.servernotices.send\"\n        onClick={handleDialogOpen}\n        disabled={loading}\n      >\n        <MessageIcon />\n      </Button>\n      <ServerNoticeDialog\n        open={open}\n        onClose={handleDialogClose}\n        onSend={handleSend}\n      />\n    </Fragment>\n  );\n};\n","import React, { Fragment, useState } from \"react\";\nimport {\n  Button,\n  useMutation,\n  useNotify,\n  Confirm,\n  useRefresh,\n} from \"react-admin\";\nimport ActionDelete from \"@material-ui/icons/Delete\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { alpha } from \"@material-ui/core/styles/colorManipulator\";\nimport classnames from \"classnames\";\n\nconst useStyles = makeStyles(\n  theme => ({\n    deleteButton: {\n      color: theme.palette.error.main,\n      \"&:hover\": {\n        backgroundColor: alpha(theme.palette.error.main, 0.12),\n        // Reset on mouse devices\n        \"@media (hover: none)\": {\n          backgroundColor: \"transparent\",\n        },\n      },\n    },\n  }),\n  { name: \"RaDeleteDeviceButton\" }\n);\n\nexport const DeviceRemoveButton = props => {\n  const { record } = props;\n  const classes = useStyles(props);\n  const [open, setOpen] = useState(false);\n  const refresh = useRefresh();\n  const notify = useNotify();\n\n  const [removeDevice, { loading }] = useMutation();\n\n  if (!record) return null;\n\n  const handleClick = () => setOpen(true);\n  const handleDialogClose = () => setOpen(false);\n\n  const handleConfirm = () => {\n    removeDevice(\n      {\n        type: \"delete\",\n        resource: \"devices\",\n        payload: {\n          id: record.id,\n          user_id: record.user_id,\n        },\n      },\n      {\n        onSuccess: () => {\n          notify(\"resources.devices.action.erase.success\");\n          refresh();\n        },\n        onFailure: () =>\n          notify(\"resources.devices.action.erase.failure\", \"error\"),\n      }\n    );\n    setOpen(false);\n  };\n\n  return (\n    <Fragment>\n      <Button\n        label=\"ra.action.remove\"\n        onClick={handleClick}\n        className={classnames(\"ra-delete-button\", classes.deleteButton)}\n      >\n        <ActionDelete />\n      </Button>\n      <Confirm\n        isOpen={open}\n        loading={loading}\n        onConfirm={handleConfirm}\n        onClose={handleDialogClose}\n        title=\"resources.devices.action.erase.title\"\n        content=\"resources.devices.action.erase.content\"\n        translateOptions={{\n          id: record.id,\n          name: record.display_name ? record.display_name : record.id,\n        }}\n      />\n    </Fragment>\n  );\n};\n","import React, { Fragment, useState } from \"react\";\nimport classnames from \"classnames\";\nimport { alpha } from \"@material-ui/core/styles/colorManipulator\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Tooltip } from \"@material-ui/core\";\nimport {\n  BooleanInput,\n  Button,\n  DateTimeInput,\n  NumberInput,\n  SaveButton,\n  SimpleForm,\n  Toolbar,\n  useCreate,\n  useDelete,\n  useNotify,\n  useRefresh,\n  useTranslate,\n} from \"react-admin\";\nimport BlockIcon from \"@material-ui/icons/Block\";\nimport ClearIcon from \"@material-ui/icons/Clear\";\nimport DeleteSweepIcon from \"@material-ui/icons/DeleteSweep\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport IconCancel from \"@material-ui/icons/Cancel\";\nimport LockIcon from \"@material-ui/icons/Lock\";\nimport LockOpenIcon from \"@material-ui/icons/LockOpen\";\n\nconst useStyles = makeStyles(\n  theme => ({\n    deleteButton: {\n      color: theme.palette.error.main,\n      \"&:hover\": {\n        backgroundColor: alpha(theme.palette.error.main, 0.12),\n        // Reset on mouse devices\n        \"@media (hover: none)\": {\n          backgroundColor: \"transparent\",\n        },\n      },\n    },\n  }),\n  { name: \"RaDeleteDeviceButton\" }\n);\n\nconst DeleteMediaDialog = ({ open, loading, onClose, onSend }) => {\n  const translate = useTranslate();\n\n  const dateParser = v => {\n    const d = new Date(v);\n    if (isNaN(d)) return 0;\n    return d.getTime();\n  };\n\n  const DeleteMediaToolbar = props => {\n    return (\n      <Toolbar {...props}>\n        <SaveButton\n          label=\"resources.delete_media.action.send\"\n          icon={<DeleteSweepIcon />}\n        />\n        <Button label=\"ra.action.cancel\" onClick={onClose}>\n          <IconCancel />\n        </Button>\n      </Toolbar>\n    );\n  };\n\n  return (\n    <Dialog open={open} onClose={onClose} loading={loading}>\n      <DialogTitle>\n        {translate(\"resources.delete_media.action.send\")}\n      </DialogTitle>\n      <DialogContent>\n        <DialogContentText>\n          {translate(\"resources.delete_media.helper.send\")}\n        </DialogContentText>\n        <SimpleForm\n          toolbar={<DeleteMediaToolbar />}\n          submitOnEnter={false}\n          redirect={false}\n          save={onSend}\n        >\n          <DateTimeInput\n            fullWidth\n            source=\"before_ts\"\n            label=\"resources.delete_media.fields.before_ts\"\n            defaultValue={0}\n            parse={dateParser}\n          />\n          <NumberInput\n            fullWidth\n            source=\"size_gt\"\n            label=\"resources.delete_media.fields.size_gt\"\n            defaultValue={0}\n            min={0}\n            step={1024}\n          />\n          <BooleanInput\n            fullWidth\n            source=\"keep_profiles\"\n            label=\"resources.delete_media.fields.keep_profiles\"\n            defaultValue={true}\n          />\n        </SimpleForm>\n      </DialogContent>\n    </Dialog>\n  );\n};\n\nexport const DeleteMediaButton = props => {\n  const classes = useStyles(props);\n  const [open, setOpen] = useState(false);\n  const notify = useNotify();\n  const [deleteOne, { loading }] = useDelete(\"delete_media\");\n\n  const handleDialogOpen = () => setOpen(true);\n  const handleDialogClose = () => setOpen(false);\n\n  const handleSend = values => {\n    deleteOne(\n      { payload: { ...values } },\n      {\n        onSuccess: () => {\n          notify(\"resources.delete_media.action.send_success\");\n          handleDialogClose();\n        },\n        onFailure: () =>\n          notify(\"resources.delete_media.action.send_failure\", \"error\"),\n      }\n    );\n  };\n\n  return (\n    <Fragment>\n      <Button\n        label=\"resources.delete_media.action.send\"\n        onClick={handleDialogOpen}\n        disabled={loading}\n        className={classnames(\"ra-delete-button\", classes.deleteButton)}\n      >\n        <DeleteSweepIcon />\n      </Button>\n      <DeleteMediaDialog\n        open={open}\n        onClose={handleDialogClose}\n        onSend={handleSend}\n      />\n    </Fragment>\n  );\n};\n\nexport const ProtectMediaButton = props => {\n  const { record } = props;\n  const translate = useTranslate();\n  const refresh = useRefresh();\n  const notify = useNotify();\n  const [create, { loading }] = useCreate(\"protect_media\");\n  const [deleteOne] = useDelete(\"protect_media\");\n\n  if (!record) return null;\n\n  const handleProtect = () => {\n    create(\n      { payload: { data: record } },\n      {\n        onSuccess: () => {\n          notify(\"resources.protect_media.action.send_success\");\n          refresh();\n        },\n        onFailure: () =>\n          notify(\"resources.protect_media.action.send_failure\", \"error\"),\n      }\n    );\n  };\n\n  const handleUnprotect = () => {\n    deleteOne(\n      { payload: { ...record } },\n      {\n        onSuccess: () => {\n          notify(\"resources.protect_media.action.send_success\");\n          refresh();\n        },\n        onFailure: () =>\n          notify(\"resources.protect_media.action.send_failure\", \"error\"),\n      }\n    );\n  };\n\n  return (\n    /*\n    Wrapping Tooltip with <div>\n    https://github.com/marmelab/react-admin/issues/4349#issuecomment-578594735\n    */\n    <Fragment>\n      {record.quarantined_by && (\n        <Tooltip\n          title={translate(\"resources.protect_media.action.none\", {\n            _: \"resources.protect_media.action.none\",\n          })}\n        >\n          <div>\n            {/*\n            Button instead BooleanField for\n            consistent appearance and position in the column\n            */}\n            <Button disabled={true}>\n              <ClearIcon />\n            </Button>\n          </div>\n        </Tooltip>\n      )}\n      {record.safe_from_quarantine && (\n        <Tooltip\n          title={translate(\"resources.protect_media.action.delete\", {\n            _: \"resources.protect_media.action.delete\",\n          })}\n          arrow\n        >\n          <div>\n            <Button onClick={handleUnprotect} disabled={loading}>\n              <LockIcon />\n            </Button>\n          </div>\n        </Tooltip>\n      )}\n      {!record.safe_from_quarantine && !record.quarantined_by && (\n        <Tooltip\n          title={translate(\"resources.protect_media.action.create\", {\n            _: \"resources.protect_media.action.create\",\n          })}\n        >\n          <div>\n            <Button onClick={handleProtect} disabled={loading}>\n              <LockOpenIcon />\n            </Button>\n          </div>\n        </Tooltip>\n      )}\n    </Fragment>\n  );\n};\n\nexport const QuarantineMediaButton = props => {\n  const { record } = props;\n  const translate = useTranslate();\n  const refresh = useRefresh();\n  const notify = useNotify();\n  const [create, { loading }] = useCreate(\"quarantine_media\");\n  const [deleteOne] = useDelete(\"quarantine_media\");\n\n  if (!record) return null;\n\n  const handleQuarantaine = () => {\n    create(\n      { payload: { data: record } },\n      {\n        onSuccess: () => {\n          notify(\"resources.quarantine_media.action.send_success\");\n          refresh();\n        },\n        onFailure: () =>\n          notify(\"resources.quarantine_media.action.send_failure\", \"error\"),\n      }\n    );\n  };\n\n  const handleRemoveQuarantaine = () => {\n    deleteOne(\n      { payload: { ...record } },\n      {\n        onSuccess: () => {\n          notify(\"resources.quarantine_media.action.send_success\");\n          refresh();\n        },\n        onFailure: () =>\n          notify(\"resources.quarantine_media.action.send_failure\", \"error\"),\n      }\n    );\n  };\n\n  return (\n    <Fragment>\n      {record.safe_from_quarantine && (\n        <Tooltip\n          title={translate(\"resources.quarantine_media.action.none\", {\n            _: \"resources.quarantine_media.action.none\",\n          })}\n        >\n          <div>\n            <Button disabled={true}>\n              <ClearIcon />\n            </Button>\n          </div>\n        </Tooltip>\n      )}\n      {record.quarantined_by && (\n        <Tooltip\n          title={translate(\"resources.quarantine_media.action.delete\", {\n            _: \"resources.quarantine_media.action.delete\",\n          })}\n        >\n          <div>\n            <Button onClick={handleRemoveQuarantaine} disabled={loading}>\n              <BlockIcon color=\"error\" />\n            </Button>\n          </div>\n        </Tooltip>\n      )}\n      {!record.safe_from_quarantine && !record.quarantined_by && (\n        <Tooltip\n          title={translate(\"resources.quarantine_media.action.create\", {\n            _: \"resources.quarantine_media.action.create\",\n          })}\n        >\n          <div>\n            <Button onClick={handleQuarantaine} disabled={loading}>\n              <BlockIcon />\n            </Button>\n          </div>\n        </Tooltip>\n      )}\n    </Fragment>\n  );\n};\n","import React, { cloneElement, Fragment } from \"react\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport AssignmentIndIcon from \"@material-ui/icons/AssignmentInd\";\nimport ContactMailIcon from \"@material-ui/icons/ContactMail\";\nimport DevicesIcon from \"@material-ui/icons/Devices\";\nimport GetAppIcon from \"@material-ui/icons/GetApp\";\nimport NotificationsIcon from \"@material-ui/icons/Notifications\";\nimport PermMediaIcon from \"@material-ui/icons/PermMedia\";\nimport PersonPinIcon from \"@material-ui/icons/PersonPin\";\nimport SettingsInputComponentIcon from \"@material-ui/icons/SettingsInputComponent\";\nimport ViewListIcon from \"@material-ui/icons/ViewList\";\nimport {\n  ArrayInput,\n  ArrayField,\n  Button,\n  Datagrid,\n  DateField,\n  Create,\n  Edit,\n  List,\n  Filter,\n  Toolbar,\n  SimpleForm,\n  SimpleFormIterator,\n  TabbedForm,\n  FormTab,\n  BooleanField,\n  BooleanInput,\n  PasswordInput,\n  TextField,\n  TextInput,\n  ReferenceField,\n  ReferenceManyField,\n  SearchInput,\n  SelectInput,\n  BulkDeleteButton,\n  DeleteButton,\n  SaveButton,\n  maxLength,\n  regex,\n  required,\n  useTranslate,\n  Pagination,\n  CreateButton,\n  ExportButton,\n  TopToolbar,\n  sanitizeListRestProps,\n  NumberField,\n} from \"react-admin\";\nimport { Link } from \"react-router-dom\";\nimport { ServerNoticeButton, ServerNoticeBulkButton } from \"./ServerNotices\";\nimport { DeviceRemoveButton } from \"./devices\";\nimport { ProtectMediaButton, QuarantineMediaButton } from \"./media\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst redirect = () => {\n  return {\n    pathname: \"/import_users\",\n  };\n};\n\nconst useStyles = makeStyles({\n  small: {\n    height: \"40px\",\n    width: \"40px\",\n  },\n  large: {\n    height: \"120px\",\n    width: \"120px\",\n    float: \"right\",\n  },\n});\n\nconst date_format = {\n  year: \"numeric\",\n  month: \"2-digit\",\n  day: \"2-digit\",\n  hour: \"2-digit\",\n  minute: \"2-digit\",\n  second: \"2-digit\",\n};\n\nconst UserListActions = ({\n  currentSort,\n  className,\n  resource,\n  filters,\n  displayedFilters,\n  exporter, // you can hide ExportButton if exporter = (null || false)\n  filterValues,\n  permanentFilter,\n  hasCreate, // you can hide CreateButton if hasCreate = false\n  basePath,\n  selectedIds,\n  onUnselectItems,\n  showFilter,\n  maxResults,\n  total,\n  ...rest\n}) => {\n  return (\n    <TopToolbar className={className} {...sanitizeListRestProps(rest)}>\n      {filters &&\n        cloneElement(filters, {\n          resource,\n          showFilter,\n          displayedFilters,\n          filterValues,\n          context: \"button\",\n        })}\n      <CreateButton basePath={basePath} />\n      <ExportButton\n        disabled={total === 0}\n        resource={resource}\n        sort={currentSort}\n        filter={{ ...filterValues, ...permanentFilter }}\n        exporter={exporter}\n        maxResults={maxResults}\n      />\n      {/* Add your custom actions */}\n      <Button component={Link} to={redirect} label=\"CSV Import\">\n        <GetAppIcon style={{ transform: \"rotate(180deg)\", fontSize: \"20\" }} />\n      </Button>\n    </TopToolbar>\n  );\n};\n\nUserListActions.defaultProps = {\n  selectedIds: [],\n  onUnselectItems: () => null,\n};\n\nconst UserPagination = props => (\n  <Pagination {...props} rowsPerPageOptions={[10, 25, 50, 100, 500, 1000]} />\n);\n\nconst UserFilter = props => (\n  <Filter {...props}>\n    <SearchInput source=\"name\" alwaysOn />\n    <BooleanInput source=\"guests\" alwaysOn />\n    <BooleanInput\n      label=\"resources.users.fields.show_deactivated\"\n      source=\"deactivated\"\n      alwaysOn\n    />\n  </Filter>\n);\n\nconst UserBulkActionButtons = props => (\n  <Fragment>\n    <ServerNoticeBulkButton {...props} />\n    <BulkDeleteButton\n      {...props}\n      label=\"resources.users.action.erase\"\n      confirmTitle=\"resources.users.helper.erase\"\n      mutationMode=\"pessimistic\"\n    />\n  </Fragment>\n);\n\nconst AvatarField = ({ source, className, record = {} }) => (\n  <Avatar src={record[source]} className={className} />\n);\n\nexport const UserList = props => {\n  const classes = useStyles();\n  return (\n    <List\n      {...props}\n      filters={<UserFilter />}\n      filterDefaultValues={{ guests: true, deactivated: false }}\n      sort={{ field: \"name\", order: \"ASC\" }}\n      actions={<UserListActions maxResults={10000} />}\n      bulkActionButtons={<UserBulkActionButtons />}\n      pagination={<UserPagination />}\n    >\n      <Datagrid rowClick=\"edit\">\n        <AvatarField\n          source=\"avatar_src\"\n          className={classes.small}\n          sortBy=\"avatar_url\"\n        />\n        <TextField source=\"id\" sortBy=\"name\" />\n        <TextField source=\"displayname\" />\n        <BooleanField source=\"is_guest\" />\n        <BooleanField source=\"admin\" />\n        <BooleanField source=\"vip\" />\n        <BooleanField source=\"deactivated\" />\n        <DateField\n          source=\"creation_ts\"\n          label=\"resources.users.fields.creation_ts_ms\"\n          showTime\n          options={date_format}\n        />\n      </Datagrid>\n    </List>\n  );\n};\n\n// https://matrix.org/docs/spec/appendices#user-identifiers\n// here only local part of user_id\n// maxLength = 255 - \"@\" - \":\" - localStorage.getItem(\"home_server\").length\n// localStorage.getItem(\"home_server\").length is not valid here\nconst validateUser = [\n  required(),\n  maxLength(253),\n  regex(/^[a-z0-9._=\\-/]+$/, \"synapseadmin.users.invalid_user_id\"),\n];\n\nconst validateAddress = [required(), maxLength(255)];\n\nexport function generateRandomUser() {\n  const homeserver = localStorage.getItem(\"home_server\");\n  const user_id =\n    \"@\" +\n    Array(8)\n      .fill(\"0123456789abcdefghijklmnopqrstuvwxyz\")\n      .map(\n        x =>\n          x[\n            Math.floor(\n              (crypto.getRandomValues(new Uint32Array(1))[0] /\n                (0xffffffff + 1)) *\n                x.length\n            )\n          ]\n      )\n      .join(\"\") +\n    \":\" +\n    homeserver;\n\n  const password = Array(20)\n    .fill(\n      \"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz~!@-#$\"\n    )\n    .map(\n      x =>\n        x[\n          Math.floor(\n            (crypto.getRandomValues(new Uint32Array(1))[0] / (0xffffffff + 1)) *\n              x.length\n          )\n        ]\n    )\n    .join(\"\");\n\n  return {\n    id: user_id,\n    password: password,\n  };\n}\n\nconst UserEditToolbar = props => {\n  const translate = useTranslate();\n  return (\n    <Toolbar {...props}>\n      <SaveButton submitOnEnter={true} disabled={props.pristine} />\n      <DeleteButton\n        label=\"resources.users.action.erase\"\n        confirmTitle={translate(\"resources.users.helper.erase\", {\n          smart_count: 1,\n        })}\n        mutationMode=\"pessimistic\"\n      />\n      <ServerNoticeButton />\n    </Toolbar>\n  );\n};\n\nexport const UserCreate = props => (\n  <Create {...props}>\n    <SimpleForm>\n      <TextInput source=\"id\" autoComplete=\"off\" validate={validateUser} />\n      <TextInput source=\"displayname\" validate={maxLength(256)} />\n      <PasswordInput\n        source=\"password\"\n        autoComplete=\"new-password\"\n        validate={maxLength(512)}\n      />\n      <BooleanInput source=\"admin\" />\n      <ArrayInput source=\"threepids\">\n        <SimpleFormIterator>\n          <SelectInput\n            source=\"medium\"\n            choices={[\n              { id: \"email\", name: \"resources.users.email\" },\n              { id: \"msisdn\", name: \"resources.users.msisdn\" },\n            ]}\n            validate={required()}\n          />\n          <TextInput source=\"address\" validate={validateAddress} />\n        </SimpleFormIterator>\n      </ArrayInput>\n      <ArrayInput source=\"external_ids\" label=\"synapseadmin.users.tabs.sso\">\n        <SimpleFormIterator>\n          <TextInput source=\"auth_provider\" validate={required()} />\n          <TextInput\n            source=\"external_id\"\n            label=\"resources.users.fields.id\"\n            validate={required()}\n          />\n        </SimpleFormIterator>\n      </ArrayInput>\n    </SimpleForm>\n  </Create>\n);\n\nconst UserTitle = ({ record }) => {\n  const translate = useTranslate();\n  return (\n    <span>\n      {translate(\"resources.users.name\", {\n        smart_count: 1,\n      })}{\" \"}\n      {record ? `\"${record.displayname}\"` : \"\"}\n    </span>\n  );\n};\nexport const UserEdit = props => {\n  const classes = useStyles();\n  const translate = useTranslate();\n  return (\n    <Edit {...props} title={<UserTitle />}>\n      <TabbedForm toolbar={<UserEditToolbar />}>\n        <FormTab\n          label={translate(\"resources.users.name\", { smart_count: 1 })}\n          icon={<PersonPinIcon />}\n        >\n          <AvatarField\n            source=\"avatar_src\"\n            sortable={false}\n            className={classes.large}\n          />\n          <TextInput source=\"id\" disabled />\n          <TextInput source=\"displayname\" />\n          <PasswordInput source=\"password\" autoComplete=\"new-password\" />\n          <BooleanInput source=\"admin\" />\n          <BooleanInput source=\"vip\" />\n          <BooleanInput\n            source=\"deactivated\"\n            helperText=\"resources.users.helper.deactivate\"\n          />\n          <DateField source=\"creation_ts_ms\" showTime options={date_format} />\n          <TextField source=\"consent_version\" />\n        </FormTab>\n\n        <FormTab\n          label=\"resources.users.threepid\"\n          icon={<ContactMailIcon />}\n          path=\"threepid\"\n        >\n          <ArrayInput source=\"threepids\">\n            <SimpleFormIterator>\n              <SelectInput\n                source=\"medium\"\n                choices={[\n                  { id: \"email\", name: \"resources.users.email\" },\n                  { id: \"msisdn\", name: \"resources.users.msisdn\" },\n                ]}\n              />\n              <TextInput source=\"address\" />\n            </SimpleFormIterator>\n          </ArrayInput>\n        </FormTab>\n\n        <FormTab\n          label=\"synapseadmin.users.tabs.sso\"\n          icon={<AssignmentIndIcon />}\n          path=\"sso\"\n        >\n          <ArrayInput source=\"external_ids\" label={false}>\n            <SimpleFormIterator>\n              <TextInput source=\"auth_provider\" validate={required()} />\n              <TextInput\n                source=\"external_id\"\n                label=\"resources.users.fields.id\"\n                validate={required()}\n              />\n            </SimpleFormIterator>\n          </ArrayInput>\n        </FormTab>\n\n        <FormTab\n          label={translate(\"resources.devices.name\", { smart_count: 2 })}\n          icon={<DevicesIcon />}\n          path=\"devices\"\n        >\n          <ReferenceManyField\n            reference=\"devices\"\n            target=\"user_id\"\n            addLabel={false}\n          >\n            <Datagrid style={{ width: \"100%\" }}>\n              <TextField source=\"device_id\" sortable={false} />\n              <TextField source=\"display_name\" sortable={false} />\n              <TextField source=\"last_seen_ip\" sortable={false} />\n              <DateField\n                source=\"last_seen_ts\"\n                showTime\n                options={date_format}\n                sortable={false}\n              />\n              <DeviceRemoveButton />\n            </Datagrid>\n          </ReferenceManyField>\n        </FormTab>\n\n        <FormTab\n          label=\"resources.connections.name\"\n          icon={<SettingsInputComponentIcon />}\n          path=\"connections\"\n        >\n          <ReferenceField\n            reference=\"connections\"\n            source=\"id\"\n            addLabel={false}\n            link={false}\n          >\n            <ArrayField\n              source=\"devices[].sessions[0].connections\"\n              label=\"resources.connections.name\"\n            >\n              <Datagrid style={{ width: \"100%\" }}>\n                <TextField source=\"ip\" sortable={false} />\n                <DateField\n                  source=\"last_seen\"\n                  showTime\n                  options={date_format}\n                  sortable={false}\n                />\n                <TextField\n                  source=\"user_agent\"\n                  sortable={false}\n                  style={{ width: \"100%\" }}\n                />\n              </Datagrid>\n            </ArrayField>\n          </ReferenceField>\n        </FormTab>\n\n        <FormTab\n          label={translate(\"resources.users_media.name\", { smart_count: 2 })}\n          icon={<PermMediaIcon />}\n          path=\"media\"\n        >\n          <ReferenceManyField\n            reference=\"users_media\"\n            target=\"user_id\"\n            addLabel={false}\n            pagination={<UserPagination />}\n            perPage={50}\n            sort={{ field: \"created_ts\", order: \"DESC\" }}\n          >\n            <Datagrid style={{ width: \"100%\" }}>\n              <DateField source=\"created_ts\" showTime options={date_format} />\n              <DateField\n                source=\"last_access_ts\"\n                showTime\n                options={date_format}\n              />\n              <TextField source=\"media_id\" />\n              <NumberField source=\"media_length\" />\n              <TextField source=\"media_type\" />\n              <TextField source=\"upload_name\" />\n              <TextField source=\"quarantined_by\" />\n              <QuarantineMediaButton label=\"resources.quarantine_media.action.name\" />\n              <ProtectMediaButton label=\"resources.users_media.fields.safe_from_quarantine\" />\n              <DeleteButton mutationMode=\"pessimistic\" redirect={false} />\n            </Datagrid>\n          </ReferenceManyField>\n        </FormTab>\n\n        <FormTab\n          label={translate(\"resources.rooms.name\", { smart_count: 2 })}\n          icon={<ViewListIcon />}\n          path=\"rooms\"\n        >\n          <ReferenceManyField\n            reference=\"joined_rooms\"\n            target=\"user_id\"\n            addLabel={false}\n          >\n            <Datagrid\n              style={{ width: \"100%\" }}\n              rowClick={(id, basePath, record) => \"/rooms/\" + id + \"/show\"}\n            >\n              <TextField\n                source=\"id\"\n                sortable={false}\n                label=\"resources.rooms.fields.room_id\"\n              />\n              <ReferenceField\n                label=\"resources.rooms.fields.name\"\n                source=\"id\"\n                reference=\"rooms\"\n                sortable={false}\n                link=\"\"\n              >\n                <TextField source=\"name\" sortable={false} />\n              </ReferenceField>\n            </Datagrid>\n          </ReferenceManyField>\n        </FormTab>\n\n        <FormTab\n          label={translate(\"resources.pushers.name\", { smart_count: 2 })}\n          icon={<NotificationsIcon />}\n          path=\"pushers\"\n        >\n          <ReferenceManyField\n            reference=\"pushers\"\n            target=\"user_id\"\n            addLabel={false}\n          >\n            <Datagrid style={{ width: \"100%\" }}>\n              <TextField source=\"kind\" sortable={false} />\n              <TextField source=\"app_display_name\" sortable={false} />\n              <TextField source=\"app_id\" sortable={false} />\n              <TextField source=\"data.url\" sortable={false} />\n              <TextField source=\"device_display_name\" sortable={false} />\n              <TextField source=\"lang\" sortable={false} />\n              <TextField source=\"profile_tag\" sortable={false} />\n              <TextField source=\"pushkey\" sortable={false} />\n            </Datagrid>\n          </ReferenceManyField>\n        </FormTab>\n      </TabbedForm>\n    </Edit>\n  );\n};\n","import React, { Fragment } from \"react\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport { Chip } from \"@material-ui/core\";\nimport { connect } from \"react-redux\";\nimport FolderSharedIcon from \"@material-ui/icons/FolderShared\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport {\n  BooleanField,\n  BulkDeleteButton,\n  Button,\n  Datagrid,\n  DeleteButton,\n  Filter,\n  List,\n  NumberField,\n  Pagination,\n  TextField,\n  useCreate,\n  useMutation,\n  useNotify,\n  useTranslate,\n  useRefresh,\n  useUnselectAll,\n} from \"react-admin\";\n\nconst useStyles = makeStyles({\n  small: {\n    height: \"40px\",\n    width: \"40px\",\n  },\n});\n\nconst RoomDirectoryPagination = props => (\n  <Pagination {...props} rowsPerPageOptions={[100, 500, 1000, 2000]} />\n);\n\nexport const RoomDirectoryDeleteButton = props => {\n  const translate = useTranslate();\n\n  return (\n    <DeleteButton\n      {...props}\n      label=\"resources.room_directory.action.erase\"\n      redirect={false}\n      mutationMode=\"pessimistic\"\n      confirmTitle={translate(\"resources.room_directory.action.title\", {\n        smart_count: 1,\n      })}\n      confirmContent={translate(\"resources.room_directory.action.content\", {\n        smart_count: 1,\n      })}\n      resource=\"room_directory\"\n      icon={<FolderSharedIcon />}\n    />\n  );\n};\n\nexport const RoomDirectoryBulkDeleteButton = props => (\n  <BulkDeleteButton\n    {...props}\n    label=\"resources.room_directory.action.erase\"\n    mutationMode=\"pessimistic\"\n    confirmTitle=\"resources.room_directory.action.title\"\n    confirmContent=\"resources.room_directory.action.content\"\n    resource=\"room_directory\"\n    icon={<FolderSharedIcon />}\n  />\n);\n\nexport const RoomDirectoryBulkSaveButton = ({ selectedIds }) => {\n  const notify = useNotify();\n  const refresh = useRefresh();\n  const unselectAll = useUnselectAll();\n  const [createMany, { loading }] = useMutation();\n\n  const handleSend = values => {\n    createMany(\n      {\n        type: \"createMany\",\n        resource: \"room_directory\",\n        payload: { ids: selectedIds, data: {} },\n      },\n      {\n        onSuccess: ({ data }) => {\n          notify(\"resources.room_directory.action.send_success\");\n          unselectAll(\"rooms\");\n          refresh();\n        },\n        onFailure: error =>\n          notify(\"resources.room_directory.action.send_failure\", \"error\"),\n      }\n    );\n  };\n\n  return (\n    <Button\n      label=\"resources.room_directory.action.create\"\n      onClick={handleSend}\n      disabled={loading}\n    >\n      <FolderSharedIcon />\n    </Button>\n  );\n};\n\nexport const RoomDirectorySaveButton = ({ record }) => {\n  const notify = useNotify();\n  const refresh = useRefresh();\n  const [create, { loading }] = useCreate(\"room_directory\");\n\n  const handleSend = values => {\n    create(\n      {\n        payload: { data: { id: record.id } },\n      },\n      {\n        onSuccess: ({ data }) => {\n          notify(\"resources.room_directory.action.send_success\");\n          refresh();\n        },\n        onFailure: error =>\n          notify(\"resources.room_directory.action.send_failure\", \"error\"),\n      }\n    );\n  };\n\n  return (\n    <Button\n      label=\"resources.room_directory.action.create\"\n      onClick={handleSend}\n      disabled={loading}\n    >\n      <FolderSharedIcon />\n    </Button>\n  );\n};\n\nconst RoomDirectoryBulkActionButtons = props => (\n  <Fragment>\n    <RoomDirectoryBulkDeleteButton {...props} />\n  </Fragment>\n);\n\nconst AvatarField = ({ source, className, record = {} }) => (\n  <Avatar src={record[source]} className={className} />\n);\n\nconst RoomDirectoryFilter = ({ ...props }) => {\n  const translate = useTranslate();\n  return (\n    <Filter {...props}>\n      <Chip\n        label={translate(\"resources.rooms.fields.room_id\")}\n        source=\"room_id\"\n        defaultValue={false}\n        style={{ marginBottom: 8 }}\n      />\n      <Chip\n        label={translate(\"resources.rooms.fields.topic\")}\n        source=\"topic\"\n        defaultValue={false}\n        style={{ marginBottom: 8 }}\n      />\n      <Chip\n        label={translate(\"resources.rooms.fields.canonical_alias\")}\n        source=\"canonical_alias\"\n        defaultValue={false}\n        style={{ marginBottom: 8 }}\n      />\n    </Filter>\n  );\n};\n\nexport const FilterableRoomDirectoryList = ({\n  roomDirectoryFilters,\n  dispatch,\n  ...props\n}) => {\n  const classes = useStyles();\n  const translate = useTranslate();\n  const filter = roomDirectoryFilters;\n  const roomIdFilter = filter && filter.room_id ? true : false;\n  const topicFilter = filter && filter.topic ? true : false;\n  const canonicalAliasFilter = filter && filter.canonical_alias ? true : false;\n\n  return (\n    <List\n      {...props}\n      pagination={<RoomDirectoryPagination />}\n      bulkActionButtons={<RoomDirectoryBulkActionButtons />}\n      filters={<RoomDirectoryFilter />}\n      perPage={100}\n    >\n      <Datagrid rowClick={(id, basePath, record) => \"/rooms/\" + id + \"/show\"}>\n        <AvatarField\n          source=\"avatar_src\"\n          sortable={false}\n          className={classes.small}\n          label={translate(\"resources.rooms.fields.avatar\")}\n        />\n        <TextField\n          source=\"name\"\n          sortable={false}\n          label={translate(\"resources.rooms.fields.name\")}\n        />\n        {roomIdFilter && (\n          <TextField\n            source=\"room_id\"\n            sortable={false}\n            label={translate(\"resources.rooms.fields.room_id\")}\n          />\n        )}\n        {canonicalAliasFilter && (\n          <TextField\n            source=\"canonical_alias\"\n            sortable={false}\n            label={translate(\"resources.rooms.fields.canonical_alias\")}\n          />\n        )}\n        {topicFilter && (\n          <TextField\n            source=\"topic\"\n            sortable={false}\n            label={translate(\"resources.rooms.fields.topic\")}\n          />\n        )}\n        <NumberField\n          source=\"num_joined_members\"\n          sortable={false}\n          label={translate(\"resources.rooms.fields.joined_members\")}\n        />\n        <BooleanField\n          source=\"world_readable\"\n          sortable={false}\n          label={translate(\"resources.room_directory.fields.world_readable\")}\n        />\n        <BooleanField\n          source=\"guest_can_join\"\n          sortable={false}\n          label={translate(\"resources.room_directory.fields.guest_can_join\")}\n        />\n      </Datagrid>\n    </List>\n  );\n};\n\nfunction mapStateToProps(state) {\n  return {\n    roomDirectoryFilters:\n      state.admin.resources.room_directory.list.params.displayedFilters,\n  };\n}\n\nexport const RoomDirectoryList = connect(mapStateToProps)(\n  FilterableRoomDirectoryList\n);\n","import React, { Fragment } from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n  BooleanField,\n  BulkDeleteButton,\n  DateField,\n  Datagrid,\n  DeleteButton,\n  Filter,\n  List,\n  NumberField,\n  Pagination,\n  ReferenceField,\n  ReferenceManyField,\n  SearchInput,\n  SelectField,\n  Show,\n  Tab,\n  TabbedShowLayout,\n  TextField,\n  TopToolbar,\n  useRecordContext,\n  useTranslate,\n} from \"react-admin\";\nimport get from \"lodash/get\";\nimport PropTypes from \"prop-types\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Tooltip, Typography, Chip } from \"@material-ui/core\";\nimport FastForwardIcon from \"@material-ui/icons/FastForward\";\nimport HttpsIcon from \"@material-ui/icons/Https\";\nimport NoEncryptionIcon from \"@material-ui/icons/NoEncryption\";\nimport PageviewIcon from \"@material-ui/icons/Pageview\";\nimport UserIcon from \"@material-ui/icons/Group\";\nimport ViewListIcon from \"@material-ui/icons/ViewList\";\nimport VisibilityIcon from \"@material-ui/icons/Visibility\";\nimport EventIcon from \"@material-ui/icons/Event\";\nimport {\n  RoomDirectoryBulkDeleteButton,\n  RoomDirectoryBulkSaveButton,\n  RoomDirectoryDeleteButton,\n  RoomDirectorySaveButton,\n} from \"./RoomDirectory\";\n\nconst date_format = {\n  year: \"numeric\",\n  month: \"2-digit\",\n  day: \"2-digit\",\n  hour: \"2-digit\",\n  minute: \"2-digit\",\n  second: \"2-digit\",\n};\n\nconst useStyles = makeStyles(theme => ({\n  helper_forward_extremities: {\n    fontFamily: \"Roboto, Helvetica, Arial, sans-serif\",\n    margin: \"0.5em\",\n  },\n}));\n\nconst RoomPagination = props => (\n  <Pagination {...props} rowsPerPageOptions={[10, 25, 50, 100, 500, 1000]} />\n);\n\nconst EncryptionField = ({ source, record = {}, emptyText }) => {\n  const translate = useTranslate();\n  const value = get(record, source);\n  let ariaLabel = value === false ? \"ra.boolean.false\" : \"ra.boolean.true\";\n\n  if (value === false || value === true) {\n    return (\n      <Typography component=\"span\" variant=\"body2\">\n        <Tooltip title={translate(ariaLabel, { _: ariaLabel })}>\n          {value === true ? (\n            <HttpsIcon data-testid=\"true\" htmlColor=\"limegreen\" />\n          ) : (\n            <NoEncryptionIcon data-testid=\"false\" color=\"error\" />\n          )}\n        </Tooltip>\n      </Typography>\n    );\n  }\n\n  return (\n    <Typography component=\"span\" variant=\"body2\">\n      {emptyText}\n    </Typography>\n  );\n};\n\nconst RoomTitle = ({ record }) => {\n  const translate = useTranslate();\n  var name = \"\";\n  if (record) {\n    name = record.name !== \"\" ? record.name : record.id;\n  }\n\n  return (\n    <span>\n      {translate(\"resources.rooms.name\", 1)} {name}\n    </span>\n  );\n};\n\nconst RoomShowActions = ({ basePath, data, resource }) => {\n  var roomDirectoryStatus = \"\";\n  if (data) {\n    roomDirectoryStatus = data.public;\n  }\n\n  return (\n    <TopToolbar>\n      {roomDirectoryStatus === false && (\n        <RoomDirectorySaveButton record={data} />\n      )}\n      {roomDirectoryStatus === true && (\n        <RoomDirectoryDeleteButton record={data} />\n      )}\n      <DeleteButton\n        basePath={basePath}\n        record={data}\n        resource={resource}\n        mutationMode=\"pessimistic\"\n        confirmTitle=\"resources.rooms.action.erase.title\"\n        confirmContent=\"resources.rooms.action.erase.content\"\n      />\n    </TopToolbar>\n  );\n};\n\nexport const RoomShow = props => {\n  const classes = useStyles({ props });\n  const translate = useTranslate();\n  return (\n    <Show {...props} actions={<RoomShowActions />} title={<RoomTitle />}>\n      <TabbedShowLayout>\n        <Tab label=\"synapseadmin.rooms.tabs.basic\" icon={<ViewListIcon />}>\n          <TextField source=\"room_id\" />\n          <TextField source=\"name\" />\n          <TextField source=\"canonical_alias\" />\n          <ReferenceField source=\"creator\" reference=\"users\">\n            <TextField source=\"id\" />\n          </ReferenceField>\n        </Tab>\n\n        <Tab\n          label=\"synapseadmin.rooms.tabs.detail\"\n          icon={<PageviewIcon />}\n          path=\"detail\"\n        >\n          <TextField source=\"joined_members\" />\n          <TextField source=\"joined_local_members\" />\n          <TextField source=\"joined_local_devices\" />\n          <TextField source=\"state_events\" />\n          <TextField source=\"version\" />\n          <TextField\n            source=\"encryption\"\n            emptyText={translate(\"resources.rooms.enums.unencrypted\")}\n          />\n        </Tab>\n\n        <Tab label=\"synapseadmin.rooms.tabs.members\" icon={<UserIcon />}>\n          <ReferenceManyField\n            reference=\"room_members\"\n            target=\"room_id\"\n            addLabel={false}\n          >\n            <Datagrid\n              style={{ width: \"100%\" }}\n              rowClick={(id, basePath, record) => \"/users/\" + id}\n            >\n              <TextField\n                source=\"id\"\n                sortable={false}\n                label=\"resources.users.fields.id\"\n              />\n              <ReferenceField\n                label=\"resources.users.fields.displayname\"\n                source=\"id\"\n                reference=\"users\"\n                sortable={false}\n                link=\"\"\n              >\n                <TextField source=\"displayname\" sortable={false} />\n              </ReferenceField>\n            </Datagrid>\n          </ReferenceManyField>\n        </Tab>\n\n        <Tab\n          label=\"synapseadmin.rooms.tabs.permission\"\n          icon={<VisibilityIcon />}\n          path=\"permission\"\n        >\n          <BooleanField source=\"federatable\" />\n          <BooleanField source=\"public\" />\n          <SelectField\n            source=\"join_rules\"\n            choices={[\n              { id: \"public\", name: \"resources.rooms.enums.join_rules.public\" },\n              { id: \"knock\", name: \"resources.rooms.enums.join_rules.knock\" },\n              { id: \"invite\", name: \"resources.rooms.enums.join_rules.invite\" },\n              {\n                id: \"private\",\n                name: \"resources.rooms.enums.join_rules.private\",\n              },\n            ]}\n          />\n          <SelectField\n            source=\"guest_access\"\n            choices={[\n              {\n                id: \"can_join\",\n                name: \"resources.rooms.enums.guest_access.can_join\",\n              },\n              {\n                id: \"forbidden\",\n                name: \"resources.rooms.enums.guest_access.forbidden\",\n              },\n            ]}\n          />\n          <SelectField\n            source=\"history_visibility\"\n            choices={[\n              {\n                id: \"invited\",\n                name: \"resources.rooms.enums.history_visibility.invited\",\n              },\n              {\n                id: \"joined\",\n                name: \"resources.rooms.enums.history_visibility.joined\",\n              },\n              {\n                id: \"shared\",\n                name: \"resources.rooms.enums.history_visibility.shared\",\n              },\n              {\n                id: \"world_readable\",\n                name: \"resources.rooms.enums.history_visibility.world_readable\",\n              },\n            ]}\n          />\n        </Tab>\n\n        <Tab\n          label={translate(\"resources.room_state.name\", { smart_count: 2 })}\n          icon={<EventIcon />}\n          path=\"state\"\n        >\n          <ReferenceManyField\n            reference=\"room_state\"\n            target=\"room_id\"\n            addLabel={false}\n          >\n            <Datagrid style={{ width: \"100%\" }}>\n              <TextField source=\"type\" sortable={false} />\n              <DateField\n                source=\"origin_server_ts\"\n                showTime\n                options={date_format}\n                sortable={false}\n              />\n              <TextField source=\"content\" sortable={false} />\n              <ReferenceField\n                source=\"sender\"\n                reference=\"users\"\n                sortable={false}\n              >\n                <TextField source=\"id\" />\n              </ReferenceField>\n            </Datagrid>\n          </ReferenceManyField>\n        </Tab>\n\n        <Tab\n          label=\"resources.forward_extremities.name\"\n          icon={<FastForwardIcon />}\n          path=\"forward_extremities\"\n        >\n          <div className={classes.helper_forward_extremities}>\n            {translate(\"resources.rooms.helper.forward_extremities\")}\n          </div>\n          <ReferenceManyField\n            reference=\"forward_extremities\"\n            target=\"room_id\"\n            addLabel={false}\n          >\n            <Datagrid style={{ width: \"100%\" }}>\n              <TextField source=\"id\" sortable={false} />\n              <DateField\n                source=\"received_ts\"\n                showTime\n                options={date_format}\n                sortable={false}\n              />\n              <NumberField source=\"depth\" sortable={false} />\n              <TextField source=\"state_group\" sortable={false} />\n            </Datagrid>\n          </ReferenceManyField>\n        </Tab>\n      </TabbedShowLayout>\n    </Show>\n  );\n};\n\nconst RoomBulkActionButtons = props => (\n  <Fragment>\n    <RoomDirectoryBulkSaveButton {...props} />\n    <RoomDirectoryBulkDeleteButton {...props} />\n    <BulkDeleteButton\n      {...props}\n      confirmTitle=\"resources.rooms.action.erase.title\"\n      confirmContent=\"resources.rooms.action.erase.content\"\n      mutationMode=\"pessimistic\"\n    />\n  </Fragment>\n);\n\nconst RoomFilter = ({ ...props }) => {\n  const translate = useTranslate();\n  return (\n    <Filter {...props}>\n      <SearchInput source=\"search_term\" alwaysOn />\n      <Chip\n        label={translate(\"resources.rooms.fields.joined_local_members\")}\n        source=\"joined_local_members\"\n        defaultValue={false}\n        style={{ marginBottom: 8 }}\n      />\n      <Chip\n        label={translate(\"resources.rooms.fields.state_events\")}\n        source=\"state_events\"\n        defaultValue={false}\n        style={{ marginBottom: 8 }}\n      />\n      <Chip\n        label={translate(\"resources.rooms.fields.version\")}\n        source=\"version\"\n        defaultValue={false}\n        style={{ marginBottom: 8 }}\n      />\n      <Chip\n        label={translate(\"resources.rooms.fields.federatable\")}\n        source=\"federatable\"\n        defaultValue={false}\n        style={{ marginBottom: 8 }}\n      />\n    </Filter>\n  );\n};\n\nconst RoomNameField = props => {\n  const { source } = props;\n  const record = useRecordContext(props);\n  return (\n    <span>{record[source] || record[\"canonical_alias\"] || record[\"id\"]}</span>\n  );\n};\n\nRoomNameField.propTypes = {\n  label: PropTypes.string,\n  record: PropTypes.object,\n  source: PropTypes.string.isRequired,\n};\n\nconst FilterableRoomList = ({ roomFilters, dispatch, ...props }) => {\n  const filter = roomFilters;\n  const localMembersFilter =\n    filter && filter.joined_local_members ? true : false;\n  const stateEventsFilter = filter && filter.state_events ? true : false;\n  const versionFilter = filter && filter.version ? true : false;\n  const federateableFilter = filter && filter.federatable ? true : false;\n\n  return (\n    <List\n      {...props}\n      pagination={<RoomPagination />}\n      sort={{ field: \"name\", order: \"ASC\" }}\n      filters={<RoomFilter />}\n      bulkActionButtons={<RoomBulkActionButtons />}\n    >\n      <Datagrid rowClick=\"show\">\n        <EncryptionField\n          source=\"is_encrypted\"\n          sortBy=\"encryption\"\n          label={<HttpsIcon />}\n        />\n        <RoomNameField source=\"name\" />\n        <TextField source=\"joined_members\" />\n        {localMembersFilter && <TextField source=\"joined_local_members\" />}\n        {stateEventsFilter && <TextField source=\"state_events\" />}\n        {versionFilter && <TextField source=\"version\" />}\n        {federateableFilter && <BooleanField source=\"federatable\" />}\n        <BooleanField source=\"public\" />\n      </Datagrid>\n    </List>\n  );\n};\n\nfunction mapStateToProps(state) {\n  return {\n    roomFilters: state.admin.resources.rooms.list.params.displayedFilters,\n  };\n}\n\nexport const RoomList = connect(mapStateToProps)(FilterableRoomList);\n","import React from \"react\";\nimport {\n  Datagrid,\n  DateField,\n  List,\n  NumberField,\n  Pagination,\n  ReferenceField,\n  Show,\n  Tab,\n  TabbedShowLayout,\n  TextField,\n  useTranslate,\n} from \"react-admin\";\nimport PageviewIcon from \"@material-ui/icons/Pageview\";\nimport ViewListIcon from \"@material-ui/icons/ViewList\";\n\nconst date_format = {\n  year: \"numeric\",\n  month: \"2-digit\",\n  day: \"2-digit\",\n  hour: \"2-digit\",\n  minute: \"2-digit\",\n  second: \"2-digit\",\n};\n\nconst ReportPagination = props => (\n  <Pagination {...props} rowsPerPageOptions={[10, 25, 50, 100, 500, 1000]} />\n);\n\nexport const ReportShow = props => {\n  const translate = useTranslate();\n  return (\n    <Show {...props}>\n      <TabbedShowLayout>\n        <Tab\n          label={translate(\"synapseadmin.reports.tabs.basic\", {\n            smart_count: 1,\n          })}\n          icon={<ViewListIcon />}\n        >\n          <DateField\n            source=\"received_ts\"\n            showTime\n            options={date_format}\n            sortable={true}\n          />\n          <ReferenceField source=\"user_id\" reference=\"users\">\n            <TextField source=\"id\" />\n          </ReferenceField>\n          <NumberField source=\"score\" />\n          <TextField source=\"reason\" />\n          <TextField source=\"name\" />\n          <TextField\n            source=\"canonical_alias\"\n            label=\"resources.rooms.fields.canonical_alias\"\n          />\n          <ReferenceField\n            source=\"room_id\"\n            reference=\"rooms\"\n            link=\"show\"\n            label=\"resources.rooms.fields.room_id\"\n          >\n            <TextField source=\"id\" />\n          </ReferenceField>\n        </Tab>\n\n        <Tab\n          label=\"synapseadmin.reports.tabs.detail\"\n          icon={<PageviewIcon />}\n          path=\"detail\"\n        >\n          {\" \"}\n          <DateField\n            source=\"event_json.origin_server_ts\"\n            showTime\n            options={date_format}\n            sortable={true}\n          />\n          <ReferenceField source=\"sender\" reference=\"users\">\n            <TextField source=\"id\" />\n          </ReferenceField>\n          <TextField source=\"event_id\" />\n          <TextField source=\"event_json.origin\" />\n          <TextField source=\"event_json.type\" />\n          <TextField source=\"event_json.content.msgtype\" />\n          <TextField source=\"event_json.content.body\" />\n          <TextField source=\"event_json.content.format\" />\n          <TextField source=\"event_json.content.formatted_body\" />\n          <TextField source=\"event_json.content.algorithm\" />\n          <TextField\n            source=\"event_json.content.device_id\"\n            label=\"resources.users.fields.device_id\"\n          />\n        </Tab>\n      </TabbedShowLayout>\n    </Show>\n  );\n};\n\nexport const ReportList = ({ ...props }) => {\n  return (\n    <List\n      {...props}\n      pagination={<ReportPagination />}\n      sort={{ field: \"received_ts\", order: \"DESC\" }}\n      bulkActionButtons={false}\n    >\n      <Datagrid rowClick=\"show\">\n        <TextField source=\"id\" sortable={false} />\n        <DateField\n          source=\"received_ts\"\n          showTime\n          options={date_format}\n          sortable={true}\n        />\n        <TextField sortable={false} source=\"user_id\" />\n        <TextField sortable={false} source=\"name\" />\n        <TextField sortable={false} source=\"score\" />\n      </Datagrid>\n    </List>\n  );\n};\n","import React, { useState, useEffect } from \"react\";\nimport {\n  fetchUtils,\n  FormDataConsumer,\n  Notification,\n  useLogin,\n  useNotify,\n  useLocale,\n  useSetLocale,\n  useTranslate,\n  PasswordInput,\n  TextInput,\n} from \"react-admin\";\nimport { Form, useForm } from \"react-final-form\";\nimport {\n  Avatar,\n  Button,\n  Card,\n  CardActions,\n  CircularProgress,\n  MenuItem,\n  Select,\n  TextField,\n} from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport LockIcon from \"@material-ui/icons/Lock\";\n\nconst useStyles = makeStyles(theme => ({\n  main: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    minHeight: \"calc(100vh - 1em)\",\n    alignItems: \"center\",\n    justifyContent: \"flex-start\",\n    background: \"url(./images/floating-cogs.svg)\",\n    backgroundColor: \"#f9f9f9\",\n    backgroundRepeat: \"no-repeat\",\n    backgroundSize: \"cover\",\n  },\n  card: {\n    minWidth: \"30em\",\n    marginTop: \"6em\",\n    marginBottom: \"6em\",\n  },\n  avatar: {\n    margin: \"1em\",\n    display: \"flex\",\n    justifyContent: \"center\",\n  },\n  icon: {\n    backgroundColor: theme.palette.secondary.main,\n  },\n  hint: {\n    marginTop: \"1em\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    color: theme.palette.grey[500],\n  },\n  form: {\n    padding: \"0 1em 1em 1em\",\n  },\n  input: {\n    marginTop: \"1em\",\n  },\n  actions: {\n    padding: \"0 1em 1em 1em\",\n  },\n  serverVersion: {\n    color: \"#9e9e9e\",\n    fontFamily: \"Roboto, Helvetica, Arial, sans-serif\",\n    marginBottom: \"1em\",\n    marginLeft: \"0.5em\",\n  },\n}));\n\nconst LoginPage = ({ theme }) => {\n  const classes = useStyles({ theme });\n  const login = useLogin();\n  const notify = useNotify();\n  const [loading, setLoading] = useState(false);\n  const [supportPassAuth, setSupportPassAuth] = useState(true);\n  var locale = useLocale();\n  const setLocale = useSetLocale();\n  const translate = useTranslate();\n  const base_url = localStorage.getItem(\"base_url\");\n  const cfg_base_url = process.env.REACT_APP_SERVER;\n  const [ssoBaseUrl, setSSOBaseUrl] = useState(\"\");\n  const loginToken = /\\?loginToken=([a-zA-Z0-9_-]+)/.exec(window.location.href);\n\n  if (loginToken) {\n    const ssoToken = loginToken[1];\n    console.log(\"SSO token is\", ssoToken);\n    // Prevent further requests\n    window.history.replaceState(\n      {},\n      \"\",\n      window.location.href.replace(loginToken[0], \"#\").split(\"#\")[0]\n    );\n    const baseUrl = localStorage.getItem(\"sso_base_url\");\n    localStorage.removeItem(\"sso_base_url\");\n    if (baseUrl) {\n      const auth = {\n        base_url: baseUrl,\n        username: null,\n        password: null,\n        loginToken: ssoToken,\n      };\n      console.log(\"Base URL is:\", baseUrl);\n      console.log(\"SSO Token is:\", ssoToken);\n      console.log(\"Let's try token login...\");\n      login(auth).catch(error => {\n        alert(\n          typeof error === \"string\"\n            ? error\n            : typeof error === \"undefined\" || !error.message\n            ? \"ra.auth.sign_in_error\"\n            : error.message\n        );\n        console.error(error);\n      });\n    }\n  }\n\n  const renderInput = ({\n    meta: { touched, error } = {},\n    input: { ...inputProps },\n    ...props\n  }) => (\n    <TextField\n      error={!!(touched && error)}\n      helperText={touched && error}\n      {...inputProps}\n      {...props}\n      fullWidth\n    />\n  );\n\n  const validate = values => {\n    const errors = {};\n    if (!values.username) {\n      errors.username = translate(\"ra.validation.required\");\n    }\n    if (!values.password) {\n      errors.password = translate(\"ra.validation.required\");\n    }\n    if (!values.base_url) {\n      errors.base_url = translate(\"ra.validation.required\");\n    } else {\n      if (!values.base_url.match(/^(http|https):\\/\\//)) {\n        errors.base_url = translate(\"synapseadmin.auth.protocol_error\");\n      } else if (\n        !values.base_url.match(\n          /^(http|https):\\/\\/[a-zA-Z0-9\\-.]+(:\\d{1,5})?[^?&\\s]*$/\n        )\n      ) {\n        errors.base_url = translate(\"synapseadmin.auth.url_error\");\n      }\n    }\n    return errors;\n  };\n\n  const handleSubmit = auth => {\n    setLoading(true);\n    login(auth).catch(error => {\n      setLoading(false);\n      notify(\n        typeof error === \"string\"\n          ? error\n          : typeof error === \"undefined\" || !error.message\n          ? \"ra.auth.sign_in_error\"\n          : error.message,\n        \"warning\"\n      );\n    });\n  };\n\n  const handleSSO = () => {\n    localStorage.setItem(\"sso_base_url\", ssoBaseUrl);\n    const ssoFullUrl = `${ssoBaseUrl}/_matrix/client/r0/login/sso/redirect?redirectUrl=${encodeURIComponent(\n      window.location.href\n    )}`;\n    window.location.href = ssoFullUrl;\n  };\n\n  const extractHomeServer = username => {\n    const usernameRegex = /@[a-zA-Z0-9._=\\-/]+:([a-zA-Z0-9\\-.]+\\.[a-zA-Z]+)/;\n    if (!username) return null;\n    const res = username.match(usernameRegex);\n    if (res) return res[1];\n    return null;\n  };\n\n  const UserData = ({ formData }) => {\n    const form = useForm();\n    const [serverVersion, setServerVersion] = useState(\"\");\n\n    const handleUsernameChange = _ => {\n      if (formData.base_url || cfg_base_url) return;\n      // check if username is a full qualified userId then set base_url accordially\n      const home_server = extractHomeServer(formData.username);\n      const wellKnownUrl = `https://${home_server}/.well-known/matrix/client`;\n      if (home_server) {\n        // fetch .well-known entry to get base_url\n        fetchUtils\n          .fetchJson(wellKnownUrl, { method: \"GET\" })\n          .then(({ json }) => {\n            form.change(\"base_url\", json[\"m.homeserver\"].base_url);\n          })\n          .catch(_ => {\n            // if there is no .well-known entry, try the home server name\n            form.change(\"base_url\", `https://${home_server}`);\n          });\n      }\n    };\n\n    useEffect(\n      _ => {\n        if (\n          !formData.base_url ||\n          !formData.base_url.match(/^(http|https):\\/\\/[a-zA-Z0-9\\-.]+$/)\n        )\n          return;\n        const versionUrl = `${formData.base_url}/_synapse/admin/v1/server_version`;\n        fetchUtils\n          .fetchJson(versionUrl, { method: \"GET\" })\n          .then(({ json }) => {\n            setServerVersion(\n              `${translate(\"synapseadmin.auth.server_version\")} ${\n                json[\"server_version\"]\n              }`\n            );\n          })\n          .catch(_ => {\n            setServerVersion(\"\");\n          });\n\n        // Set SSO Url\n        const authMethodUrl = `${formData.base_url}/_matrix/client/r0/login`;\n        let supportPass = false,\n          supportSSO = false;\n        fetchUtils\n          .fetchJson(authMethodUrl, { method: \"GET\" })\n          .then(({ json }) => {\n            json.flows.forEach(f => {\n              if (f.type === \"m.login.password\") {\n                supportPass = true;\n              } else if (f.type === \"m.login.sso\") {\n                supportSSO = true;\n              }\n            });\n            setSupportPassAuth(supportPass);\n            if (supportSSO) {\n              setSSOBaseUrl(formData.base_url);\n            } else {\n              setSSOBaseUrl(\"\");\n            }\n          })\n          .catch(_ => {\n            setSSOBaseUrl(\"\");\n          });\n      },\n      [formData.base_url]\n    );\n\n    return (\n      <div>\n        <div className={classes.input}>\n          <TextInput\n            autoFocus\n            name=\"username\"\n            component={renderInput}\n            label={translate(\"ra.auth.username\")}\n            disabled={loading || !supportPassAuth}\n            onBlur={handleUsernameChange}\n            resettable\n            fullWidth\n          />\n        </div>\n        <div className={classes.input}>\n          <PasswordInput\n            name=\"password\"\n            component={renderInput}\n            label={translate(\"ra.auth.password\")}\n            type=\"password\"\n            disabled={loading || !supportPassAuth}\n            resettable\n            fullWidth\n          />\n        </div>\n        <div className={classes.input}>\n          <TextInput\n            name=\"base_url\"\n            component={renderInput}\n            label={translate(\"synapseadmin.auth.base_url\")}\n            disabled={cfg_base_url || loading}\n            resettable\n            fullWidth\n          />\n        </div>\n        <div className={classes.serverVersion}>{serverVersion}</div>\n      </div>\n    );\n  };\n\n  return (\n    <Form\n      initialValues={{ base_url: cfg_base_url || base_url }}\n      onSubmit={handleSubmit}\n      validate={validate}\n      render={({ handleSubmit }) => (\n        <form onSubmit={handleSubmit} noValidate>\n          <div className={classes.main}>\n            <Card className={classes.card}>\n              <div className={classes.avatar}>\n                <Avatar className={classes.icon}>\n                  <LockIcon />\n                </Avatar>\n              </div>\n              <div className={classes.hint}>\n                {translate(\"synapseadmin.auth.welcome\")}\n              </div>\n              <div className={classes.form}>\n                <div className={classes.input}>\n                  <Select\n                    value={locale}\n                    onChange={e => {\n                      setLocale(e.target.value);\n                    }}\n                    fullWidth\n                    disabled={loading}\n                  >\n                    <MenuItem value=\"de\">Deutsch</MenuItem>\n                    <MenuItem value=\"en\">English</MenuItem>\n                    <MenuItem value=\"zh\">简体中文</MenuItem>\n                  </Select>\n                </div>\n                <FormDataConsumer>\n                  {formDataProps => <UserData {...formDataProps} />}\n                </FormDataConsumer>\n              </div>\n              <CardActions className={classes.actions}>\n                <Button\n                  variant=\"contained\"\n                  type=\"submit\"\n                  color=\"primary\"\n                  disabled={loading || !supportPassAuth}\n                  className={classes.button}\n                  fullWidth\n                >\n                  {loading && <CircularProgress size={25} thickness={2} />}\n                  {translate(\"ra.auth.sign_in\")}\n                </Button>\n                <Button\n                  variant=\"contained\"\n                  color=\"secondary\"\n                  onClick={handleSSO}\n                  disabled={loading || ssoBaseUrl === \"\"}\n                  className={classes.button}\n                  fullWidth\n                >\n                  {loading && <CircularProgress size={25} thickness={2} />}\n                  {translate(\"synapseadmin.auth.sso_sign_in\")}\n                </Button>\n              </CardActions>\n            </Card>\n            <Notification />\n          </div>\n        </form>\n      )}\n    />\n  );\n};\n\nexport default LoginPage;\n","import React from \"react\";\nimport { cloneElement } from \"react\";\nimport {\n  Datagrid,\n  ExportButton,\n  Filter,\n  List,\n  NumberField,\n  Pagination,\n  sanitizeListRestProps,\n  SearchInput,\n  TextField,\n  TopToolbar,\n  useListContext,\n} from \"react-admin\";\nimport { DeleteMediaButton } from \"./media\";\n\nconst ListActions = props => {\n  const { className, exporter, filters, maxResults, ...rest } = props;\n  const {\n    currentSort,\n    resource,\n    displayedFilters,\n    filterValues,\n    showFilter,\n    total,\n  } = useListContext();\n  return (\n    <TopToolbar className={className} {...sanitizeListRestProps(rest)}>\n      {filters &&\n        cloneElement(filters, {\n          resource,\n          showFilter,\n          displayedFilters,\n          filterValues,\n          context: \"button\",\n        })}\n      <DeleteMediaButton />\n      <ExportButton\n        disabled={total === 0}\n        resource={resource}\n        sort={currentSort}\n        filterValues={filterValues}\n        maxResults={maxResults}\n      />\n    </TopToolbar>\n  );\n};\n\nconst UserMediaStatsPagination = props => (\n  <Pagination {...props} rowsPerPageOptions={[10, 25, 50, 100, 500, 1000]} />\n);\n\nconst UserMediaStatsFilter = props => (\n  <Filter {...props}>\n    <SearchInput source=\"search_term\" alwaysOn />\n  </Filter>\n);\n\nexport const UserMediaStatsList = props => {\n  return (\n    <List\n      {...props}\n      actions={<ListActions />}\n      filters={<UserMediaStatsFilter />}\n      pagination={<UserMediaStatsPagination />}\n      sort={{ field: \"media_length\", order: \"DESC\" }}\n      bulkActionButtons={false}\n    >\n      <Datagrid rowClick={(id, basePath, record) => \"/users/\" + id + \"/media\"}>\n        <TextField source=\"user_id\" label=\"resources.users.fields.id\" />\n        <TextField\n          source=\"displayname\"\n          label=\"resources.users.fields.displayname\"\n        />\n        <NumberField source=\"media_count\" />\n        <NumberField source=\"media_length\" />\n      </Datagrid>\n    </List>\n  );\n};\n","import React, { useState } from \"react\";\nimport {\n  Button as ReactAdminButton,\n  useDataProvider,\n  useNotify,\n  Title,\n} from \"react-admin\";\nimport { parse as parseCsv, unparse as unparseCsv } from \"papaparse\";\nimport GetAppIcon from \"@material-ui/icons/GetApp\";\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  FormControlLabel,\n  Checkbox,\n  NativeSelect,\n} from \"@material-ui/core\";\nimport { useTranslate } from \"ra-core\";\nimport Container from \"@material-ui/core/Container/Container\";\nimport { generateRandomUser } from \"./users\";\n\nconst LOGGING = true;\n\nexport const ImportButton = ({ label, variant = \"text\" }) => {\n  return (\n    <ReactAdminButton\n      color=\"primary\"\n      component=\"span\"\n      variant={variant}\n      label={label}\n    >\n      <GetAppIcon style={{ transform: \"rotate(180deg)\", fontSize: \"20\" }} />\n    </ReactAdminButton>\n  );\n};\n\nconst expectedFields = [\"id\", \"displayname\"].sort();\nconst optionalFields = [\n  \"user_type\",\n  \"guest\",\n  \"admin\",\n  \"deactivated\",\n  \"avatar_url\",\n  \"password\",\n].sort();\n\nfunction TranslatableOption({ value, text }) {\n  const translate = useTranslate();\n  return <option value={value}>{translate(text)}</option>;\n}\n\nconst FilePicker = props => {\n  const [values, setValues] = useState(null);\n  const [error, setError] = useState(null);\n  const [stats, setStats] = useState(null);\n  const [dryRun, setDryRun] = useState(true);\n\n  const [progress, setProgress] = useState(null);\n\n  const [importResults, setImportResults] = useState(null);\n  const [skippedRecords, setSkippedRecords] = useState(null);\n\n  const [conflictMode, setConflictMode] = useState(\"stop\");\n  const [passwordMode, setPasswordMode] = useState(true);\n  const [useridMode, setUseridMode] = useState(\"ignore\");\n\n  const translate = useTranslate();\n  const notify = useNotify();\n\n  const dataProvider = useDataProvider();\n\n  const onFileChange = async e => {\n    if (progress !== null) return;\n\n    setValues(null);\n    setError(null);\n    setStats(null);\n    setImportResults(null);\n    const file = e.target.files ? e.target.files[0] : null;\n    /* Let's refuse some unreasonably big files instead of freezing\n     * up the browser */\n    if (file.size > 100000000) {\n      const message = translate(\"import_users.errors.unreasonably_big\", {\n        size: (file.size / (1024 * 1024)).toFixed(2),\n      });\n      notify(message);\n      setError(message);\n      return;\n    }\n    try {\n      parseCsv(file, {\n        header: true,\n        skipEmptyLines: true /* especially for a final EOL in the csv file */,\n        complete: result => {\n          if (result.error) {\n            setError(result.error);\n          }\n          /* Papaparse is very lenient, we may be able to salvage\n           * the data in the file. */\n          verifyCsv(result, { setValues, setStats, setError });\n        },\n      });\n    } catch {\n      setError(true);\n      return null;\n    }\n  };\n\n  const verifyCsv = (\n    { data, meta, errors },\n    { setValues, setStats, setError }\n  ) => {\n    /* First, verify the presence of required fields */\n    let eF = Array.from(expectedFields);\n    let oF = Array.from(optionalFields);\n\n    meta.fields.forEach(name => {\n      if (eF.includes(name)) {\n        eF = eF.filter(v => v !== name);\n      }\n      if (oF.includes(name)) {\n        oF = oF.filter(v => v !== name);\n      }\n    });\n\n    if (eF.length !== 0) {\n      setError(\n        translate(\"import_users.error.required_field\", { field: eF[0] })\n      );\n      return false;\n    }\n\n    // XXX after deciding on how \"name\" and friends should be handled below,\n    //     this place will want changes, too.\n\n    /* Collect some stats to prevent sneaky csv files from adding admin\n       users or something.\n     */\n    let stats = {\n      user_types: { default: 0 },\n      is_guest: 0,\n      admin: 0,\n      deactivated: 0,\n      password: 0,\n      avatar_url: 0,\n      id: 0,\n\n      total: data.length,\n    };\n\n    data.forEach((line, idx) => {\n      if (line.user_type === undefined || line.user_type === \"\") {\n        stats.user_types.default++;\n      } else {\n        stats.user_types[line.user_type] += 1;\n      }\n      /* XXX correct the csv export that react-admin offers for the users\n       * resource so it gives sensible field names and doesn't duplicate\n       * id as \"name\"?\n       */\n      if (meta.fields.includes(\"name\")) {\n        delete line.name;\n      }\n      if (meta.fields.includes(\"user_type\")) {\n        delete line.user_type;\n      }\n      if (meta.fields.includes(\"is_admin\")) {\n        line.admin = line.is_admin;\n        delete line.is_admin;\n      }\n\n      [\"is_guest\", \"admin\", \"deactivated\"].forEach(f => {\n        if (line[f] === \"true\") {\n          stats[f]++;\n          line[f] = true; // we need true booleans instead of strings\n        } else {\n          if (line[f] !== \"false\" && line[f] !== \"\") {\n            errors.push(\n              translate(\"import_users.error.invalid_value\", {\n                field: f,\n                row: idx,\n              })\n            );\n          }\n          line[f] = false; // default values to false\n        }\n      });\n\n      if (line.password !== undefined && line.password !== \"\") {\n        stats.password++;\n      }\n\n      if (line.avatar_url !== undefined && line.avatar_url !== \"\") {\n        stats.avatar_url++;\n      }\n\n      if (line.id !== undefined && line.id !== \"\") {\n        stats.id++;\n      }\n    });\n\n    if (errors.length > 0) {\n      setError(errors);\n    }\n    setStats(stats);\n    setValues(data);\n\n    return true;\n  };\n\n  const runImport = async e => {\n    if (progress !== null) {\n      notify(\"import_users.errors.already_in_progress\");\n      return;\n    }\n\n    const results = await doImport(\n      dataProvider,\n      values,\n      conflictMode,\n      passwordMode,\n      useridMode,\n      dryRun,\n      setProgress,\n      setError\n    );\n    setImportResults(results);\n    // offer CSV download of skipped or errored records\n    // (so that the user doesn't have to filter out successful\n    // records manually when fixing stuff in the CSV)\n    setSkippedRecords(unparseCsv(results.skippedRecords));\n    if (LOGGING) console.log(\"Skipped records:\");\n    if (LOGGING) console.log(skippedRecords);\n  };\n\n  // XXX every single one of the requests will restart the activity indicator\n  //     which doesn't look very good.\n\n  const doImport = async (\n    dataProvider,\n    data,\n    conflictMode,\n    passwordMode,\n    useridMode,\n    dryRun,\n    setProgress,\n    setError\n  ) => {\n    let skippedRecords = [];\n    let erroredRecords = [];\n    let succeededRecords = [];\n    let changeStats = {\n      toAdmin: 0,\n      toGuest: 0,\n      toRegular: 0,\n      replacedPassword: 0,\n    };\n    let entriesDone = 0;\n    let entriesCount = data.length;\n    try {\n      setProgress({ done: entriesDone, limit: entriesCount });\n      for (const entry of data) {\n        let userRecord = {};\n        let overwriteData = {};\n        // No need to do a bunch of cryptographic random number getting if\n        // we are using neither a generated password nor a generated user id.\n        if (\n          useridMode === \"ignore\" ||\n          entry.id === undefined ||\n          entry.password === undefined ||\n          passwordMode === false\n        ) {\n          overwriteData = generateRandomUser();\n          // Ignoring IDs or the entry lacking an ID means we keep the\n          // ID field in the overwrite data.\n          if (!(useridMode === \"ignore\" || entry.id === undefined)) {\n            delete overwriteData.id;\n          }\n\n          // Not using passwords from the csv or this entry lacking a password\n          // means we keep the password field in the overwrite data.\n          if (\n            !(\n              passwordMode === false ||\n              entry.password === undefined ||\n              entry.password === \"\"\n            )\n          ) {\n            delete overwriteData.password;\n          }\n        }\n        /* TODO record update stats (especially admin no -> yes, deactivated x -> !x, ... */\n        Object.assign(userRecord, entry);\n        Object.assign(userRecord, overwriteData);\n\n        /* For these modes we will consider the ID that's in the record.\n         * If the mode is \"stop\", we will not continue adding more records, and\n         * we will offer information on what was already added and what was\n         * skipped.\n         *\n         * If the mode is \"skip\", we record the record for later, but don't\n         * send it to the server.\n         *\n         * If the mode is \"update\", we change fields that are reasonable to\n         * update.\n         *  - If the \"password mode\" is \"true\" (i.e. \"use passwords from csv\"):\n         *    - if the record has a password\n         *      - send the password along with the record\n         *    - if the record has no password\n         *      - generate a new password\n         *  - If the \"password mode\" is \"false\"\n         *    - never generate a new password to update existing users with\n         */\n\n        /* We just act as if there are no IDs in the CSV, so every user will be\n         * created anew.\n         * We do a simple retry loop so that an accidental hit on an existing ID\n         * doesn't trip us up.\n         */\n        if (LOGGING)\n          console.log(\n            \"will check for existence of record \" + JSON.stringify(userRecord)\n          );\n        let retries = 0;\n        const submitRecord = recordData => {\n          return dataProvider.getOne(\"users\", { id: recordData.id }).then(\n            async alreadyExists => {\n              if (LOGGING) console.log(\"already existed\");\n\n              if (useridMode === \"update\" || conflictMode === \"skip\") {\n                skippedRecords.push(recordData);\n              } else if (conflictMode === \"stop\") {\n                throw new Error(\n                  translate(\"import_users.error.id_exits\", {\n                    id: recordData.id,\n                  })\n                );\n              } else {\n                const overwriteData = generateRandomUser();\n                const newRecordData = Object.assign({}, recordData, {\n                  id: overwriteData.id,\n                });\n                retries++;\n                if (retries > 512) {\n                  console.warn(\"retry loop got stuck? pathological situation?\");\n                  skippedRecords.push(recordData);\n                } else {\n                  await submitRecord(newRecordData);\n                }\n              }\n            },\n            async okToSubmit => {\n              if (LOGGING)\n                console.log(\n                  \"OK to create record \" +\n                    recordData.id +\n                    \" (\" +\n                    recordData.displayname +\n                    \").\"\n                );\n\n              if (!dryRun) {\n                await dataProvider.create(\"users\", { data: recordData });\n              }\n              succeededRecords.push(recordData);\n            }\n          );\n        };\n\n        await submitRecord(userRecord);\n        entriesDone++;\n        setProgress({ done: entriesDone, limit: data.length });\n      }\n\n      setProgress(null);\n    } catch (e) {\n      setError(\n        translate(\"import_users.error.at_entry\", {\n          entry: entriesDone + 1,\n          message: e.message,\n        })\n      );\n      setProgress(null);\n    }\n    return {\n      skippedRecords,\n      erroredRecords,\n      succeededRecords,\n      totalRecordCount: entriesCount,\n      changeStats,\n      wasDryRun: dryRun,\n    };\n  };\n\n  const downloadSkippedRecords = () => {\n    const element = document.createElement(\"a\");\n    console.log(skippedRecords);\n    const file = new Blob([skippedRecords], {\n      type: \"text/comma-separated-values\",\n    });\n    element.href = URL.createObjectURL(file);\n    element.download = \"skippedRecords.csv\";\n    document.body.appendChild(element); // Required for this to work in FireFox\n    element.click();\n  };\n\n  const onConflictModeChanged = async e => {\n    if (progress !== null) {\n      return;\n    }\n\n    const value = e.target.value;\n    setConflictMode(value);\n  };\n\n  const onPasswordModeChange = e => {\n    if (progress !== null) {\n      return;\n    }\n\n    setPasswordMode(e.target.checked);\n  };\n\n  const onUseridModeChanged = async e => {\n    if (progress !== null) {\n      return;\n    }\n\n    const value = e.target.value;\n    setUseridMode(value);\n  };\n\n  const onDryRunModeChanged = ev => {\n    if (progress !== null) {\n      return;\n    }\n    setDryRun(ev.target.checked);\n  };\n\n  // render individual small components\n\n  const statsCards = stats &&\n    !importResults && [\n      <Container>\n        <CardHeader\n          title={translate(\"import_users.cards.importstats.header\")}\n        />\n        <CardContent>\n          <div>\n            {translate(\n              \"import_users.cards.importstats.users_total\",\n              stats.total\n            )}\n          </div>\n          <div>\n            {translate(\n              \"import_users.cards.importstats.guest_count\",\n              stats.is_guest\n            )}\n          </div>\n          <div>\n            {translate(\n              \"import_users.cards.importstats.admin_count\",\n              stats.admin\n            )}\n          </div>\n        </CardContent>\n      </Container>,\n      <Container>\n        <CardHeader title={translate(\"import_users.cards.ids.header\")} />\n        <CardContent>\n          <div>\n            {stats.id === stats.total\n              ? translate(\"import_users.cards.ids.all_ids_present\")\n              : translate(\"import_users.cards.ids.count_ids_present\", stats.id)}\n          </div>\n          {stats.id > 0 ? (\n            <div>\n              <NativeSelect\n                onChange={onUseridModeChanged}\n                value={useridMode}\n                enabled={(progress !== null).toString()}\n              >\n                <TranslatableOption\n                  value=\"ignore\"\n                  text=\"import_users.cards.ids.mode.ignore\"\n                />\n                <TranslatableOption\n                  value=\"update\"\n                  text=\"import_users.cards.ids.mode.update\"\n                />\n              </NativeSelect>\n            </div>\n          ) : (\n            \"\"\n          )}\n        </CardContent>\n      </Container>,\n      <Container>\n        <CardHeader title={translate(\"import_users.cards.passwords.header\")} />\n        <CardContent>\n          <div>\n            {stats.password === stats.total\n              ? translate(\"import_users.cards.passwords.all_passwords_present\")\n              : translate(\n                  \"import_users.cards.passwords.count_passwords_present\",\n                  stats.password\n                )}\n          </div>\n          {stats.password > 0 ? (\n            <div>\n              <FormControlLabel\n                control={\n                  <Checkbox\n                    checked={passwordMode}\n                    enabled={(progress !== null).toString()}\n                    onChange={onPasswordModeChange}\n                  />\n                }\n                label={translate(\"import_users.cards.passwords.use_passwords\")}\n              />\n            </div>\n          ) : (\n            \"\"\n          )}\n        </CardContent>\n      </Container>,\n    ];\n\n  let conflictCards = stats && !importResults && (\n    <Container>\n      <CardHeader title={translate(\"import_users.cards.conflicts.header\")} />\n      <CardContent>\n        <div>\n          <NativeSelect\n            onChange={onConflictModeChanged}\n            value={conflictMode}\n            enabled={(progress !== null).toString()}\n          >\n            <TranslatableOption\n              value=\"stop\"\n              text=\"import_users.cards.conflicts.mode.stop\"\n            />\n            <TranslatableOption\n              value=\"skip\"\n              text=\"import_users.cards.conflicts.mode.skip\"\n            />\n          </NativeSelect>\n        </div>\n      </CardContent>\n    </Container>\n  );\n\n  let errorCards = error && (\n    <Container>\n      <CardHeader title={translate(\"import_users.error.error\")} />\n      <CardContent>\n        {(Array.isArray(error) ? error : [error]).map(e => (\n          <div>{e}</div>\n        ))}\n      </CardContent>\n    </Container>\n  );\n\n  let uploadCard = !importResults && (\n    <Container>\n      <CardHeader title={translate(\"import_users.cards.upload.header\")} />\n      <CardContent>\n        {translate(\"import_users.cards.upload.explanation\")}\n        <a href=\"./data/example.csv\">example.csv</a>\n        <br />\n        <br />\n        <input\n          type=\"file\"\n          onChange={onFileChange}\n          enabled={(progress !== null).toString()}\n        />\n      </CardContent>\n    </Container>\n  );\n\n  let resultsCard = importResults && (\n    <CardContent>\n      <CardHeader title={translate(\"import_users.cards.results.header\")} />\n      <div>\n        {translate(\n          \"import_users.cards.results.total\",\n          importResults.totalRecordCount\n        )}\n        <br />\n        {translate(\n          \"import_users.cards.results.successful\",\n          importResults.succeededRecords.length\n        )}\n        <br />\n        {importResults.skippedRecords.length\n          ? [\n              translate(\n                \"import_users.cards.results.skipped\",\n                importResults.skippedRecords.length\n              ),\n              <div>\n                <button onClick={downloadSkippedRecords}>\n                  {translate(\"import_users.cards.results.download_skipped\")}\n                </button>\n              </div>,\n              <br />,\n            ]\n          : \"\"}\n        {importResults.erroredRecords.length\n          ? [\n              translate(\n                \"import_users.cards.results.skipped\",\n                importResults.erroredRecords.length\n              ),\n              <br />,\n            ]\n          : \"\"}\n        <br />\n        {importResults.wasDryRun && [\n          translate(\"import_users.cards.results.simulated_only\"),\n          <br />,\n        ]}\n      </div>\n    </CardContent>\n  );\n\n  let startImportCard =\n    !values || values.length === 0 || importResults ? undefined : (\n      <CardActions>\n        <FormControlLabel\n          control={\n            <Checkbox\n              checked={dryRun}\n              onChange={onDryRunModeChanged}\n              enabled={(progress !== null).toString()}\n            />\n          }\n          label={translate(\"import_users.cards.startImport.simulate_only\")}\n        />\n        <Button\n          size=\"large\"\n          onClick={runImport}\n          enabled={(progress !== null).toString()}\n        >\n          {translate(\"import_users.cards.startImport.run_import\")}\n        </Button>\n        {progress !== null ? (\n          <div>\n            {progress.done} of {progress.limit} done\n          </div>\n        ) : null}\n      </CardActions>\n    );\n\n  let allCards = [];\n  if (uploadCard) allCards.push(uploadCard);\n  if (errorCards) allCards.push(errorCards);\n  if (conflictCards) allCards.push(conflictCards);\n  if (statsCards) allCards.push(...statsCards);\n  if (startImportCard) allCards.push(startImportCard);\n  if (resultsCard) allCards.push(resultsCard);\n\n  let cardContainer = <Card>{allCards}</Card>;\n\n  return [\n    <Title defaultTitle={translate(\"import_users.title\")} />,\n    cardContainer,\n  ];\n};\n\nexport const ImportFeature = FilePicker;\n","import React from \"react\";\nimport {\n  BooleanInput,\n  Create,\n  Datagrid,\n  DateField,\n  DateTimeInput,\n  Edit,\n  Filter,\n  List,\n  maxValue,\n  number,\n  NumberField,\n  NumberInput,\n  regex,\n  SimpleForm,\n  TextInput,\n  TextField,\n  Toolbar,\n} from \"react-admin\";\n\nconst date_format = {\n  year: \"numeric\",\n  month: \"2-digit\",\n  day: \"2-digit\",\n  hour: \"2-digit\",\n  minute: \"2-digit\",\n  second: \"2-digit\",\n};\n\nconst validateToken = [regex(/^[A-Za-z0-9._~-]{0,64}$/)];\nconst validateUsesAllowed = [number()];\nconst validateLength = [number(), maxValue(64)];\n\nconst dateParser = v => {\n  const d = new Date(v);\n  if (isNaN(d)) return 0;\n  return d.getTime();\n};\n\nconst dateFormatter = v => {\n  if (v === undefined || v === null) return;\n  const d = new Date(v);\n\n  const pad = \"00\";\n  const year = d.getFullYear().toString();\n  const month = (pad + (d.getMonth() + 1).toString()).slice(-2);\n  const day = (pad + d.getDate().toString()).slice(-2);\n  const hour = (pad + d.getHours().toString()).slice(-2);\n  const minute = (pad + d.getMinutes().toString()).slice(-2);\n\n  // target format yyyy-MM-ddThh:mm\n  return `${year}-${month}-${day}T${hour}:${minute}`;\n};\n\nconst RegistrationTokenFilter = props => (\n  <Filter {...props}>\n    <BooleanInput source=\"valid\" alwaysOn />\n  </Filter>\n);\n\nexport const RegistrationTokenList = props => {\n  return (\n    <List\n      {...props}\n      filters={<RegistrationTokenFilter />}\n      filterDefaultValues={{ valid: true }}\n      pagination={false}\n      perPage={500}\n    >\n      <Datagrid rowClick=\"edit\">\n        <TextField source=\"token\" sortable={false} />\n        <NumberField source=\"uses_allowed\" sortable={false} />\n        <NumberField source=\"pending\" sortable={false} />\n        <NumberField source=\"completed\" sortable={false} />\n        <DateField\n          source=\"expiry_time\"\n          showTime\n          options={date_format}\n          sortable={false}\n        />\n      </Datagrid>\n    </List>\n  );\n};\n\nexport const RegistrationTokenCreate = props => (\n  <Create {...props}>\n    <SimpleForm redirect=\"list\" toolbar={<Toolbar alwaysEnableSaveButton />}>\n      <TextInput\n        source=\"token\"\n        autoComplete=\"off\"\n        validate={validateToken}\n        resettable\n      />\n      <NumberInput\n        source=\"length\"\n        validate={validateLength}\n        helperText=\"resources.registration_tokens.helper.length\"\n        step={1}\n      />\n      <NumberInput\n        source=\"uses_allowed\"\n        validate={validateUsesAllowed}\n        step={1}\n      />\n      <DateTimeInput source=\"expiry_time\" parse={dateParser} />\n    </SimpleForm>\n  </Create>\n);\n\nexport const RegistrationTokenEdit = props => {\n  return (\n    <Edit {...props}>\n      <SimpleForm>\n        <TextInput source=\"token\" disabled />\n        <NumberInput source=\"pending\" disabled />\n        <NumberInput source=\"completed\" disabled />\n        <NumberInput\n          source=\"uses_allowed\"\n          validate={validateUsesAllowed}\n          step={1}\n        />\n        <DateTimeInput\n          source=\"expiry_time\"\n          parse={dateParser}\n          format={dateFormatter}\n        />\n      </SimpleForm>\n    </Edit>\n  );\n};\n","import germanMessages from \"ra-language-german\";\n\nconst de = {\n  ...germanMessages,\n  synapseadmin: {\n    auth: {\n      base_url: \"Heimserver URL\",\n      welcome: \"Willkommen bei Synapse-admin\",\n      server_version: \"Synapse Version\",\n      username_error: \"Bitte vollständigen Nutzernamen angeben: '@user:domain'\",\n      protocol_error: \"Die URL muss mit 'http://' oder 'https://' beginnen\",\n      url_error: \"Keine gültige Matrix Server URL\",\n      sso_sign_in: \"Anmeldung mit SSO\",\n    },\n    users: {\n      invalid_user_id: \"Lokaler Anteil der Matrix Benutzer-ID ohne Homeserver.\",\n      tabs: { sso: \"SSO\" },\n    },\n    rooms: {\n      details: \"Raumdetails\",\n      tabs: {\n        basic: \"Allgemein\",\n        members: \"Mitglieder\",\n        detail: \"Details\",\n        permission: \"Berechtigungen\",\n      },\n    },\n    reports: { tabs: { basic: \"Allgemein\", detail: \"Details\" } },\n  },\n  import_users: {\n    error: {\n      at_entry: \"Bei Eintrag %{entry}: %{message}\",\n      error: \"Fehler\",\n      required_field: \"Pflichtfeld '%{field}' fehlt\",\n      invalid_value:\n        \"Ungültiger Wert in Zeile %{row}. Feld '%{field}' darf nur die Werte 'true' oder 'false' enthalten\",\n      unreasonably_big: \"Datei ist zu groß für den Import (%{size} Megabytes)\",\n      already_in_progress: \"Es läuft bereits ein Import\",\n      id_exits: \"ID %{id} existiert bereits\",\n    },\n    title: \"Benutzer aus CSV importieren\",\n    goToPdf: \"Gehe zum PDF\",\n    cards: {\n      importstats: {\n        header: \"Benutzer importieren\",\n        users_total:\n          \"%{smart_count} Benutzer in der CSV Datei |||| %{smart_count} Benutzer in der CSV Datei\",\n        guest_count: \"%{smart_count} Gast |||| %{smart_count} Gäste\",\n        admin_count:\n          \"%{smart_count} Server Administrator |||| %{smart_count} Server Administratoren\",\n      },\n      conflicts: {\n        header: \"Konfliktstrategie\",\n        mode: {\n          stop: \"Stoppe bei Fehlern\",\n          skip: \"Zeige Fehler und überspringe fehlerhafte Einträge\",\n        },\n      },\n      ids: {\n        header: \"IDs\",\n        all_ids_present: \"IDs in jedem Eintrag vorhanden\",\n        count_ids_present:\n          \"%{smart_count} Eintrag mit ID |||| %{smart_count} Einträge mit IDs\",\n        mode: {\n          ignore: \"Ignoriere IDs der CSV-Datei und erstelle neue\",\n          update: \"Aktualisiere existierende Benutzer\",\n        },\n      },\n      passwords: {\n        header: \"Passwörter\",\n        all_passwords_present: \"Passwörter in jedem Eintrag vorhanden\",\n        count_passwords_present:\n          \"%{smart_count} Eintrag mit Passwort |||| %{smart_count} Einträge mit Passwörtern\",\n        use_passwords: \"Verwende Passwörter aus der CSV Datei\",\n      },\n      upload: {\n        header: \"CSV Datei importieren\",\n        explanation:\n          \"Hier können Sie eine Datei mit kommagetrennten Daten hochladen, die verwendet werden um Benutzer anzulegen oder zu ändern. Die Datei muss mindestens die Felder 'id' und 'displayname' enthalten. Hier können Sie eine Beispieldatei herunterladen und anpassen: \",\n      },\n      startImport: {\n        simulate_only: \"Nur simulieren\",\n        run_import: \"Importieren\",\n      },\n      results: {\n        header: \"Ergebnis\",\n        total:\n          \"%{smart_count} Eintrag insgesamt |||| %{smart_count} Einträge insgesamt\",\n        successful: \"%{smart_count} Einträge erfolgreich importiert\",\n        skipped: \"%{smart_count} Einträge übersprungen\",\n        download_skipped: \"Übersprungene Einträge herunterladen\",\n        with_error:\n          \"%{smart_count} Eintrag mit Fehlern ||| %{smart_count} Einträge mit Fehlern\",\n        simulated_only: \"Import-Vorgang war nur simuliert\",\n      },\n    },\n  },\n  resources: {\n    users: {\n      name: \"Benutzer\",\n      email: \"E-Mail\",\n      msisdn: \"Telefon\",\n      threepid: \"E-Mail / Telefon\",\n      fields: {\n        avatar: \"Avatar\",\n        id: \"Benutzer-ID\",\n        name: \"Name\",\n        is_guest: \"Gast\",\n        admin: \"Server Administrator\",\n        deactivated: \"Deaktiviert\",\n        guests: \"Zeige Gäste\",\n        show_deactivated: \"Zeige deaktivierte Benutzer\",\n        user_id: \"Suche Benutzer\",\n        displayname: \"Anzeigename\",\n        password: \"Passwort\",\n        avatar_url: \"Avatar URL\",\n        avatar_src: \"Avatar\",\n        medium: \"Medium\",\n        threepids: \"3PIDs\",\n        address: \"Adresse\",\n        creation_ts_ms: \"Zeitpunkt der Erstellung\",\n        consent_version: \"Zugestimmte Geschäftsbedingungen\",\n        auth_provider: \"Provider\",\n      },\n      helper: {\n        deactivate:\n          \"Sie müssen ein Passwort angeben, um ein Konto wieder zu aktivieren.\",\n        erase: \"DSGVO konformes Löschen der Benutzerdaten\",\n      },\n      action: {\n        erase: \"Lösche Benutzerdaten\",\n      },\n    },\n    rooms: {\n      name: \"Raum |||| Räume\",\n      fields: {\n        room_id: \"Raum-ID\",\n        name: \"Name\",\n        canonical_alias: \"Alias\",\n        joined_members: \"Mitglieder\",\n        joined_local_members: \"Lokale Mitglieder\",\n        joined_local_devices: \"Lokale Endgeräte\",\n        state_events: \"Zustandsereignisse / Komplexität\",\n        version: \"Version\",\n        is_encrypted: \"Verschlüsselt\",\n        encryption: \"Verschlüsselungs-Algorithmus\",\n        federatable: \"Fö­de­rierbar\",\n        public: \"Sichtbar im Raumverzeichnis\",\n        creator: \"Ersteller\",\n        join_rules: \"Beitrittsregeln\",\n        guest_access: \"Gastzugriff\",\n        history_visibility: \"Historie-Sichtbarkeit\",\n        topic: \"Thema\",\n        avatar: \"Avatar\",\n      },\n      helper: {\n        forward_extremities:\n          \"Forward extremities are the leaf events at the end of a Directed acyclic graph (DAG) in a room, aka events that have no children. The more exist in a room, the more state resolution that Synapse needs to perform (hint: it's an expensive operation). While Synapse has code to prevent too many of these existing at one time in a room, bugs can sometimes make them crop up again. If a room has >10 forward extremities, it's worth checking which room is the culprit and potentially removing them using the SQL queries mentioned in #1760.\",\n      },\n      enums: {\n        join_rules: {\n          public: \"Öffentlich\",\n          knock: \"Auf Anfrage\",\n          invite: \"Nur auf Einladung\",\n          private: \"Privat\",\n        },\n        guest_access: {\n          can_join: \"Gäste können beitreten\",\n          forbidden: \"Gäste können nicht beitreten\",\n        },\n        history_visibility: {\n          invited: \"Ab Einladung\",\n          joined: \"Ab Beitritt\",\n          shared: \"Ab Setzen der Einstellung\",\n          world_readable: \"Jeder\",\n        },\n        unencrypted: \"Nicht verschlüsselt\",\n      },\n      action: {\n        erase: {\n          title: \"Raum löschen\",\n          content:\n            \"Sind Sie sicher dass Sie den Raum löschen möchten? Diese Aktion kann nicht rückgängig gemacht werden. Alle Nachrichten und Medien, die der Raum beinhaltet werden vom Server gelöscht!\",\n        },\n      },\n    },\n    reports: {\n      name: \"Ereignisbericht |||| Ereignisberichte\",\n      fields: {\n        id: \"ID\",\n        received_ts: \"Meldezeit\",\n        user_id: \"Meldender\",\n        name: \"Raumname\",\n        score: \"Wert\",\n        reason: \"Grund\",\n        event_id: \"Event-ID\",\n        event_json: {\n          origin: \"Ursprungsserver\",\n          origin_server_ts: \"Sendezeit\",\n          type: \"Eventtyp\",\n          content: {\n            msgtype: \"Inhaltstyp\",\n            body: \"Nachrichteninhalt\",\n            format: \"Nachrichtenformat\",\n            formatted_body: \"Formatierter Nachrichteninhalt\",\n            algorithm: \"Verschlüsselungsalgorithmus\",\n          },\n        },\n      },\n    },\n    connections: {\n      name: \"Verbindungen\",\n      fields: {\n        last_seen: \"Datum\",\n        ip: \"IP-Adresse\",\n        user_agent: \"User Agent\",\n      },\n    },\n    devices: {\n      name: \"Gerät |||| Geräte\",\n      fields: {\n        device_id: \"Geräte-ID\",\n        display_name: \"Gerätename\",\n        last_seen_ts: \"Zeitstempel\",\n        last_seen_ip: \"IP-Adresse\",\n      },\n      action: {\n        erase: {\n          title: \"Entferne %{id}\",\n          content: 'Möchten Sie das Gerät \"%{name}\" wirklich entfernen?',\n          success: \"Gerät erfolgreich entfernt.\",\n          failure: \"Beim Entfernen ist ein Fehler aufgetreten.\",\n        },\n      },\n    },\n    users_media: {\n      name: \"Medien\",\n      fields: {\n        media_id: \"Medien ID\",\n        media_length: \"Größe\",\n        media_type: \"Typ\",\n        upload_name: \"Dateiname\",\n        quarantined_by: \"Zur Quarantäne hinzugefügt\",\n        safe_from_quarantine: \"Schutz vor Quarantäne\",\n        created_ts: \"Erstellt\",\n        last_access_ts: \"Letzter Zugriff\",\n      },\n    },\n    delete_media: {\n      name: \"Medien\",\n      fields: {\n        before_ts: \"Letzter Zugriff vor\",\n        size_gt: \"Größer als (in Bytes)\",\n        keep_profiles: \"Behalte Profilbilder\",\n      },\n      action: {\n        send: \"Medien löschen\",\n        send_success: \"Anfrage erfolgreich versendet.\",\n        send_failure: \"Beim Versenden ist ein Fehler aufgetreten.\",\n      },\n      helper: {\n        send: \"Diese API löscht die lokalen Medien von der Festplatte des eigenen Servers. Dies umfasst alle lokalen Miniaturbilder und Kopien von Medien. Diese API wirkt sich nicht auf Medien aus, die sich in externen Medien-Repositories befinden.\",\n      },\n    },\n    protect_media: {\n      action: {\n        create: \"Ungeschützt, Schutz erstellen\",\n        delete: \"Geschützt, Schutz aufheben\",\n        none: \"In Quarantäne\",\n        send_success: \"Erfolgreich den Schutz-Status geändert.\",\n        send_failure: \"Beim Versenden ist ein Fehler aufgetreten.\",\n      },\n    },\n    quarantine_media: {\n      action: {\n        name: \"Quarantäne\",\n        create: \"Zur Quarantäne hinzufügen\",\n        delete: \"In Quarantäne, Quarantäne aufheben\",\n        none: \"Geschützt vor Quarantäne\",\n        send_success: \"Erfolgreich den Quarantäne-Status geändert.\",\n        send_failure: \"Beim Versenden ist ein Fehler aufgetreten.\",\n      },\n    },\n    pushers: {\n      name: \"Pusher |||| Pushers\",\n      fields: {\n        app: \"App\",\n        app_display_name: \"App-Anzeigename\",\n        app_id: \"App ID\",\n        device_display_name: \"Geräte-Anzeigename\",\n        kind: \"Art\",\n        lang: \"Sprache\",\n        profile_tag: \"Profil-Tag\",\n        pushkey: \"Pushkey\",\n        data: { url: \"URL\" },\n      },\n    },\n    servernotices: {\n      name: \"Serverbenachrichtigungen\",\n      send: \"Servernachricht versenden\",\n      fields: {\n        body: \"Nachricht\",\n      },\n      action: {\n        send: \"Sende Nachricht\",\n        send_success: \"Nachricht erfolgreich versendet.\",\n        send_failure: \"Beim Versenden ist ein Fehler aufgetreten.\",\n      },\n      helper: {\n        send: 'Sendet eine Serverbenachrichtigung an die ausgewählten Nutzer. Hierfür muss das Feature \"Server Notices\" auf dem Server aktiviert sein.',\n      },\n    },\n    user_media_statistics: {\n      name: \"Dateien je Benutzer\",\n      fields: {\n        media_count: \"Anzahl der Dateien\",\n        media_length: \"Größe der Dateien\",\n      },\n    },\n    forward_extremities: {\n      name: \"Vorderextremitäten\",\n      fields: {\n        id: \"Event-ID\",\n        received_ts: \"Zeitstempel\",\n        depth: \"Tiefe\",\n        state_group: \"Zustandsgruppe\",\n      },\n    },\n    room_state: {\n      name: \"Zustandsereignisse\",\n      fields: {\n        type: \"Typ\",\n        content: \"Inhalt\",\n        origin_server_ts: \"Sendezeit\",\n        sender: \"Absender\",\n      },\n    },\n    room_directory: {\n      name: \"Raumverzeichnis\",\n      fields: {\n        world_readable: \"Gastbenutzer dürfen ohne Beitritt lesen\",\n        guest_can_join: \"Gastbenutzer dürfen beitreten\",\n      },\n      action: {\n        title:\n          \"Raum aus Verzeichnis löschen |||| %{smart_count} Räume aus Verzeichnis löschen\",\n        content:\n          \"Möchten Sie den Raum wirklich aus dem Raumverzeichnis löschen? |||| Möchten Sie die %{smart_count} Räume wirklich aus dem Raumverzeichnis löschen?\",\n        erase: \"Lösche aus Verzeichnis\",\n        create: \"Eintragen ins Verzeichnis\",\n        send_success: \"Raum erfolgreich eingetragen.\",\n        send_failure: \"Beim Entfernen ist ein Fehler aufgetreten.\",\n      },\n    },\n    registration_tokens: {\n      name: \"Registrierungstoken\",\n      fields: {\n        token: \"Token\",\n        valid: \"Gültige Token\",\n        uses_allowed: \"Anzahl\",\n        pending: \"Ausstehend\",\n        completed: \"Abgeschlossen\",\n        expiry_time: \"Ablaufzeit\",\n        length: \"Länge\",\n      },\n      helper: { length: \"Länge des Tokens, wenn kein Token vorgegeben wird.\" },\n    },\n  },\n  ra: {\n    ...germanMessages.ra,\n    action: {\n      ...germanMessages.ra.action,\n      unselect: \"Abwählen\",\n    },\n    auth: {\n      ...germanMessages.ra.auth,\n      auth_check_error: \"Anmeldung fehlgeschlagen\",\n    },\n    input: {\n      ...germanMessages.ra.input,\n      password: {\n        ...germanMessages.ra.input.password,\n        toggle_hidden: \"Anzeigen\",\n        toggle_visible: \"Verstecken\",\n      },\n    },\n    notification: {\n      ...germanMessages.ra.notification,\n      logged_out: \"Abgemeldet\",\n    },\n    page: {\n      ...germanMessages.ra.page,\n      empty: \"Keine Einträge vorhanden\",\n      invite: \"\",\n    },\n    navigation: {\n      ...germanMessages.ra.navigation,\n      skip_nav: \"Zum Inhalt springen\",\n    },\n  },\n};\nexport default de;\n","import englishMessages from \"ra-language-english\";\n\nconst en = {\n  ...englishMessages,\n  synapseadmin: {\n    auth: {\n      base_url: \"Homeserver URL\",\n      welcome: \"Welcome to Synapse-admin\",\n      server_version: \"Synapse version\",\n      username_error: \"Please enter fully qualified user ID: '@user:domain'\",\n      protocol_error: \"URL has to start with 'http://' or 'https://'\",\n      url_error: \"Not a valid Matrix server URL\",\n      sso_sign_in: \"Sign in with SSO\",\n    },\n    users: {\n      invalid_user_id: \"Localpart of a Matrix user-id without homeserver.\",\n      tabs: { sso: \"SSO\" },\n    },\n    rooms: {\n      tabs: {\n        basic: \"Basic\",\n        members: \"Members\",\n        detail: \"Details\",\n        permission: \"Permissions\",\n      },\n    },\n    reports: { tabs: { basic: \"Basic\", detail: \"Details\" } },\n  },\n  import_users: {\n    error: {\n      at_entry: \"At entry %{entry}: %{message}\",\n      error: \"Error\",\n      required_field: \"Required field '%{field}' is not present\",\n      invalid_value:\n        \"Invalid value on line %{row}. '%{field}' field may only be 'true' or 'false'\",\n      unreasonably_big:\n        \"Refused to load unreasonably big file of %{size} megabytes\",\n      already_in_progress: \"An import run is already in progress\",\n      id_exits: \"ID %{id} already present\",\n    },\n    title: \"Import users via CSV\",\n    goToPdf: \"Go to PDF\",\n    cards: {\n      importstats: {\n        header: \"Import users\",\n        users_total:\n          \"%{smart_count} user in CSV file |||| %{smart_count} users in CSV file\",\n        guest_count: \"%{smart_count} guest |||| %{smart_count} guests\",\n        admin_count: \"%{smart_count} admin |||| %{smart_count} admins\",\n      },\n      conflicts: {\n        header: \"Conflict strategy\",\n        mode: {\n          stop: \"Stop on conflict\",\n          skip: \"Show error and skip on conflict\",\n        },\n      },\n      ids: {\n        header: \"IDs\",\n        all_ids_present: \"IDs present on every entry\",\n        count_ids_present:\n          \"%{smart_count} entry with ID |||| %{smart_count} entries with IDs\",\n        mode: {\n          ignore: \"Ignore IDs in CSV and create new ones\",\n          update: \"Update existing records\",\n        },\n      },\n      passwords: {\n        header: \"Passwords\",\n        all_passwords_present: \"Passwords present on every entry\",\n        count_passwords_present:\n          \"%{smart_count} entry with password |||| %{smart_count} entries with passwords\",\n        use_passwords: \"Use passwords from CSV\",\n      },\n      upload: {\n        header: \"Input CSV file\",\n        explanation:\n          \"Here you can upload a file with comma separated values that is processed to create or update users. The file must include the fields 'id' and 'displayname'. You can download and adapt an example file here: \",\n      },\n      startImport: {\n        simulate_only: \"Simulate only\",\n        run_import: \"Import\",\n      },\n      results: {\n        header: \"Import results\",\n        total:\n          \"%{smart_count} entry in total |||| %{smart_count} entries in total\",\n        successful: \"%{smart_count} entries successfully imported\",\n        skipped: \"%{smart_count} entries skipped\",\n        download_skipped: \"Download skipped records\",\n        with_error:\n          \"%{smart_count} entry with errors ||| %{smart_count} entries with errors\",\n        simulated_only: \"Run was only simulated\",\n      },\n    },\n  },\n  resources: {\n    users: {\n      name: \"User |||| Users\",\n      email: \"Email\",\n      msisdn: \"Phone\",\n      threepid: \"Email / Phone\",\n      fields: {\n        avatar: \"Avatar\",\n        id: \"User-ID\",\n        name: \"Name\",\n        is_guest: \"Guest\",\n        admin: \"Server Administrator\",\n        deactivated: \"Deactivated\",\n        guests: \"Show guests\",\n        show_deactivated: \"Show deactivated users\",\n        user_id: \"Search user\",\n        displayname: \"Displayname\",\n        password: \"Password\",\n        avatar_url: \"Avatar URL\",\n        avatar_src: \"Avatar\",\n        medium: \"Medium\",\n        threepids: \"3PIDs\",\n        address: \"Address\",\n        creation_ts_ms: \"Creation timestamp\",\n        consent_version: \"Consent version\",\n        auth_provider: \"Provider\",\n      },\n      helper: {\n        deactivate: \"You must provide a password to re-activate an account.\",\n        erase: \"Mark the user as GDPR-erased\",\n      },\n      action: {\n        erase: \"Erase user data\",\n      },\n    },\n    rooms: {\n      name: \"Room |||| Rooms\",\n      fields: {\n        room_id: \"Room-ID\",\n        name: \"Name\",\n        canonical_alias: \"Alias\",\n        joined_members: \"Members\",\n        joined_local_members: \"Local members\",\n        joined_local_devices: \"Local devices\",\n        state_events: \"State events / Complexity\",\n        version: \"Version\",\n        is_encrypted: \"Encrypted\",\n        encryption: \"Encryption\",\n        federatable: \"Federatable\",\n        public: \"Visible in room directory\",\n        creator: \"Creator\",\n        join_rules: \"Join rules\",\n        guest_access: \"Guest access\",\n        history_visibility: \"History visibility\",\n        topic: \"Topic\",\n        avatar: \"Avatar\",\n      },\n      helper: {\n        forward_extremities:\n          \"Forward extremities are the leaf events at the end of a Directed acyclic graph (DAG) in a room, aka events that have no children. The more exist in a room, the more state resolution that Synapse needs to perform (hint: it's an expensive operation). While Synapse has code to prevent too many of these existing at one time in a room, bugs can sometimes make them crop up again. If a room has >10 forward extremities, it's worth checking which room is the culprit and potentially removing them using the SQL queries mentioned in #1760.\",\n      },\n      enums: {\n        join_rules: {\n          public: \"Public\",\n          knock: \"Knock\",\n          invite: \"Invite\",\n          private: \"Private\",\n        },\n        guest_access: {\n          can_join: \"Guests can join\",\n          forbidden: \"Guests can not join\",\n        },\n        history_visibility: {\n          invited: \"Since invited\",\n          joined: \"Since joined\",\n          shared: \"Since shared\",\n          world_readable: \"Anyone\",\n        },\n        unencrypted: \"Unencrypted\",\n      },\n      action: {\n        erase: {\n          title: \"Delete room\",\n          content:\n            \"Are you sure you want to delete the room? This cannot be undone. All messages and shared media in the room will be deleted from the server!\",\n        },\n      },\n    },\n    reports: {\n      name: \"Reported event |||| Reported events\",\n      fields: {\n        id: \"ID\",\n        received_ts: \"report time\",\n        user_id: \"announcer\",\n        name: \"name of the room\",\n        score: \"score\",\n        reason: \"reason\",\n        event_id: \"event ID\",\n        event_json: {\n          origin: \"origin server\",\n          origin_server_ts: \"time of send\",\n          type: \"event typ\",\n          content: {\n            msgtype: \"content type\",\n            body: \"content\",\n            format: \"format\",\n            formatted_body: \"formatted content\",\n            algorithm: \"algorithm\",\n          },\n        },\n      },\n    },\n    connections: {\n      name: \"Connections\",\n      fields: {\n        last_seen: \"Date\",\n        ip: \"IP address\",\n        user_agent: \"User agent\",\n      },\n    },\n    devices: {\n      name: \"Device |||| Devices\",\n      fields: {\n        device_id: \"Device-ID\",\n        display_name: \"Device name\",\n        last_seen_ts: \"Timestamp\",\n        last_seen_ip: \"IP address\",\n      },\n      action: {\n        erase: {\n          title: \"Removing %{id}\",\n          content: 'Are you sure you want to remove the device \"%{name}\"?',\n          success: \"Device successfully removed.\",\n          failure: \"An error has occurred.\",\n        },\n      },\n    },\n    users_media: {\n      name: \"Media\",\n      fields: {\n        media_id: \"Media ID\",\n        media_length: \"File Size (in Bytes)\",\n        media_type: \"Type\",\n        upload_name: \"File name\",\n        quarantined_by: \"Quarantined by\",\n        safe_from_quarantine: \"Safe from quarantine\",\n        created_ts: \"Created\",\n        last_access_ts: \"Last access\",\n      },\n    },\n    delete_media: {\n      name: \"Media\",\n      fields: {\n        before_ts: \"last access before\",\n        size_gt: \"Larger then (in bytes)\",\n        keep_profiles: \"Keep profile images\",\n      },\n      action: {\n        send: \"Delete media\",\n        send_success: \"Request successfully sent.\",\n        send_failure: \"An error has occurred.\",\n      },\n      helper: {\n        send: \"This API deletes the local media from the disk of your own server. This includes any local thumbnails and copies of media downloaded. This API will not affect media that has been uploaded to external media repositories.\",\n      },\n    },\n    protect_media: {\n      action: {\n        create: \"Unprotected, create protection\",\n        delete: \"Protected, remove protection\",\n        none: \"In quarantine\",\n        send_success: \"Successfully changed the protection status.\",\n        send_failure: \"An error has occurred.\",\n      },\n    },\n    quarantine_media: {\n      action: {\n        name: \"Quarantine\",\n        create: \"Add to quarantine\",\n        delete: \"In quarantine, unquarantine\",\n        none: \"Protected from quarantine\",\n        send_success: \"Successfully changed the quarantine status.\",\n        send_failure: \"An error has occurred.\",\n      },\n    },\n    pushers: {\n      name: \"Pusher |||| Pushers\",\n      fields: {\n        app: \"App\",\n        app_display_name: \"App display name\",\n        app_id: \"App ID\",\n        device_display_name: \"Device display name\",\n        kind: \"Kind\",\n        lang: \"Language\",\n        profile_tag: \"Profile tag\",\n        pushkey: \"Pushkey\",\n        data: { url: \"URL\" },\n      },\n    },\n    servernotices: {\n      name: \"Server Notices\",\n      send: \"Send server notices\",\n      fields: {\n        body: \"Message\",\n      },\n      action: {\n        send: \"Send note\",\n        send_success: \"Server notice successfully sent.\",\n        send_failure: \"An error has occurred.\",\n      },\n      helper: {\n        send: 'Sends a server notice to the selected users. The feature \"Server Notices\" has to be activated at the server.',\n      },\n    },\n    user_media_statistics: {\n      name: \"Users' media\",\n      fields: {\n        media_count: \"Media count\",\n        media_length: \"Media length\",\n      },\n    },\n    forward_extremities: {\n      name: \"Forward Extremities\",\n      fields: {\n        id: \"Event ID\",\n        received_ts: \"Timestamp\",\n        depth: \"Depth\",\n        state_group: \"State group\",\n      },\n    },\n    room_state: {\n      name: \"State events\",\n      fields: {\n        type: \"Type\",\n        content: \"Content\",\n        origin_server_ts: \"time of send\",\n        sender: \"Sender\",\n      },\n    },\n    room_directory: {\n      name: \"Room directory\",\n      fields: {\n        world_readable: \"guest users may view without joining\",\n        guest_can_join: \"guest users may join\",\n      },\n      action: {\n        title:\n          \"Delete room from directory |||| Delete %{smart_count} rooms from directory\",\n        content:\n          \"Are you sure you want to remove this room from directory? |||| Are you sure you want to remove these %{smart_count} rooms from directory\",\n        erase: \"Delete from room directory\",\n        create: \"Publish in room directory\",\n        send_success: \"Room successfully published.\",\n        send_failure: \"An error has occurred.\",\n      },\n    },\n  },\n  registration_tokens: {\n    name: \"Registration tokens\",\n    fields: {\n      token: \"Token\",\n      valid: \"Valid token\",\n      uses_allowed: \"Uses allowed\",\n      pending: \"Pending\",\n      completed: \"Completed\",\n      expiry_time: \"Expiry time\",\n      length: \"Length\",\n    },\n    helper: { length: \"Length of the token if no token is given.\" },\n  },\n};\nexport default en;\n","import React from \"react\";\nimport { Admin, Resource, resolveBrowserLocale } from \"react-admin\";\nimport polyglotI18nProvider from \"ra-i18n-polyglot\";\nimport authProvider from \"./synapse/authProvider\";\nimport dataProvider from \"./synapse/dataProvider\";\nimport { UserList, UserCreate, UserEdit } from \"./components/users\";\nimport { RoomList, RoomShow } from \"./components/rooms\";\nimport { ReportList, ReportShow } from \"./components/EventReports\";\nimport LoginPage from \"./components/LoginPage\";\nimport UserIcon from \"@material-ui/icons/Group\";\nimport ConfirmationNumberIcon from \"@material-ui/icons/ConfirmationNumber\";\nimport EqualizerIcon from \"@material-ui/icons/Equalizer\";\nimport { UserMediaStatsList } from \"./components/statistics\";\nimport RoomIcon from \"@material-ui/icons/ViewList\";\nimport ReportIcon from \"@material-ui/icons/Warning\";\nimport FolderSharedIcon from \"@material-ui/icons/FolderShared\";\nimport { ImportFeature } from \"./components/ImportFeature\";\nimport {\n  RegistrationTokenCreate,\n  RegistrationTokenEdit,\n  RegistrationTokenList,\n} from \"./components/RegistrationTokens\";\nimport { RoomDirectoryList } from \"./components/RoomDirectory\";\nimport { Route } from \"react-router-dom\";\nimport germanMessages from \"./i18n/de\";\nimport englishMessages from \"./i18n/en\";\nimport chineseMessages from \"./i18n/zh\";\n\n// TODO: Can we use lazy loading together with browser locale?\nconst messages = {\n  de: germanMessages,\n  en: englishMessages,\n  zh: chineseMessages,\n};\nconst i18nProvider = polyglotI18nProvider(\n  locale => (messages[locale] ? messages[locale] : messages.en),\n  resolveBrowserLocale()\n);\n\nconst App = () => (\n  <Admin\n    disableTelemetry\n    loginPage={LoginPage}\n    authProvider={authProvider}\n    dataProvider={dataProvider}\n    i18nProvider={i18nProvider}\n    customRoutes={[\n      <Route key=\"userImport\" path=\"/import_users\" component={ImportFeature} />,\n    ]}\n  >\n    <Resource\n      name=\"users\"\n      list={UserList}\n      create={UserCreate}\n      edit={UserEdit}\n      icon={UserIcon}\n    />\n    <Resource name=\"rooms\" list={RoomList} show={RoomShow} icon={RoomIcon} />\n    <Resource\n      name=\"user_media_statistics\"\n      list={UserMediaStatsList}\n      icon={EqualizerIcon}\n    />\n    <Resource\n      name=\"reports\"\n      list={ReportList}\n      show={ReportShow}\n      icon={ReportIcon}\n    />\n    <Resource\n      name=\"room_directory\"\n      list={RoomDirectoryList}\n      icon={FolderSharedIcon}\n    />\n    <Resource\n      name=\"registration_tokens\"\n      list={RegistrationTokenList}\n      create={RegistrationTokenCreate}\n      edit={RegistrationTokenEdit}\n      icon={ConfirmationNumberIcon}\n    />\n    <Resource name=\"connections\" />\n    <Resource name=\"devices\" />\n    <Resource name=\"room_members\" />\n    <Resource name=\"users_media\" />\n    <Resource name=\"joined_rooms\" />\n    <Resource name=\"pushers\" />\n    <Resource name=\"servernotices\" />\n    <Resource name=\"forward_extremities\" />\n    <Resource name=\"room_state\" />\n  </Admin>\n);\n\nexport default App;\n","import chineseMessages from \"ra-language-chinese\";\n\nconst zh = {\n  ...chineseMessages,\n  synapseadmin: {\n    auth: {\n      base_url: \"服务器 URL\",\n      welcome: \"欢迎来到 Synapse-admin\",\n      server_version: \"Synapse 版本\",\n      username_error: \"请输入完整有效的用户 ID: '@user:domain'\",\n      protocol_error: \"URL 需要以'http://'或'https://'作为起始\",\n      url_error: \"不是一个有效的 Matrix 服务器地址\",\n      sso_sign_in: \"使用 SSO 登录\",\n    },\n    users: {\n      invalid_user_id:\n        \"必须要是一个有效的 Matrix 用户 ID ，例如 @user_id:homeserver\",\n      tabs: { sso: \"SSO\" },\n    },\n    rooms: {\n      tabs: {\n        basic: \"基本\",\n        members: \"成员\",\n        detail: \"细节\",\n        permission: \"权限\",\n      },\n      delete: {\n        title: \"删除房间\",\n        message:\n          \"您确定要删除这个房间吗？该操作无法被撤销。这个房间里所有的消息和分享的媒体都将被从服务器上删除！\",\n      },\n    },\n    reports: { tabs: { basic: \"基本\", detail: \"细节\" } },\n  },\n  import_users: {\n    error: {\n      at_entry: \"在条目 %{entry}: %{message}\",\n      error: \"错误\",\n      required_field: \"需要的值 '%{field}' 未被设置。\",\n      invalid_value:\n        \"第 %{row} 行出现无效值。 '%{field}' 只可以是 'true' 或 'false'。\",\n      unreasonably_big: \"拒绝加载过大的文件： %{size} MB\",\n      already_in_progress: \"一个导入进程已经在运行中\",\n      id_exits: \"ID %{id} 已经存在\",\n    },\n    title: \"通过 CSV 导入用户\",\n    goToPdf: \"转到 PDF\",\n    cards: {\n      importstats: {\n        header: \"导入用户\",\n        users_total:\n          \"%{smart_count} 用户在 CSV 文件中 |||| %{smart_count} 用户在 CSV 文件中\",\n        guest_count: \"%{smart_count} 访客 |||| %{smart_count} 访客\",\n        admin_count: \"%{smart_count} 管理员 |||| %{smart_count} 管理员\",\n      },\n      conflicts: {\n        header: \"冲突处理策略\",\n        mode: {\n          stop: \"在冲突处停止\",\n          skip: \"显示错误并跳过冲突\",\n        },\n      },\n      ids: {\n        header: \"IDs\",\n        all_ids_present: \"每条记录的 ID\",\n        count_ids_present:\n          \"%{smart_count} 个含 ID 的记录 |||| %{smart_count} 个含 ID 的记录\",\n        mode: {\n          ignore: \"忽略 CSV 中的 ID 并创建新的\",\n          update: \"更新已经存在的记录\",\n        },\n      },\n      passwords: {\n        header: \"密码\",\n        all_passwords_present: \"每条记录的密码\",\n        count_passwords_present:\n          \"%{smart_count} 个含密码的记录 |||| %{smart_count} 个含密码的记录\",\n        use_passwords: \"使用 CSV 中标记的密码\",\n      },\n      upload: {\n        header: \"导入 CSV 文件\",\n        explanation:\n          \"在这里，你可以上传一个用逗号分隔的文件，用于创建或更新用户。该文件必须包括 'id' 和 'displayname' 字段。你可以在这里下载并修改一个示例文件：\",\n      },\n      startImport: {\n        simulate_only: \"模拟模式\",\n        run_import: \"导入\",\n      },\n      results: {\n        header: \"导入结果\",\n        total: \"共计 %{smart_count} 条记录 |||| 共计 %{smart_count} 条记录\",\n        successful: \"%{smart_count} 条记录导入成功\",\n        skipped: \"跳过 %{smart_count} 条记录\",\n        download_skipped: \"下载跳过的记录\",\n        with_error:\n          \"%{smart_count} 条记录出现错误 ||| %{smart_count} 条记录出现错误\",\n        simulated_only: \"只是一次模拟运行\",\n      },\n    },\n  },\n  resources: {\n    users: {\n      name: \"用户\",\n      email: \"邮箱\",\n      msisdn: \"电话\",\n      threepid: \"邮箱 / 电话\",\n      fields: {\n        avatar: \"邮箱\",\n        id: \"用户 ID\",\n        name: \"用户名\",\n        is_guest: \"访客\",\n        admin: \"服务器管理员\",\n        deactivated: \"被禁用\",\n        guests: \"显示访客\",\n        show_deactivated: \"显示被禁用的账户\",\n        user_id: \"搜索用户\",\n        displayname: \"显示名字\",\n        password: \"密码\",\n        avatar_url: \"头像 URL\",\n        avatar_src: \"头像\",\n        medium: \"Medium\",\n        threepids: \"3PIDs\",\n        address: \"地址\",\n        creation_ts_ms: \"创建时间戳\",\n        consent_version: \"协议版本\",\n      },\n      helper: {\n        deactivate: \"您必须提供一串密码来激活账户。\",\n        erase: \"将用户标记为根据 GDPR 的要求抹除了\",\n      },\n      action: {\n        erase: \"抹除用户信息\",\n      },\n    },\n    rooms: {\n      name: \"房间\",\n      fields: {\n        room_id: \"房间 ID\",\n        name: \"房间名\",\n        canonical_alias: \"别名\",\n        joined_members: \"成员\",\n        joined_local_members: \"本地成员\",\n        state_events: \"状态事件\",\n        version: \"版本\",\n        is_encrypted: \"已经加密\",\n        encryption: \"加密\",\n        federatable: \"可联合的\",\n        public: \"公开\",\n        creator: \"创建者\",\n        join_rules: \"加入规则\",\n        guest_access: \"访客访问\",\n        history_visibility: \"历史可见性\",\n      },\n      enums: {\n        join_rules: {\n          public: \"公开\",\n          knock: \"申请\",\n          invite: \"邀请\",\n          private: \"私有\",\n        },\n        guest_access: {\n          can_join: \"访客可以加入\",\n          forbidden: \"访客不可加入\",\n        },\n        history_visibility: {\n          invited: \"自从被邀请\",\n          joined: \"自从加入\",\n          shared: \"自从分享\",\n          world_readable: \"任何人\",\n        },\n        unencrypted: \"未加密\",\n      },\n    },\n    reports: {\n      name: \"报告事件\",\n      fields: {\n        id: \"ID\",\n        received_ts: \"报告时间\",\n        user_id: \"报告者\",\n        name: \"房间名\",\n        score: \"分数\",\n        reason: \"原因\",\n        event_id: \"事件 ID\",\n        event_json: {\n          origin: \"原始服务器\",\n          origin_server_ts: \"发送时间\",\n          type: \"事件类型\",\n          content: {\n            msgtype: \"内容类型\",\n            body: \"内容\",\n            format: \"格式\",\n            formatted_body: \"格式化的数据\",\n            algorithm: \"算法\",\n          },\n        },\n      },\n    },\n    connections: {\n      name: \"连接\",\n      fields: {\n        last_seen: \"日期\",\n        ip: \"IP 地址\",\n        user_agent: \"用户代理 (UA)\",\n      },\n    },\n    devices: {\n      name: \"设备\",\n      fields: {\n        device_id: \"设备 ID\",\n        display_name: \"设备名\",\n        last_seen_ts: \"时间戳\",\n        last_seen_ip: \"IP 地址\",\n      },\n      action: {\n        erase: {\n          title: \"移除 %{id}\",\n          content: '您确定要移除设备 \"%{name}\"?',\n          success: \"设备移除成功。\",\n          failure: \"出现了一个错误。\",\n        },\n      },\n    },\n    users_media: {\n      name: \"媒体文件\",\n      fields: {\n        media_id: \"媒体文件 ID\",\n        media_length: \"长度\",\n        media_type: \"类型\",\n        upload_name: \"文件名\",\n        quarantined_by: \"被隔离\",\n        safe_from_quarantine: \"取消隔离\",\n        created_ts: \"创建\",\n        last_access_ts: \"上一次访问\",\n      },\n    },\n    delete_media: {\n      name: \"媒体文件\",\n      fields: {\n        before_ts: \"最后访问时间\",\n        size_gt: \"大于 (字节)\",\n        keep_profiles: \"保留头像\",\n      },\n      action: {\n        send: \"删除媒体\",\n        send_success: \"请求发送成功。\",\n        send_failure: \"出现了一个错误。\",\n      },\n      helper: {\n        send: \"这个API会删除您硬盘上的本地媒体。包含了任何的本地缓存和下载的媒体备份。这个API不会影响上传到外部媒体存储库上的媒体文件。\",\n      },\n    },\n    pushers: {\n      name: \"发布者\",\n      fields: {\n        app: \"App\",\n        app_display_name: \"App 名称\",\n        app_id: \"App ID\",\n        device_display_name: \"设备显示名\",\n        kind: \"类型\",\n        lang: \"语言\",\n        profile_tag: \"数据标签\",\n        pushkey: \"Pushkey\",\n        data: { url: \"URL\" },\n      },\n    },\n    servernotices: {\n      name: \"服务器提示\",\n      send: \"发送服务器提示\",\n      fields: {\n        body: \"信息\",\n      },\n      action: {\n        send: \"发送提示\",\n        send_success: \"服务器提示发送成功。\",\n        send_failure: \"出现了一个错误。\",\n      },\n      helper: {\n        send: '向选中的用户发送服务器提示。服务器配置中的 \"服务器提示(Server Notices)\" 选项需要被设置为启用。',\n      },\n    },\n    user_media_statistics: {\n      name: \"用户的媒体文件\",\n      fields: {\n        media_count: \"媒体文件统计\",\n        media_length: \"媒体文件长度\",\n      },\n    },\n  },\n};\nexport default zh;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}